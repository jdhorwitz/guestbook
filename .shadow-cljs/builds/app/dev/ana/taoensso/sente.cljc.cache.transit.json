["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente');\ngoog.require('cljs.core');\ngoog.require('clojure.string');\ngoog.require('cljs.core.async');\ngoog.require('taoensso.encore');\ngoog.require('taoensso.timbre');\ngoog.require('taoensso.sente.interfaces');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(105),(0)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.105);\n}\n/**\n * Useful for identifying client/server mismatch\n */\ntaoensso.sente.sente_version = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(11),(0)], null);\ntaoensso.sente.node_target_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\");\nif((typeof taoensso !== 'undefined') && (typeof taoensso.sente !== 'undefined') && (typeof taoensso.sente.debug_mode_QMARK__ !== 'undefined')){\n} else {\ntaoensso.sente.debug_mode_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\n}\ntaoensso.sente.expected = (function taoensso$sente$expected(expected,x){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),expected,new cljs.core.Keyword(null,\"actual\",\"actual\",107306363),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x),new cljs.core.Keyword(null,\"value\",\"value\",305978217),x], null)], null);\n});\n/**\n * Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n *   returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\n */\ntaoensso.sente.validate_event = (function taoensso$sente$validate_event(x){\nif((!(cljs.core.vector_QMARK_(x)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-type\",\"wrong-type\",929556915),taoensso.sente.expected(new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),x)], null);\n} else {\nif(cljs.core.not((function (){var G__66963 = cljs.core.count(x);\nvar fexpr__66962 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null);\nreturn (fexpr__66962.cljs$core$IFn$_invoke$arity$1 ? fexpr__66962.cljs$core$IFn$_invoke$arity$1(G__66963) : fexpr__66962.call(null,G__66963));\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-length\",\"wrong-length\",1367572281),taoensso.sente.expected(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),x)], null);\n} else {\nvar vec__66966 = x;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66966,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__66966,(1),null);\nif((!((ev_id instanceof cljs.core.Keyword)))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"wrong-id-type\",\"wrong-id-type\",-1213601689),taoensso.sente.expected(new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),ev_id)], null);\n} else {\nif(cljs.core.not(cljs.core.namespace(ev_id))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"unnamespaced-id\",\"unnamespaced-id\",1976189772),taoensso.sente.expected(new cljs.core.Keyword(null,\"namespaced-keyword\",\"namespaced-keyword\",131372895),ev_id)], null);\n} else {\nreturn null;\n\n}\n}\n\n}\n}\n});\n/**\n * Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n *   throws a validation exception.\n */\ntaoensso.sente.assert_event = (function taoensso$sente$assert_event(x){\nvar temp__5735__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar errs = temp__5735__auto__;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"errors\",\"errors\",-908790718),errs], null));\n} else {\nreturn null;\n}\n});\n/**\n * Valid [ev-id ?ev-data] form?\n */\ntaoensso.sente.event_QMARK_ = (function taoensso$sente$event_QMARK_(x){\nreturn (taoensso.sente.validate_event(x) == null);\n});\ntaoensso.sente.as_event = (function taoensso$sente$as_event(x){\nvar temp__5733__auto__ = taoensso.sente.validate_event(x);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar errs = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-event\",\"chsk/bad-event\",-565206930),x], null);\n} else {\nreturn x;\n}\n});\ntaoensso.sente.client_event_msg_QMARK_ = (function taoensso$sente$client_event_msg_QMARK_(x){\nvar and__4120__auto__ = cljs.core.map_QMARK_(x);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__4120__auto____$1){\nvar map__66983 = x;\nvar map__66983__$1 = (((((!((map__66983 == null))))?(((((map__66983.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__66983.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__66983):map__66983);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66983__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66983__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66983__$1,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__66983__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(state)) && (taoensso.sente.event_QMARK_(event)));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\ntaoensso.sente.server_event_msg_QMARK_ = (function taoensso$sente$server_event_msg_QMARK_(x){\nvar and__4120__auto__ = cljs.core.map_QMARK_(x);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = taoensso.encore.ks_EQ_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),null,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),null,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),null,new cljs.core.Keyword(null,\"event\",\"event\",301435442),null,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),null,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),null,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),null,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),null], null), null),x);\nif(and__4120__auto____$1){\nvar map__67017 = x;\nvar map__67017__$1 = (((((!((map__67017 == null))))?(((((map__67017.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67017.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67017):map__67017);\nvar ch_recv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861));\nvar send_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041));\nvar connected_uids = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231));\nvar ring_req = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67017__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nreturn ((taoensso.encore.chan_QMARK_(ch_recv)) && (cljs.core.ifn_QMARK_(send_fn)) && (taoensso.encore.atom_QMARK_(connected_uids)) && (cljs.core.map_QMARK_(ring_req)) && (taoensso.encore.nblank_str_QMARK_(client_id)) && (taoensso.sente.event_QMARK_(event)) && ((((_QMARK_reply_fn == null)) || (cljs.core.ifn_QMARK_(_QMARK_reply_fn)))));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n});\n/**\n * All server `event-msg`s go through this\n */\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_ = (function taoensso$sente$put_server_event_msg_GT_ch_recv_BANG_(ch_recv,p__67019){\nvar map__67020 = p__67019;\nvar map__67020__$1 = (((((!((map__67020 == null))))?(((((map__67020.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67020.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67020):map__67020);\nvar ev_msg = map__67020__$1;\nvar event = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67020__$1,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar _QMARK_reply_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67020__$1,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592));\nvar vec__67023 = taoensso.sente.as_event(event);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67023,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67023,(1),null);\nvar valid_event = vec__67023;\nvar ev_msg_STAR_ = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),valid_event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null)], 0));\nif((!(taoensso.sente.server_event_msg_QMARK_(ev_msg_STAR_)))){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,189,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__67023,ev_id,ev__QMARK_data,valid_event,ev_msg_STAR_,map__67020,map__67020__$1,ev_msg,event,_QMARK_reply_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad ev-msg: %s\",ev_msg], null);\n});})(vec__67023,ev_id,ev__QMARK_data,valid_event,ev_msg_STAR_,map__67020,map__67020__$1,ev_msg,event,_QMARK_reply_fn))\n,null)),null,2030244013);\n} else {\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(ch_recv,ev_msg_STAR_);\n}\n});\ntaoensso.sente.cb_error_QMARK_ = (function taoensso$sente$cb_error_QMARK_(cb_reply_clj){\nvar fexpr__67029 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264),null,new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439),null,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489),null], null), null);\nreturn (fexpr__67029.cljs$core$IFn$_invoke$arity$1 ? fexpr__67029.cljs$core$IFn$_invoke$arity$1(cb_reply_clj) : fexpr__67029.call(null,cb_reply_clj));\n});\ntaoensso.sente.cb_success_QMARK_ = (function taoensso$sente$cb_success_QMARK_(cb_reply_clj){\nreturn cljs.core.not(taoensso.sente.cb_error_QMARK_(cb_reply_clj));\n});\n/**\n * prefixed-pstr->[clj ?cb-uuid]\n */\ntaoensso.sente.unpack = (function taoensso$sente$unpack(packer,prefixed_pstr){\nif(typeof prefixed_pstr === 'string'){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",203,\"(string? prefixed-pstr)\",prefixed_pstr,null,null);\n}\n\nvar wrapped_QMARK_ = taoensso.encore.str_starts_with_QMARK_(prefixed_pstr,\"+\");\nvar pstr = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(prefixed_pstr,(1));\nvar clj = (function (){try{return taoensso.sente.interfaces.unpack(packer,pstr);\n}catch (e67037){var t = e67037;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,210,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (t,wrapped_QMARK_,pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Bad package: %s (%s)\",pstr,t], null);\n});})(t,wrapped_QMARK_,pstr))\n,null)),null,2116026624);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"bad-package\",\"chsk/bad-package\",501893679),pstr], null);\n}})();\nvar vec__67034 = ((wrapped_QMARK_)?clj:new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,null], null));\nvar clj__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67034,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67034,(1),null);\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),_QMARK_cb_uuid))?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):_QMARK_cb_uuid);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,216,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (wrapped_QMARK_,pstr,clj,vec__67034,clj__$1,_QMARK_cb_uuid,_QMARK_cb_uuid__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Unpacking: %s -> %s\",prefixed_pstr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null)], null);\n});})(wrapped_QMARK_,pstr,clj,vec__67034,clj__$1,_QMARK_cb_uuid,_QMARK_cb_uuid__$1))\n,null)),null,-564825403);\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj__$1,_QMARK_cb_uuid__$1], null);\n});\n/**\n * clj->prefixed-pstr\n */\ntaoensso.sente.pack = (function taoensso$sente$pack(var_args){\nvar G__67040 = arguments.length;\nswitch (G__67040) {\ncase 2:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ntaoensso.sente.pack.cljs$core$IFn$_invoke$arity$2 = (function (packer,clj){\nvar pstr = [\"-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,223,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (unwrapped): %s -> %s\",clj,pstr], null);\n});})(pstr))\n,null)),null,1515775734);\n\nreturn pstr;\n});\n\ntaoensso.sente.pack.cljs$core$IFn$_invoke$arity$3 = (function (packer,clj,_QMARK_cb_uuid){\nvar _QMARK_cb_uuid__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_cb_uuid,new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321)))?(0):_QMARK_cb_uuid);\nvar wrapped_clj = (cljs.core.truth_(_QMARK_cb_uuid__$1)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj,_QMARK_cb_uuid__$1], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clj], null));\nvar pstr = [\"+\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(taoensso.sente.interfaces.pack(packer,wrapped_clj))].join('');\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,232,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (_QMARK_cb_uuid__$1,wrapped_clj,pstr){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Packing (wrapped): %s -> %s\",wrapped_clj,pstr], null);\n});})(_QMARK_cb_uuid__$1,wrapped_clj,pstr))\n,null)),null,838583274);\n\nreturn pstr;\n});\n\ntaoensso.sente.pack.cljs$lang$maxFixedArity = 3;\n\n\n/**\n* @constructor\n * @implements {taoensso.sente.interfaces.IPacker}\n*/\ntaoensso.sente.EdnPacker = (function (){\n});\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$pack$arity$2 = (function (_,x){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1(x);\n});\n\ntaoensso.sente.EdnPacker.prototype.taoensso$sente$interfaces$IPacker$unpack$arity$2 = (function (_,s){\nvar self__ = this;\nvar ___$1 = this;\nreturn taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1(s);\n});\n\ntaoensso.sente.EdnPacker.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n});\n\ntaoensso.sente.EdnPacker.cljs$lang$type = true;\n\ntaoensso.sente.EdnPacker.cljs$lang$ctorStr = \"taoensso.sente/EdnPacker\";\n\ntaoensso.sente.EdnPacker.cljs$lang$ctorPrWriter = (function (this__4374__auto__,writer__4375__auto__,opt__4376__auto__){\nreturn cljs.core._write(writer__4375__auto__,\"taoensso.sente/EdnPacker\");\n});\n\n/**\n * Positional factory function for taoensso.sente/EdnPacker.\n */\ntaoensso.sente.__GT_EdnPacker = (function taoensso$sente$__GT_EdnPacker(){\nreturn (new taoensso.sente.EdnPacker());\n});\n\ntaoensso.sente.default_edn_packer = (new taoensso.sente.EdnPacker());\ntaoensso.sente.coerce_packer = (function taoensso$sente$coerce_packer(x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885))){\nreturn taoensso.sente.default_edn_packer;\n} else {\nvar e = (function (){try{if((function (){var fexpr__67049 = (function (p1__67046_SHARP_){\nif((!((p1__67046_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__67046_SHARP_.taoensso$sente$interfaces$IPacker$)))){\nreturn true;\n} else {\nif((!p1__67046_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__67046_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IPacker,p1__67046_SHARP_);\n}\n});\nreturn fexpr__67049(x);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67047){if((e67047 instanceof Error)){\nvar e = e67047;\nreturn e;\n} else {\nthrow e67047;\n\n}\n}})();\nif((e == null)){\nreturn x;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",245,\"((fn* [p1__67046#] (satisfies? interfaces/IPacker p1__67046#)) x)\",x,e,null);\n}\n}\n});\ntaoensso.sente.next_idx_BANG_ = (taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0 ? taoensso.encore.idx_fn.cljs$core$IFn$_invoke$arity$0() : taoensso.encore.idx_fn.call(null));\n\n\ntaoensso.sente.bad_origin_QMARK_ = (function taoensso$sente$bad_origin_QMARK_(allowed_origins,p__67054){\nvar map__67057 = p__67054;\nvar map__67057__$1 = (((((!((map__67057 == null))))?(((((map__67057.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67057.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67057):map__67057);\nvar ring_req = map__67057__$1;\nvar headers = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67057__$1,new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129));\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(headers,\"origin\");\nvar referer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(headers,\"referer\",\"\");\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(allowed_origins,new cljs.core.Keyword(null,\"all\",\"all\",892129742))){\nreturn false;\n} else {\nif(cljs.core.contains_QMARK_(cljs.core.set(allowed_origins),origin)){\nreturn false;\n} else {\nif(cljs.core.truth_(taoensso.encore.rsome(((function (origin,referer,map__67057,map__67057__$1,ring_req,headers){\nreturn (function (p1__67053_SHARP_){\nreturn clojure.string.starts_with_QMARK_(referer,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__67053_SHARP_),\"/\"].join(''));\n});})(origin,referer,map__67057,map__67057__$1,ring_req,headers))\n,allowed_origins))){\nreturn false;\n} else {\nreturn true;\n\n}\n}\n}\n});\n/**\n * Takes a web server adapter[1] and returns a map with keys:\n *  :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n *  :send-fn ; (fn [user-id ev] for server>user push.\n *  :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n *  :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n *  :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n * \n *   Common options:\n *  :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n *  :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n *                     ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n *  :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n *  :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n *  :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n *  :send-buf-ms-ajax  ; [2]\n *  :send-buf-ms-ws    ; [2]\n *  :packer            ; :edn (default), or an IPacker implementation.\n *  :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n * \n *   [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n *         `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n *    You must have the necessary web-server dependency in your project.clj and\n *    the necessary entry in your namespace's `ns` form.\n * \n *   [2] Optimization to allow transparent batching of rapidly-triggered\n *    server>user pushes. This is esp. important for Ajax clients which use a\n *    (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n *    after send call (larger values => larger batch windows).\n */\ntaoensso.sente.make_channel_socket_server_BANG_ = (function taoensso$sente$make_channel_socket_server_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___68154 = arguments.length;\nvar i__4731__auto___68155 = (0);\nwhile(true){\nif((i__4731__auto___68155 < len__4730__auto___68154)){\nargs__4736__auto__.push((arguments[i__4731__auto___68155]));\n\nvar G__68156 = (i__4731__auto___68155 + (1));\ni__4731__auto___68155 = G__68156;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (web_server_ch_adapter,p__67072){\nvar vec__67073 = p__67072;\nvar map__67076 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67073,(0),null);\nvar map__67076__$1 = (((((!((map__67076 == null))))?(((((map__67076.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67076.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67076):map__67076);\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(25)], 0)));\nvar send_buf_ms_ws = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"send-buf-ms-ws\",\"send-buf-ms-ws\",-1149586238),(30));\nvar allowed_origins = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"allowed-origins\",\"allowed-origins\",1477851683),new cljs.core.Keyword(null,\"all\",\"all\",892129742));\nvar lp_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar csrf_token_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"csrf-token-fn\",\"csrf-token-fn\",-1846298394),((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms){\nreturn (function (ring_req){\nvar or__4131__auto__ = new cljs.core.Keyword(null,\"anti-forgery-token\",\"anti-forgery-token\",806990841).cljs$core$IFn$_invoke$arity$1(ring_req);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar or__4131__auto____$2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(\"ring.middleware.anti-forgery\",\"anti-forgery-token\",\"ring.middleware.anti-forgery/anti-forgery-token\",571563484)], null));\nif(cljs.core.truth_(or__4131__auto____$2)){\nreturn or__4131__auto____$2;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),\"__anti-forgery-token\"], null));\n}\n}\n}\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms))\n);\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar send_buf_ms_ajax = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"send-buf-ms-ajax\",\"send-buf-ms-ajax\",1546129037),(100));\nvar bad_origin_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"bad-origin-fn\",\"bad-origin-fn\",1385595727),((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax){\nreturn (function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Unauthorized origin\"], null);\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax))\n);\nvar handshake_data_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"handshake-data-fn\",\"handshake-data-fn\",2011983089),((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn){\nreturn (function (ring_req){\nreturn null;\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn))\n);\nvar user_id_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"user-id-fn\",\"user-id-fn\",-1532150029),((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn){\nreturn (function (ring_req){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"session\",\"session\",1008279103),new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400)], null));\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn))\n);\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((1000)));\nvar bad_csrf_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__67076__$1,new cljs.core.Keyword(null,\"bad-csrf-fn\",\"bad-csrf-fn\",16619032),((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n){\nreturn (function (_ring_req){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"status\",\"status\",-1997798413),(403),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),\"Bad CSRF token\"], null);\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n))\n);\nnew cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ajax)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67078){if((e67078 instanceof Error)){\nvar e = e67078;\nreturn e;\n} else {\nthrow e67078;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",345,\"(enc/pos-int? send-buf-ms-ajax)\",send_buf_ms_ajax,e,null);\n}\n})(),(function (){var e = (function (){try{if(taoensso.encore.pos_int_QMARK_(send_buf_ms_ws)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67079){if((e67079 instanceof Error)){\nvar e = e67079;\nreturn e;\n} else {\nthrow e67079;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",345,\"(enc/pos-int? send-buf-ms-ws)\",send_buf_ms_ws,e,null);\n}\n})()], null);\n\nvar e_68161 = (function (){try{if((function (){var fexpr__67082 = ((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p1__67061_SHARP_){\nif((!((p1__67061_SHARP_ == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === p1__67061_SHARP_.taoensso$sente$interfaces$IServerChanAdapter$)))){\nreturn true;\n} else {\nif((!p1__67061_SHARP_.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__67061_SHARP_);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(taoensso.sente.interfaces.IServerChanAdapter,p1__67061_SHARP_);\n}\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn fexpr__67082(web_server_ch_adapter);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67080){if((e67080 instanceof Error)){\nvar e = e67080;\nreturn e;\n} else {\nthrow e67080;\n\n}\n}})();\nif((e_68161 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",346,\"((fn* [p1__67061#] (satisfies? interfaces/IServerChanAdapter p1__67061#)) web-server-ch-adapter)\",web_server_ch_adapter,e_68161,null);\n}\n\nvar max_ms_68163 = taoensso.sente.default_client_side_ajax_timeout_ms;\nif((lp_timeout_ms >= max_ms_68163)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\":lp-timeout-ms must be < \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(max_ms_68163)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"lp-timeout-ms\",\"lp-timeout-ms\",-1451963133),lp_timeout_ms,new cljs.core.Keyword(null,\"default-client-side-ajax-timeout-ms\",\"default-client-side-ajax-timeout-ms\",1149929762),max_ms_68163], null));\n} else {\n}\n\nvar allowed_origins__$1 = (cljs.core.truth_((function (){var fexpr__67087 = ((function (vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (x){\nvar or__4131__auto__ = cljs.core.set_QMARK_(x);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar fexpr__67089 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"all\",\"all\",892129742),null], null), null);\nreturn (fexpr__67089.cljs$core$IFn$_invoke$arity$1 ? fexpr__67089.cljs$core$IFn$_invoke$arity$1(x) : fexpr__67089.call(null,x));\n}\n});})(vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn fexpr__67087(allowed_origins);\n})())?allowed_origins:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",355,\"([:or set? #{:all}] allowed-origins)\",allowed_origins,null,null));\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar ch_recv = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(recv_buf_or_n);\nvar user_id_fn__$1 = ((function (allowed_origins__$1,packer__$1,ch_recv,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req,client_id){\nvar or__4131__auto__ = (function (){var G__67091 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ring_req,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id);\nreturn (user_id_fn.cljs$core$IFn$_invoke$arity$1 ? user_id_fn.cljs$core$IFn$_invoke$arity$1(G__67091) : user_id_fn.call(null,G__67091));\n})();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486);\n}\n});})(allowed_origins__$1,packer__$1,ch_recv,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar conns_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar send_buffers_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentArrayMap.EMPTY], null));\nvar connected_uids_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.PersistentHashSet.EMPTY], null));\nvar upd_conn_BANG_ = ((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar G__68174 = null;\nvar G__68174__3 = (function (conn_type,uid,client_id){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nvar vec__67093 = _QMARK_v;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67093,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67093,(1),null);\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),_QMARK_sch], null));\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n});\nvar G__68174__4 = (function (conn_type,uid,client_id,new__QMARK_sch){\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type,uid,client_id], null),((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nvar new_udt = taoensso.encore.now_udt();\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new__QMARK_sch,new_udt], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init?\",\"init?\",438181499),(_QMARK_v == null),new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),new_udt,new cljs.core.Keyword(null,\"?sch\",\"?sch\",2064493898),new__QMARK_sch], null));\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n});\nG__68174 = function(conn_type,uid,client_id,new__QMARK_sch){\nswitch(arguments.length){\ncase 3:\nreturn G__68174__3.call(this,conn_type,uid,client_id);\ncase 4:\nreturn G__68174__4.call(this,conn_type,uid,client_id,new__QMARK_sch);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__68174.cljs$core$IFn$_invoke$arity$3 = G__68174__3;\nG__68174.cljs$core$IFn$_invoke$arity$4 = G__68174__4;\nreturn G__68174;\n})()\n;})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar connect_uid_BANG_ = ((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (conn_type,uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67100){if((e67100 instanceof Error)){\nvar e = e67100;\nreturn e;\n} else {\nthrow e67100;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",391,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_connected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__67101){\nvar map__67102 = p__67101;\nvar map__67102__$1 = (((((!((map__67102 == null))))?(((((map__67102.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67102.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67102):map__67102);\nvar old_m = map__67102__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67102__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67102__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67102__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar new_m = (function (){var G__67105 = conn_type;\nvar G__67105__$1 = (((G__67105 instanceof cljs.core.Keyword))?G__67105.fqn:null);\nswitch (G__67105__$1) {\ncase \"ws\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),ajax__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ncase \"ajax\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),ws,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__67105__$1)].join('')));\n\n}\n})();\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif((((!(cljs.core.contains_QMARK_(old_any,uid)))) && (cljs.core.contains_QMARK_(new_any,uid)))){\nreturn new cljs.core.Keyword(null,\"newly-connected\",\"newly-connected\",-2029862681);\n} else {\nreturn null;\n}\n})());\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nreturn newly_connected_QMARK_;\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar upd_connected_uid_BANG_ = ((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (uid){\nif(cljs.core.truth_((function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(uid)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67106){if((e67106 instanceof Error)){\nvar e = e67106;\nreturn e;\n} else {\nthrow e67106;\n\n}\n}})();\nif((e == null)){\nreturn true;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",408,\"(taoensso.truss.impl/some? uid)\",uid,e,null);\n}\n})())){\n} else {\nthrow (new Error(\"Assert failed: (have? uid)\"));\n}\n\nvar newly_disconnected_QMARK_ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(connected_uids_,cljs.core.PersistentVector.EMPTY,((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__67107){\nvar map__67108 = p__67107;\nvar map__67108__$1 = (((((!((map__67108 == null))))?(((((map__67108.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67108.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67108):map__67108);\nvar old_m = map__67108__$1;\nvar ws = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67108__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar ajax__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67108__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar any = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67108__$1,new cljs.core.Keyword(null,\"any\",\"any\",1705907423));\nvar conns_SINGLEQUOTE_ = cljs.core.deref(conns_);\nvar any_ws_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_ajax_clients_QMARK_ = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549).cljs$core$IFn$_invoke$arity$1(conns_SINGLEQUOTE_),uid);\nvar any_clients_QMARK_ = ((any_ws_clients_QMARK_) || (any_ajax_clients_QMARK_));\nvar new_m = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),((any_ws_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ws,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ws,uid)),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),((any_ajax_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(ajax__$1,uid)),new cljs.core.Keyword(null,\"any\",\"any\",1705907423),((any_clients_QMARK_)?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(any,uid):cljs.core.disj.cljs$core$IFn$_invoke$arity$2(any,uid))], null);\nreturn taoensso.encore.swapped(new_m,(function (){var old_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(old_m);\nvar new_any = new cljs.core.Keyword(null,\"any\",\"any\",1705907423).cljs$core$IFn$_invoke$arity$1(new_m);\nif(((cljs.core.contains_QMARK_(old_any,uid)) && ((!(cljs.core.contains_QMARK_(new_any,uid)))))){\nreturn new cljs.core.Keyword(null,\"newly-disconnected\",\"newly-disconnected\",-1586164962);\n} else {\nreturn null;\n}\n})());\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nreturn newly_disconnected_QMARK_;\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar send_fn = ((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() { \nvar G__68190__delegate = function (user_id,ev,p__67114){\nvar vec__67115 = p__67114;\nvar map__67118 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67115,(0),null);\nvar map__67118__$1 = (((((!((map__67118 == null))))?(((((map__67118.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67118.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67118):map__67118);\nvar opts = map__67118__$1;\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67118__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar uid_68191 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(user_id,new cljs.core.Keyword(\"sente\",\"all-users-without-uid\",\"sente/all-users-without-uid\",-42979578)))?new cljs.core.Keyword(\"taoensso.sente\",\"nil-uid\",\"taoensso.sente/nil-uid\",-2111603486):user_id);\nvar __68192 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,434,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (uid_68191,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (->uid %s) %s\",uid_68191,ev], null);\n});})(uid_68191,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-106109258);\nvar __68193__$1 = (cljs.core.truth_(uid_68191)?null:(function(){throw (new Error([\"Assert failed: \",[\"Support for sending to `nil` user-ids has been REMOVED. \",\"Please send to `:sente/all-users-without-uid` instead.\"].join(''),\"\\n\",\"uid\"].join('')))})());\nvar __68194__$2 = taoensso.sente.assert_event(ev);\nvar ev_uuid_68195 = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\nvar flush_buffer_BANG__68196 = ((function (uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (conn_type){\nvar temp__5735__auto__ = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type], null),((function (uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (m){\nvar vec__67120 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_68191);\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67120,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67120,(1),null);\nif(cljs.core.contains_QMARK_(ev_uuids,ev_uuid_68195)){\nreturn taoensso.encore.swapped(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,uid_68191),cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,uid_68191));\n} else {\nreturn taoensso.encore.swapped(m,null);\n}\n});})(uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar pulled = temp__5735__auto__;\nvar vec__67123 = pulled;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67123,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67123,(1),null);\nif(cljs.core.vector_QMARK_(buffered_evs)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",461,\"(vector? buffered-evs)\",buffered_evs,null,null);\n}\n\nif(cljs.core.set_QMARK_(ev_uuids)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",462,\"(set? ev-uuids)\",ev_uuids,null,null);\n}\n\nvar buffered_evs_ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,buffered_evs);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,465,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (buffered_evs_ppstr,vec__67123,buffered_evs,ev_uuids,pulled,temp__5735__auto__,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"buffered-evs-ppstr: %s\",buffered_evs_ppstr], null);\n});})(buffered_evs_ppstr,vec__67123,buffered_evs,ev_uuids,pulled,temp__5735__auto__,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1838758539);\n\nvar G__67126 = conn_type;\nvar G__67126__$1 = (((G__67126 instanceof cljs.core.Keyword))?G__67126.fqn:null);\nswitch (G__67126__$1) {\ncase \"ws\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4 ? taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.cljs$core$IFn$_invoke$arity$4(conns_,uid_68191,buffered_evs_ppstr,upd_conn_BANG_) : taoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_.call(null,conns_,uid_68191,buffered_evs_ppstr,upd_conn_BANG_));\n\nbreak;\ncase \"ajax\":\nreturn (taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,uid_68191,buffered_evs_ppstr) : taoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_.call(null,conns_,uid_68191,buffered_evs_ppstr));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__67126__$1)].join('')));\n\n}\n} else {\nreturn null;\n}\n});})(uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ev,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"close\",\"chsk/close\",1840295819)], null))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,474,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk closing (client may reconnect): %s\",uid_68191], null);\n});})(uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,1814483292);\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\n}\n\nvar seq__67131_68198 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid_68191], null))));\nvar chunk__67132_68199 = null;\nvar count__67133_68200 = (0);\nvar i__67134_68201 = (0);\nwhile(true){\nif((i__67134_68201 < count__67133_68200)){\nvar vec__67144_68202 = chunk__67132_68199.cljs$core$IIndexed$_nth$arity$2(null,i__67134_68201);\nvar _QMARK_sch_68203 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67144_68202,(0),null);\nvar _udt_68204 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67144_68202,(1),null);\nvar temp__5735__auto___68205 = _QMARK_sch_68203;\nif(cljs.core.truth_(temp__5735__auto___68205)){\nvar sch_68206 = temp__5735__auto___68205;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_68206);\n} else {\n}\n\n\nvar G__68207 = seq__67131_68198;\nvar G__68208 = chunk__67132_68199;\nvar G__68209 = count__67133_68200;\nvar G__68210 = (i__67134_68201 + (1));\nseq__67131_68198 = G__68207;\nchunk__67132_68199 = G__68208;\ncount__67133_68200 = G__68209;\ni__67134_68201 = G__68210;\ncontinue;\n} else {\nvar temp__5735__auto___68211 = cljs.core.seq(seq__67131_68198);\nif(temp__5735__auto___68211){\nvar seq__67131_68212__$1 = temp__5735__auto___68211;\nif(cljs.core.chunked_seq_QMARK_(seq__67131_68212__$1)){\nvar c__4550__auto___68213 = cljs.core.chunk_first(seq__67131_68212__$1);\nvar G__68214 = cljs.core.chunk_rest(seq__67131_68212__$1);\nvar G__68215 = c__4550__auto___68213;\nvar G__68216 = cljs.core.count(c__4550__auto___68213);\nvar G__68217 = (0);\nseq__67131_68198 = G__68214;\nchunk__67132_68199 = G__68215;\ncount__67133_68200 = G__68216;\ni__67134_68201 = G__68217;\ncontinue;\n} else {\nvar vec__67150_68218 = cljs.core.first(seq__67131_68212__$1);\nvar _QMARK_sch_68219 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67150_68218,(0),null);\nvar _udt_68220 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67150_68218,(1),null);\nvar temp__5735__auto___68221__$1 = _QMARK_sch_68219;\nif(cljs.core.truth_(temp__5735__auto___68221__$1)){\nvar sch_68222 = temp__5735__auto___68221__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_68222);\n} else {\n}\n\n\nvar G__68223 = cljs.core.next(seq__67131_68212__$1);\nvar G__68224 = null;\nvar G__68225 = (0);\nvar G__68226 = (0);\nseq__67131_68198 = G__68223;\nchunk__67132_68199 = G__68224;\ncount__67133_68200 = G__68225;\ni__67134_68201 = G__68226;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__67153_68227 = cljs.core.seq(cljs.core.vals(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid_68191], null))));\nvar chunk__67154_68228 = null;\nvar count__67155_68229 = (0);\nvar i__67156_68230 = (0);\nwhile(true){\nif((i__67156_68230 < count__67155_68229)){\nvar vec__67169_68231 = chunk__67154_68228.cljs$core$IIndexed$_nth$arity$2(null,i__67156_68230);\nvar _QMARK_sch_68232 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67169_68231,(0),null);\nvar _udt_68233 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67169_68231,(1),null);\nvar temp__5735__auto___68234 = _QMARK_sch_68232;\nif(cljs.core.truth_(temp__5735__auto___68234)){\nvar sch_68235 = temp__5735__auto___68234;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_68235);\n} else {\n}\n\n\nvar G__68236 = seq__67153_68227;\nvar G__68237 = chunk__67154_68228;\nvar G__68238 = count__67155_68229;\nvar G__68239 = (i__67156_68230 + (1));\nseq__67153_68227 = G__68236;\nchunk__67154_68228 = G__68237;\ncount__67155_68229 = G__68238;\ni__67156_68230 = G__68239;\ncontinue;\n} else {\nvar temp__5735__auto___68240 = cljs.core.seq(seq__67153_68227);\nif(temp__5735__auto___68240){\nvar seq__67153_68241__$1 = temp__5735__auto___68240;\nif(cljs.core.chunked_seq_QMARK_(seq__67153_68241__$1)){\nvar c__4550__auto___68242 = cljs.core.chunk_first(seq__67153_68241__$1);\nvar G__68243 = cljs.core.chunk_rest(seq__67153_68241__$1);\nvar G__68244 = c__4550__auto___68242;\nvar G__68245 = cljs.core.count(c__4550__auto___68242);\nvar G__68246 = (0);\nseq__67153_68227 = G__68243;\nchunk__67154_68228 = G__68244;\ncount__67155_68229 = G__68245;\ni__67156_68230 = G__68246;\ncontinue;\n} else {\nvar vec__67172_68247 = cljs.core.first(seq__67153_68241__$1);\nvar _QMARK_sch_68248 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67172_68247,(0),null);\nvar _udt_68249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67172_68247,(1),null);\nvar temp__5735__auto___68250__$1 = _QMARK_sch_68248;\nif(cljs.core.truth_(temp__5735__auto___68250__$1)){\nvar sch_68251 = temp__5735__auto___68250__$1;\ntaoensso.sente.interfaces.sch_close_BANG_(sch_68251);\n} else {\n}\n\n\nvar G__68252 = cljs.core.next(seq__67153_68241__$1);\nvar G__68253 = null;\nvar G__68254 = (0);\nvar G__68255 = (0);\nseq__67153_68227 = G__68252;\nchunk__67154_68228 = G__68253;\ncount__67155_68229 = G__68254;\ni__67156_68230 = G__68255;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\nvar seq__67175_68256 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549)], null));\nvar chunk__67176_68257 = null;\nvar count__67177_68258 = (0);\nvar i__67178_68259 = (0);\nwhile(true){\nif((i__67178_68259 < count__67177_68258)){\nvar conn_type_68260 = chunk__67176_68257.cljs$core$IIndexed$_nth$arity$2(null,i__67178_68259);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_68260,uid_68191], null),((function (seq__67175_68256,chunk__67176_68257,count__67177_68258,i__67178_68259,conn_type_68260,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_68195])], null);\n} else {\nvar vec__67185 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67185,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67185,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_68195)], null);\n}\n});})(seq__67175_68256,chunk__67176_68257,count__67177_68258,i__67178_68259,conn_type_68260,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__68261 = seq__67175_68256;\nvar G__68262 = chunk__67176_68257;\nvar G__68263 = count__67177_68258;\nvar G__68264 = (i__67178_68259 + (1));\nseq__67175_68256 = G__68261;\nchunk__67176_68257 = G__68262;\ncount__67177_68258 = G__68263;\ni__67178_68259 = G__68264;\ncontinue;\n} else {\nvar temp__5735__auto___68265 = cljs.core.seq(seq__67175_68256);\nif(temp__5735__auto___68265){\nvar seq__67175_68266__$1 = temp__5735__auto___68265;\nif(cljs.core.chunked_seq_QMARK_(seq__67175_68266__$1)){\nvar c__4550__auto___68267 = cljs.core.chunk_first(seq__67175_68266__$1);\nvar G__68268 = cljs.core.chunk_rest(seq__67175_68266__$1);\nvar G__68269 = c__4550__auto___68267;\nvar G__68270 = cljs.core.count(c__4550__auto___68267);\nvar G__68271 = (0);\nseq__67175_68256 = G__68268;\nchunk__67176_68257 = G__68269;\ncount__67177_68258 = G__68270;\ni__67178_68259 = G__68271;\ncontinue;\n} else {\nvar conn_type_68272 = cljs.core.first(seq__67175_68266__$1);\ntaoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(send_buffers_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [conn_type_68272,uid_68191], null),((function (seq__67175_68256,chunk__67176_68257,count__67177_68258,i__67178_68259,conn_type_68272,seq__67175_68266__$1,temp__5735__auto___68265,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_v){\nif(cljs.core.not(_QMARK_v)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev], null),cljs.core.PersistentHashSet.createAsIfByAssoc([ev_uuid_68195])], null);\n} else {\nvar vec__67188 = _QMARK_v;\nvar buffered_evs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67188,(0),null);\nvar ev_uuids = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67188,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(buffered_evs,ev),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ev_uuids,ev_uuid_68195)], null);\n}\n});})(seq__67175_68256,chunk__67176_68257,count__67177_68258,i__67178_68259,conn_type_68272,seq__67175_68266__$1,temp__5735__auto___68265,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar G__68273 = cljs.core.next(seq__67175_68266__$1);\nvar G__68274 = null;\nvar G__68275 = (0);\nvar G__68276 = (0);\nseq__67175_68256 = G__68273;\nchunk__67176_68257 = G__68274;\ncount__67177_68258 = G__68275;\ni__67178_68259 = G__68276;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(flush_QMARK_)){\nflush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\n\nflush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\n} else {\nvar ws_timeout_68277 = cljs.core.async.timeout(send_buf_ms_ws);\nvar ajax_timeout_68278 = cljs.core.async.timeout(send_buf_ms_ajax);\nvar c__65686__auto___68279 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67197){\nvar state_val_67198 = (state_67197[(1)]);\nif((state_val_67198 === (1))){\nvar state_67197__$1 = state_67197;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67197__$1,(2),ws_timeout_68277);\n} else {\nif((state_val_67198 === (2))){\nvar inst_67192 = (state_67197[(2)]);\nvar inst_67193 = flush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443));\nvar state_67197__$1 = (function (){var statearr_67203 = state_67197;\n(statearr_67203[(7)] = inst_67192);\n\nreturn statearr_67203;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67197__$1,inst_67193);\n} else {\nreturn null;\n}\n}\n});})(c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67204 = [null,null,null,null,null,null,null,null];\n(statearr_67204[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67204[(1)] = (1));\n\nreturn statearr_67204;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67197){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67197);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67206){if((e67206 instanceof Object)){\nvar ex__65667__auto__ = e67206;\nvar statearr_67207_68284 = state_67197;\n(statearr_67207_68284[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67197);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67206;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68286 = state_67197;\nstate_67197 = G__68286;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67197){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67197);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67208 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67208[(6)] = c__65686__auto___68279);\n\nreturn statearr_67208;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto___68279,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n\nvar c__65686__auto___68292 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67214){\nvar state_val_67215 = (state_67214[(1)]);\nif((state_val_67215 === (1))){\nvar state_67214__$1 = state_67214;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67214__$1,(2),ajax_timeout_68278);\n} else {\nif((state_val_67215 === (2))){\nvar inst_67211 = (state_67214[(2)]);\nvar inst_67212 = flush_buffer_BANG__68196(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar state_67214__$1 = (function (){var statearr_67218 = state_67214;\n(statearr_67218[(7)] = inst_67211);\n\nreturn statearr_67218;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67214__$1,inst_67212);\n} else {\nreturn null;\n}\n}\n});})(c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67219 = [null,null,null,null,null,null,null,null];\n(statearr_67219[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67219[(1)] = (1));\n\nreturn statearr_67219;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67214){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67214);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67221){if((e67221 instanceof Object)){\nvar ex__65667__auto__ = e67221;\nvar statearr_67222_68301 = state_67214;\n(statearr_67222_68301[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67214);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67221;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68303 = state_67214;\nstate_67214 = G__68303;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67214){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67214);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67224 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67224[(6)] = c__65686__auto___68292);\n\nreturn statearr_67224;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto___68292,ws_timeout_68277,ajax_timeout_68278,uid_68191,__68192,__68193__$1,__68194__$2,ev_uuid_68195,flush_buffer_BANG__68196,vec__67115,map__67118,map__67118__$1,opts,flush_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\n}\n}\n\nreturn null;\n};\nvar G__68190 = function (user_id,ev,var_args){\nvar p__67114 = null;\nif (arguments.length > 2) {\nvar G__68307__i = 0, G__68307__a = new Array(arguments.length -  2);\nwhile (G__68307__i < G__68307__a.length) {G__68307__a[G__68307__i] = arguments[G__68307__i + 2]; ++G__68307__i;}\n  p__67114 = new cljs.core.IndexedSeq(G__68307__a,0,null);\n} \nreturn G__68190__delegate.call(this,user_id,ev,p__67114);};\nG__68190.cljs$lang$maxFixedArity = 2;\nG__68190.cljs$lang$applyTo = (function (arglist__68309){\nvar user_id = cljs.core.first(arglist__68309);\narglist__68309 = cljs.core.next(arglist__68309);\nvar ev = cljs.core.first(arglist__68309);\nvar p__67114 = cljs.core.rest(arglist__68309);\nreturn G__68190__delegate(user_id,ev,p__67114);\n});\nG__68190.cljs$core$IFn$_invoke$arity$variadic = G__68190__delegate;\nreturn G__68190;\n})()\n;})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar bad_csrf_QMARK_ = ((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nif((csrf_token_fn == null)){\nreturn false;\n} else {\nvar temp__5733__auto__ = (csrf_token_fn.cljs$core$IFn$_invoke$arity$1 ? csrf_token_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : csrf_token_fn.call(null,ring_req));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar reference_csrf_token = temp__5733__auto__;\nvar csrf_token_from_client = (function (){var or__4131__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856)], null));\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-csrf-token\"], null));\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),\"x-xsrf-token\"], null));\n}\n}\n})();\nreturn cljs.core.not(taoensso.encore.const_str_EQ_(reference_csrf_token,csrf_token_from_client));\n} else {\nreturn true;\n}\n}\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar ev_msg_const = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_], null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ch_recv,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"connected-uids\",\"connected-uids\",1454332231),connected_uids_,new cljs.core.Keyword(null,\"ajax-post-fn\",\"ajax-post-fn\",1830071264),((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null,ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\nif(cljs.core.not(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: (not websocket?)\"));\n}\n\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar ppstr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar vec__67227 = taoensso.sente.unpack(packer__$1,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67227,(0),null);\nvar has_cb_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67227,(1),null);\nvar reply_fn = (function (){var replied_QMARK__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nreturn ((function (replied_QMARK__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (resp_clj){\nif(cljs.core.compare_and_set_BANG_(replied_QMARK__,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,571,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (replied_QMARK__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ajax post reply): %s\",resp_clj], null);\n});})(replied_QMARK__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1001799255);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,resp_clj));\n} else {\nreturn null;\n}\n});\n;})(replied_QMARK__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\ntaoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),clj,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),user_id_fn__$1(ring_req,client_id),new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),(cljs.core.truth_(has_cb_QMARK_)?reply_fn:null)], null)], 0)));\n\nif(cljs.core.truth_(has_cb_QMARK_)){\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__65686__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67235){\nvar state_val_67236 = (state_67235[(1)]);\nif((state_val_67236 === (1))){\nvar inst_67230 = cljs.core.async.timeout(ms);\nvar state_67235__$1 = state_67235;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67235__$1,(2),inst_67230);\n} else {\nif((state_val_67236 === (2))){\nvar inst_67232 = (state_67235[(2)]);\nvar inst_67233 = (function (){var G__67238 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (reply_fn.cljs$core$IFn$_invoke$arity$1 ? reply_fn.cljs$core$IFn$_invoke$arity$1(G__67238) : reply_fn.call(null,G__67238));\n})();\nvar state_67235__$1 = (function (){var statearr_67239 = state_67235;\n(statearr_67239[(7)] = inst_67232);\n\nreturn statearr_67239;\n})();\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67235__$1,inst_67233);\n} else {\nreturn null;\n}\n}\n});})(c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67240 = [null,null,null,null,null,null,null,null];\n(statearr_67240[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67240[(1)] = (1));\n\nreturn statearr_67240;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67235){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67235);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67241){if((e67241 instanceof Object)){\nvar ex__65667__auto__ = e67241;\nvar statearr_67242_68340 = state_67235;\n(statearr_67242_68340[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67235);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67241;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68343 = state_67235;\nstate_67235 = G__68343;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67235){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67235);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67245 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67245[(6)] = c__65686__auto__);\n\nreturn statearr_67245;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto__,ms,temp__5735__auto__,params,ppstr,client_id,vec__67227,clj,has_cb_QMARK_,reply_fn,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__65686__auto__;\n} else {\nreturn null;\n}\n} else {\nvar G__67246 = new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337);\nreturn (reply_fn.cljs$core$IFn$_invoke$arity$1 ? reply_fn.cljs$core$IFn$_invoke$arity$1(G__67246) : reply_fn.call(null,G__67246));\n}\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null));\n\n}\n}\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"ajax-get-or-ws-handshake-fn\",\"ajax-get-or-ws-handshake-fn\",-1210409233),((function (allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (ring_req){\nvar sch_uuid = taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ring_req,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(params,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140));\nvar uid = user_id_fn__$1(ring_req,client_id);\nvar receive_event_msg_BANG_ = ((function (sch_uuid,params,client_id,uid,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$self = null;\nvar taoensso$sente$self__1 = (function (event){\nreturn taoensso$sente$self.cljs$core$IFn$_invoke$arity$2(event,null);\n});\nvar taoensso$sente$self__2 = (function (event,_QMARK_reply_fn){\nreturn taoensso.sente.put_server_event_msg_GT_ch_recv_BANG_(ch_recv,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev_msg_const,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req,new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"?reply-fn\",\"?reply-fn\",-1479510592),_QMARK_reply_fn,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),uid], null)], 0)));\n});\ntaoensso$sente$self = function(event,_QMARK_reply_fn){\nswitch(arguments.length){\ncase 1:\nreturn taoensso$sente$self__1.call(this,event);\ncase 2:\nreturn taoensso$sente$self__2.call(this,event,_QMARK_reply_fn);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$self__1;\ntaoensso$sente$self.cljs$core$IFn$_invoke$arity$2 = taoensso$sente$self__2;\nreturn taoensso$sente$self;\n})()\n;})(sch_uuid,params,client_id,uid,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nvar send_handshake_BANG_ = ((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,615,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-handshake!\"], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-2111014962);\n\nvar _QMARK_handshake_data = (handshake_data_fn.cljs$core$IFn$_invoke$arity$1 ? handshake_data_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : handshake_data_fn.call(null,ring_req));\nvar handshake_ev = (((_QMARK_handshake_data == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null], null)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [uid,null,_QMARK_handshake_data], null)], null));\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,handshake_ev));\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nif(clojure.string.blank_QMARK_(client_id)){\nvar err_msg = \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\";\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,628,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (err_msg,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[err_msg,\": %s\"].join(''),ring_req], null);\n});})(err_msg,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,2000171129);\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_msg,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ring-req\",\"ring-req\",-747861961),ring_req], null));\n} else {\nif(bad_csrf_QMARK_(ring_req)){\nreturn (bad_csrf_fn.cljs$core$IFn$_invoke$arity$1 ? bad_csrf_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_csrf_fn.call(null,ring_req));\n} else {\nif(taoensso.sente.bad_origin_QMARK_(allowed_origins__$1,ring_req)){\nreturn (bad_origin_fn.cljs$core$IFn$_invoke$arity$1 ? bad_origin_fn.cljs$core$IFn$_invoke$arity$1(ring_req) : bad_origin_fn.call(null,ring_req));\n} else {\nreturn taoensso.sente.interfaces.ring_req__GT_server_ch_resp(web_server_ch_adapter,ring_req,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"on-open\",\"on-open\",-1391088163),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_){\nif(cljs.core.truth_(websocket_QMARK_)){\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,644,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New WebSocket channel: %s (%s)\",uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1076190501);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid))){\nreceive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nsend_handshake_BANG_(server_ch,websocket_QMARK_);\n\nvar temp__5735__auto__ = ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__65686__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67289){\nvar state_val_67290 = (state_67289[(1)]);\nif((state_val_67290 === (7))){\nvar inst_67285 = (state_67289[(2)]);\nvar state_67289__$1 = state_67289;\nvar statearr_67294_68346 = state_67289__$1;\n(statearr_67294_68346[(2)] = inst_67285);\n\n(statearr_67294_68346[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (1))){\nvar inst_67251 = udt_open;\nvar state_67289__$1 = (function (){var statearr_67296 = state_67289;\n(statearr_67296[(7)] = inst_67251);\n\nreturn statearr_67296;\n})();\nvar statearr_67297_68347 = state_67289__$1;\n(statearr_67297_68347[(2)] = null);\n\n(statearr_67297_68347[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (4))){\nvar inst_67262 = (state_67289[(8)]);\nvar inst_67255 = (state_67289[(2)]);\nvar inst_67257 = cljs.core.deref(conns_);\nvar inst_67258 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67260 = [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id];\nvar inst_67261 = (new cljs.core.PersistentVector(null,3,(5),inst_67258,inst_67260,null));\nvar inst_67262__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_67257,inst_67261);\nvar state_67289__$1 = (function (){var statearr_67298 = state_67289;\n(statearr_67298[(8)] = inst_67262__$1);\n\n(statearr_67298[(9)] = inst_67255);\n\nreturn statearr_67298;\n})();\nif(cljs.core.truth_(inst_67262__$1)){\nvar statearr_67300_68348 = state_67289__$1;\n(statearr_67300_68348[(1)] = (5));\n\n} else {\nvar statearr_67301_68349 = state_67289__$1;\n(statearr_67301_68349[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (13))){\nvar inst_67268 = (state_67289[(10)]);\nvar inst_67278 = (state_67289[(2)]);\nvar inst_67251 = inst_67268;\nvar state_67289__$1 = (function (){var statearr_67302 = state_67289;\n(statearr_67302[(7)] = inst_67251);\n\n(statearr_67302[(11)] = inst_67278);\n\nreturn statearr_67302;\n})();\nvar statearr_67303_68350 = state_67289__$1;\n(statearr_67303_68350[(2)] = null);\n\n(statearr_67303_68350[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (6))){\nvar state_67289__$1 = state_67289;\nvar statearr_67304_68351 = state_67289__$1;\n(statearr_67304_68351[(2)] = null);\n\n(statearr_67304_68351[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (3))){\nvar inst_67287 = (state_67289[(2)]);\nvar state_67289__$1 = state_67289;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67289__$1,inst_67287);\n} else {\nif((state_val_67290 === (12))){\nvar state_67289__$1 = state_67289;\nvar statearr_67308_68352 = state_67289__$1;\n(statearr_67308_68352[(2)] = null);\n\n(statearr_67308_68352[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (2))){\nvar inst_67253 = cljs.core.async.timeout(ms);\nvar state_67289__$1 = state_67289;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67289__$1,(4),inst_67253);\n} else {\nif((state_val_67290 === (11))){\nvar inst_67274 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304));\nvar inst_67275 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_67274);\nvar state_67289__$1 = state_67289;\nvar statearr_67309_68353 = state_67289__$1;\n(statearr_67309_68353[(2)] = inst_67275);\n\n(statearr_67309_68353[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (9))){\nvar state_67289__$1 = state_67289;\nvar statearr_67310_68354 = state_67289__$1;\n(statearr_67310_68354[(2)] = null);\n\n(statearr_67310_68354[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (5))){\nvar inst_67262 = (state_67289[(8)]);\nvar inst_67267 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67262,(0),null);\nvar inst_67268 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67262,(1),null);\nvar inst_67269 = taoensso.sente.interfaces.sch_open_QMARK_(server_ch);\nvar state_67289__$1 = (function (){var statearr_67311 = state_67289;\n(statearr_67311[(10)] = inst_67268);\n\n(statearr_67311[(12)] = inst_67267);\n\nreturn statearr_67311;\n})();\nif(cljs.core.truth_(inst_67269)){\nvar statearr_67312_68355 = state_67289__$1;\n(statearr_67312_68355[(1)] = (8));\n\n} else {\nvar statearr_67313_68356 = state_67289__$1;\n(statearr_67313_68356[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (10))){\nvar inst_67282 = (state_67289[(2)]);\nvar state_67289__$1 = state_67289;\nvar statearr_67314_68357 = state_67289__$1;\n(statearr_67314_68357[(2)] = inst_67282);\n\n(statearr_67314_68357[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67290 === (8))){\nvar inst_67251 = (state_67289[(7)]);\nvar inst_67268 = (state_67289[(10)]);\nvar inst_67272 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_67268,inst_67251);\nvar state_67289__$1 = state_67289;\nif(inst_67272){\nvar statearr_67315_68358 = state_67289__$1;\n(statearr_67315_68358[(1)] = (11));\n\n} else {\nvar statearr_67316_68359 = state_67289__$1;\n(statearr_67316_68359[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67317 = [null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_67317[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67317[(1)] = (1));\n\nreturn statearr_67317;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67289){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67289);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67320){if((e67320 instanceof Object)){\nvar ex__65667__auto__ = e67320;\nvar statearr_67321_68360 = state_67289;\n(statearr_67321_68360[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67289);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67320;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68361 = state_67289;\nstate_67289 = G__68361;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67289){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67289);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67322 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67322[(6)] = c__65686__auto__);\n\nreturn statearr_67322;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__65686__auto__;\n} else {\nreturn null;\n}\n} else {\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,673,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"New Ajax handshake/poll: %s (%s)\",uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,1375696856);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id,server_ch);\nvar udt_open = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar handshake_QMARK_ = (function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"init?\",\"init?\",438181499).cljs$core$IFn$_invoke$arity$1(updated_conn);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093).cljs$core$IFn$_invoke$arity$1(params);\n}\n})();\nif(cljs.core.truth_(connect_uid_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid))){\nreceive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"uidport-open\",\"chsk/uidport-open\",1685786954),uid], null));\n} else {\n}\n\nif(cljs.core.truth_(handshake_QMARK_)){\nreturn send_handshake_BANG_(server_ch,websocket_QMARK_);\n} else {\nvar temp__5735__auto__ = lp_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ms = temp__5735__auto__;\nvar c__65686__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67349){\nvar state_val_67350 = (state_67349[(1)]);\nif((state_val_67350 === (1))){\nvar inst_67323 = cljs.core.async.timeout(ms);\nvar state_67349__$1 = state_67349;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67349__$1,(2),inst_67323);\n} else {\nif((state_val_67350 === (2))){\nvar inst_67330 = (state_67349[(7)]);\nvar inst_67325 = (state_67349[(2)]);\nvar inst_67326 = cljs.core.deref(conns_);\nvar inst_67327 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67328 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid,client_id];\nvar inst_67329 = (new cljs.core.PersistentVector(null,3,(5),inst_67327,inst_67328,null));\nvar inst_67330__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_67326,inst_67329);\nvar state_67349__$1 = (function (){var statearr_67351 = state_67349;\n(statearr_67351[(7)] = inst_67330__$1);\n\n(statearr_67351[(8)] = inst_67325);\n\nreturn statearr_67351;\n})();\nif(cljs.core.truth_(inst_67330__$1)){\nvar statearr_67352_68362 = state_67349__$1;\n(statearr_67352_68362[(1)] = (3));\n\n} else {\nvar statearr_67353_68363 = state_67349__$1;\n(statearr_67353_68363[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67350 === (3))){\nvar inst_67330 = (state_67349[(7)]);\nvar inst_67335 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67330,(0),null);\nvar inst_67337 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67330,(1),null);\nvar inst_67338 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_67337,udt_open);\nvar state_67349__$1 = (function (){var statearr_67354 = state_67349;\n(statearr_67354[(9)] = inst_67335);\n\nreturn statearr_67354;\n})();\nif(inst_67338){\nvar statearr_67355_68364 = state_67349__$1;\n(statearr_67355_68364[(1)] = (6));\n\n} else {\nvar statearr_67356_68365 = state_67349__$1;\n(statearr_67356_68365[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67350 === (4))){\nvar state_67349__$1 = state_67349;\nvar statearr_67357_68366 = state_67349__$1;\n(statearr_67357_68366[(2)] = null);\n\n(statearr_67357_68366[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67350 === (5))){\nvar inst_67347 = (state_67349[(2)]);\nvar state_67349__$1 = state_67349;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67349__$1,inst_67347);\n} else {\nif((state_val_67350 === (6))){\nvar inst_67340 = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2(packer__$1,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489));\nvar inst_67341 = taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,inst_67340);\nvar state_67349__$1 = state_67349;\nvar statearr_67359_68367 = state_67349__$1;\n(statearr_67359_68367[(2)] = inst_67341);\n\n(statearr_67359_68367[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67350 === (7))){\nvar state_67349__$1 = state_67349;\nvar statearr_67360_68368 = state_67349__$1;\n(statearr_67360_68368[(2)] = null);\n\n(statearr_67360_68368[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67350 === (8))){\nvar inst_67344 = (state_67349[(2)]);\nvar state_67349__$1 = state_67349;\nvar statearr_67361_68369 = state_67349__$1;\n(statearr_67361_68369[(2)] = inst_67344);\n\n(statearr_67361_68369[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67362 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_67362[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67362[(1)] = (1));\n\nreturn statearr_67362;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67349){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67349);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67363){if((e67363 instanceof Object)){\nvar ex__65667__auto__ = e67363;\nvar statearr_67364_68370 = state_67349;\n(statearr_67364_68370[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67349);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67363;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68371 = state_67349;\nstate_67349 = G__68371;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67349){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67349);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67365 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67365[(6)] = c__65686__auto__);\n\nreturn statearr_67365;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto__,ms,temp__5735__auto__,_,updated_conn,udt_open,handshake_QMARK_,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__65686__auto__;\n} else {\nreturn null;\n}\n}\n}\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-msg\",\"on-msg\",-2021925279),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,req_ppstr){\nif(cljs.core.truth_(websocket_QMARK_)){\n} else {\nthrow (new Error(\"Assert failed: websocket?\"));\n}\n\nupd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid,client_id);\n\nvar vec__67366 = taoensso.sente.unpack(packer__$1,req_ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67366,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67366,(1),null);\nreturn receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$2(clj,(cljs.core.truth_(_QMARK_cb_uuid)?((function (vec__67366,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function taoensso$sente$reply_fn(resp_clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,703,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__67366,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send (ws reply): %s\",resp_clj], null);\n});})(vec__67366,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-253619086);\n\nreturn taoensso.sente.interfaces.sch_send_BANG_(server_ch,websocket_QMARK_,taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(packer__$1,resp_clj,_QMARK_cb_uuid));\n});})(vec__67366,clj,_QMARK_cb_uuid,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n:null));\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-close\",\"on-close\",-761178394),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,_status){\nvar conn_type = (cljs.core.truth_(websocket_QMARK_)?new cljs.core.Keyword(null,\"ws\",\"ws\",86841443):new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549));\nvar _ = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,712,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (conn_type,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"%s channel closed: %s (%s)\",(cljs.core.truth_(websocket_QMARK_)?\"WebSocket\":\"Ajax\"),uid,sch_uuid], null);\n});})(conn_type,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-363369297);\nvar updated_conn = upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4(conn_type,uid,client_id,null);\nvar udt_close = new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751).cljs$core$IFn$_invoke$arity$1(updated_conn);\nvar c__65686__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (state_67420){\nvar state_val_67421 = (state_67420[(1)]);\nif((state_val_67421 === (7))){\nvar state_67420__$1 = state_67420;\nvar statearr_67422_68373 = state_67420__$1;\n(statearr_67422_68373[(2)] = null);\n\n(statearr_67422_68373[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (1))){\nvar inst_67369 = cljs.core.async.timeout((5000));\nvar state_67420__$1 = state_67420;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67420__$1,(2),inst_67369);\n} else {\nif((state_val_67421 === (4))){\nvar state_67420__$1 = state_67420;\nvar statearr_67423_68374 = state_67420__$1;\n(statearr_67423_68374[(2)] = null);\n\n(statearr_67423_68374[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (13))){\nvar state_67420__$1 = state_67420;\nvar statearr_67424_68375 = state_67420__$1;\n(statearr_67424_68375[(2)] = null);\n\n(statearr_67424_68375[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (6))){\nvar inst_67379 = (state_67420[(7)]);\nvar inst_67381 = (state_67420[(8)]);\nvar inst_67380 = (state_67420[(9)]);\nvar inst_67397 = (state_67420[(10)]);\nvar inst_67392 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67393 = [conn_type,uid,client_id];\nvar inst_67394 = (new cljs.core.PersistentVector(null,3,(5),inst_67392,inst_67393,null));\nvar inst_67396 = (function (){var vec__67372 = inst_67379;\nvar __QMARK_sch = inst_67380;\nvar udt_t1 = inst_67381;\nreturn ((function (vec__67372,__QMARK_sch,udt_t1,inst_67379,inst_67381,inst_67380,inst_67397,inst_67392,inst_67393,inst_67394,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (p__67395){\nvar vec__67425 = p__67395;\nvar _sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67425,(0),null);\nvar udt_t1__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67425,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1__$1,udt_close)){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),true);\n} else {\nreturn taoensso.encore.swapped(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [_sch,udt_t1__$1], null),false);\n}\n});\n;})(vec__67372,__QMARK_sch,udt_t1,inst_67379,inst_67381,inst_67380,inst_67397,inst_67392,inst_67393,inst_67394,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_67397__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_67394,inst_67396);\nvar state_67420__$1 = (function (){var statearr_67428 = state_67420;\n(statearr_67428[(10)] = inst_67397__$1);\n\nreturn statearr_67428;\n})();\nif(cljs.core.truth_(inst_67397__$1)){\nvar statearr_67429_68376 = state_67420__$1;\n(statearr_67429_68376[(1)] = (9));\n\n} else {\nvar statearr_67430_68377 = state_67420__$1;\n(statearr_67430_68377[(1)] = (10));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (3))){\nvar inst_67379 = (state_67420[(7)]);\nvar inst_67381 = (state_67420[(8)]);\nvar inst_67380 = (state_67420[(9)]);\nvar inst_67384 = (function (){var vec__67372 = inst_67379;\nvar __QMARK_sch = inst_67380;\nvar udt_t1 = inst_67381;\nreturn ((function (vec__67372,__QMARK_sch,udt_t1,inst_67379,inst_67381,inst_67380,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"close-timeout: %s %s %s %s\",conn_type,uid,sch_uuid,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(udt_t1,udt_close),udt_t1,udt_close], null)], null);\n});\n;})(vec__67372,__QMARK_sch,udt_t1,inst_67379,inst_67381,inst_67380,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_67385 = (new cljs.core.Delay(inst_67384,null));\nvar inst_67386 = taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,726,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),inst_67385,null,-910835885);\nvar state_67420__$1 = state_67420;\nvar statearr_67431_68378 = state_67420__$1;\n(statearr_67431_68378[(2)] = inst_67386);\n\n(statearr_67431_68378[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (12))){\nvar inst_67406 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67407 = [new cljs.core.Keyword(\"chsk\",\"uidport-close\",\"chsk/uidport-close\",901058678),uid];\nvar inst_67408 = (new cljs.core.PersistentVector(null,2,(5),inst_67406,inst_67407,null));\nvar inst_67409 = receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1(inst_67408);\nvar state_67420__$1 = state_67420;\nvar statearr_67432_68379 = state_67420__$1;\n(statearr_67432_68379[(2)] = inst_67409);\n\n(statearr_67432_68379[(1)] = (14));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (2))){\nvar inst_67379 = (state_67420[(7)]);\nvar inst_67371 = (state_67420[(2)]);\nvar inst_67375 = cljs.core.deref(conns_);\nvar inst_67376 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67377 = [conn_type,uid,client_id];\nvar inst_67378 = (new cljs.core.PersistentVector(null,3,(5),inst_67376,inst_67377,null));\nvar inst_67379__$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(inst_67375,inst_67378);\nvar inst_67380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67379__$1,(0),null);\nvar inst_67381 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_67379__$1,(1),null);\nvar inst_67382 = cljs.core.deref(taoensso.sente.debug_mode_QMARK__);\nvar state_67420__$1 = (function (){var statearr_67433 = state_67420;\n(statearr_67433[(7)] = inst_67379__$1);\n\n(statearr_67433[(8)] = inst_67381);\n\n(statearr_67433[(9)] = inst_67380);\n\n(statearr_67433[(11)] = inst_67371);\n\nreturn statearr_67433;\n})();\nif(cljs.core.truth_(inst_67382)){\nvar statearr_67434_68380 = state_67420__$1;\n(statearr_67434_68380[(1)] = (3));\n\n} else {\nvar statearr_67436_68381 = state_67420__$1;\n(statearr_67436_68381[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (11))){\nvar inst_67415 = (state_67420[(2)]);\nvar state_67420__$1 = state_67420;\nvar statearr_67439_68382 = state_67420__$1;\n(statearr_67439_68382[(2)] = inst_67415);\n\n(statearr_67439_68382[(1)] = (8));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (9))){\nvar inst_67379 = (state_67420[(7)]);\nvar inst_67381 = (state_67420[(8)]);\nvar inst_67380 = (state_67420[(9)]);\nvar inst_67397 = (state_67420[(10)]);\nvar inst_67399 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67400 = [conn_type,uid];\nvar inst_67401 = (new cljs.core.PersistentVector(null,2,(5),inst_67399,inst_67400,null));\nvar inst_67402 = (function (){var vec__67372 = inst_67379;\nvar __QMARK_sch = inst_67380;\nvar udt_t1 = inst_67381;\nvar disconnect_QMARK_ = inst_67397;\nreturn ((function (vec__67372,__QMARK_sch,udt_t1,disconnect_QMARK_,inst_67379,inst_67381,inst_67380,inst_67397,inst_67399,inst_67400,inst_67401,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (_QMARK_m){\nif(cljs.core.empty_QMARK_(_QMARK_m)){\nreturn new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782);\n} else {\nreturn _QMARK_m;\n}\n});\n;})(vec__67372,__QMARK_sch,udt_t1,disconnect_QMARK_,inst_67379,inst_67381,inst_67380,inst_67397,inst_67399,inst_67400,inst_67401,state_val_67421,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar inst_67403 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_67401,inst_67402);\nvar inst_67404 = upd_connected_uid_BANG_(uid);\nvar state_67420__$1 = (function (){var statearr_67441 = state_67420;\n(statearr_67441[(12)] = inst_67403);\n\nreturn statearr_67441;\n})();\nif(cljs.core.truth_(inst_67404)){\nvar statearr_67442_68383 = state_67420__$1;\n(statearr_67442_68383[(1)] = (12));\n\n} else {\nvar statearr_67443_68384 = state_67420__$1;\n(statearr_67443_68384[(1)] = (13));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (5))){\nvar inst_67381 = (state_67420[(8)]);\nvar inst_67389 = (state_67420[(2)]);\nvar inst_67390 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_67381,udt_close);\nvar state_67420__$1 = (function (){var statearr_67444 = state_67420;\n(statearr_67444[(13)] = inst_67389);\n\nreturn statearr_67444;\n})();\nif(inst_67390){\nvar statearr_67445_68385 = state_67420__$1;\n(statearr_67445_68385[(1)] = (6));\n\n} else {\nvar statearr_67446_68386 = state_67420__$1;\n(statearr_67446_68386[(1)] = (7));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (14))){\nvar inst_67412 = (state_67420[(2)]);\nvar state_67420__$1 = state_67420;\nvar statearr_67447_68387 = state_67420__$1;\n(statearr_67447_68387[(2)] = inst_67412);\n\n(statearr_67447_68387[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (10))){\nvar state_67420__$1 = state_67420;\nvar statearr_67448_68388 = state_67420__$1;\n(statearr_67448_68388[(2)] = null);\n\n(statearr_67448_68388[(1)] = (11));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67421 === (8))){\nvar inst_67418 = (state_67420[(2)]);\nvar state_67420__$1 = state_67420;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67420__$1,inst_67418);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67450 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_67450[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67450[(1)] = (1));\n\nreturn statearr_67450;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67420){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67420);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67451){if((e67451 instanceof Object)){\nvar ex__65667__auto__ = e67451;\nvar statearr_67452_68389 = state_67420;\n(statearr_67452_68389[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67420);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67451;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68390 = state_67420;\nstate_67420 = G__68390;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67420){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67420);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n})();\nvar state__65688__auto__ = (function (){var statearr_67453 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67453[(6)] = c__65686__auto__);\n\nreturn statearr_67453;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto__,conn_type,_,updated_conn,udt_close,sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n);\n\nreturn c__65686__auto__;\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,new cljs.core.Keyword(null,\"on-error\",\"on-error\",1728533530),((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (server_ch,websocket_QMARK_,error){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,748,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"ring-req->server-ch-resp error: %s (%s)\",error,uid,sch_uuid], null);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n,null)),null,-1951160638);\n});})(sch_uuid,params,client_id,uid,receive_event_msg_BANG_,send_handshake_BANG_,allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null));\n\n}\n}\n}\n});})(allowed_origins__$1,packer__$1,ch_recv,user_id_fn__$1,conns_,send_buffers_,connected_uids_,upd_conn_BANG_,connect_uid_BANG_,upd_connected_uid_BANG_,send_fn,bad_csrf_QMARK_,ev_msg_const,vec__67073,map__67076,map__67076__$1,ws_kalive_ms,send_buf_ms_ws,allowed_origins,lp_timeout_ms,csrf_token_fn,packer,send_buf_ms_ajax,bad_origin_fn,handshake_data_fn,user_id_fn,recv_buf_or_n,bad_csrf_fn))\n], null);\n});\n\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ntaoensso.sente.make_channel_socket_server_BANG_.cljs$lang$applyTo = (function (seq67068){\nvar G__67069 = cljs.core.first(seq67068);\nvar seq67068__$1 = cljs.core.next(seq67068);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__67069,seq67068__$1);\n});\n\n/**\n * Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ws_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ws_clients_BANG_(conns_,uid,buffered_evs_pstr,upd_conn_BANG_){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,754,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ws-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,632522471);\n\nvar seq__67455 = cljs.core.seq(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),uid], null)));\nvar chunk__67456 = null;\nvar count__67457 = (0);\nvar i__67458 = (0);\nwhile(true){\nif((i__67458 < count__67457)){\nvar vec__67480 = chunk__67456.cljs$core$IIndexed$_nth$arity$2(null,i__67458);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67480,(0),null);\nvar vec__67483 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67480,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67483,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67483,(1),null);\nvar temp__5735__auto___68391 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___68391)){\nvar sch_68392 = temp__5735__auto___68391;\nvar G__67488_68393 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nvar G__67489_68394 = uid;\nvar G__67490_68395 = client_id;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(G__67488_68393,G__67489_68394,G__67490_68395) : upd_conn_BANG_.call(null,G__67488_68393,G__67489_68394,G__67490_68395));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_68392,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__68396 = seq__67455;\nvar G__68397 = chunk__67456;\nvar G__68398 = count__67457;\nvar G__68399 = (i__67458 + (1));\nseq__67455 = G__68396;\nchunk__67456 = G__68397;\ncount__67457 = G__68398;\ni__67458 = G__68399;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__67455);\nif(temp__5735__auto__){\nvar seq__67455__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__67455__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__67455__$1);\nvar G__68400 = cljs.core.chunk_rest(seq__67455__$1);\nvar G__68401 = c__4550__auto__;\nvar G__68402 = cljs.core.count(c__4550__auto__);\nvar G__68403 = (0);\nseq__67455 = G__68400;\nchunk__67456 = G__68401;\ncount__67457 = G__68402;\ni__67458 = G__68403;\ncontinue;\n} else {\nvar vec__67491 = cljs.core.first(seq__67455__$1);\nvar client_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67491,(0),null);\nvar vec__67494 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67491,(1),null);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67494,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67494,(1),null);\nvar temp__5735__auto___68404__$1 = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto___68404__$1)){\nvar sch_68405 = temp__5735__auto___68404__$1;\nvar G__67500_68406 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nvar G__67501_68407 = uid;\nvar G__67502_68408 = client_id;\n(upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3 ? upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3(G__67500_68406,G__67501_68407,G__67502_68408) : upd_conn_BANG_.call(null,G__67500_68406,G__67501_68407,G__67502_68408));\n\ntaoensso.sente.interfaces.sch_send_BANG_(sch_68405,new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101),buffered_evs_pstr);\n} else {\n}\n\n\nvar G__68409 = cljs.core.next(seq__67455__$1);\nvar G__68410 = null;\nvar G__68411 = (0);\nvar G__68412 = (0);\nseq__67455 = G__68409;\nchunk__67456 = G__68410;\ncount__67457 = G__68411;\ni__67458 = G__68412;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n *   Allows some time for possible Ajax poller reconnects.\n */\ntaoensso.sente.send_buffered_server_evs_GT_ajax_clients_BANG_ = (function taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG_(conns_,uid,buffered_evs_pstr){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,764,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"send-buffered-server-evs>ajax-clients!: %s\",buffered_evs_pstr], null);\n}),null)),null,-149593619);\n\nvar ms_backoffs = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(90),(180),(360),(720),(1440)], null);\nvar client_ids_unsatisfied = cljs.core.keys(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(conns_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid], null)));\nif(cljs.core.empty_QMARK_(client_ids_unsatisfied)){\nreturn null;\n} else {\nvar c__65686__auto__ = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (state_67553){\nvar state_val_67554 = (state_67553[(1)]);\nif((state_val_67554 === (7))){\nvar inst_67506 = (state_67553[(7)]);\nvar inst_67514 = (state_67553[(8)]);\nvar inst_67505 = (state_67553[(9)]);\nvar inst_67524 = (function (){var n = inst_67505;\nvar client_ids_satisfied = inst_67506;\nvar _QMARK_pulled = inst_67514;\nreturn ((function (n,client_ids_satisfied,_QMARK_pulled,inst_67506,inst_67514,inst_67505,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (s,client_id,p__67523){\nvar vec__67555 = p__67523;\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67555,(0),null);\nvar _udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67555,(1),null);\nvar sent_QMARK_ = (function (){var temp__5735__auto__ = _QMARK_sch;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar sch = temp__5735__auto__;\nreturn taoensso.sente.interfaces.sch_send_BANG_(_QMARK_sch,cljs.core.not(new cljs.core.Keyword(null,\"websocket\",\"websocket\",-1714963101)),buffered_evs_pstr);\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(sent_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,client_id);\n} else {\nreturn s;\n}\n});\n;})(n,client_ids_satisfied,_QMARK_pulled,inst_67506,inst_67514,inst_67505,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_67525 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_67526 = cljs.core.reduce_kv(inst_67524,inst_67525,inst_67514);\nvar state_67553__$1 = state_67553;\nvar statearr_67561_68413 = state_67553__$1;\n(statearr_67561_68413[(2)] = inst_67526);\n\n(statearr_67561_68413[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (1))){\nvar inst_67504 = cljs.core.PersistentHashSet.EMPTY;\nvar inst_67505 = (0);\nvar inst_67506 = inst_67504;\nvar state_67553__$1 = (function (){var statearr_67562 = state_67553;\n(statearr_67562[(7)] = inst_67506);\n\n(statearr_67562[(9)] = inst_67505);\n\nreturn statearr_67562;\n})();\nvar statearr_67563_68414 = state_67553__$1;\n(statearr_67563_68414[(2)] = null);\n\n(statearr_67563_68414[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (4))){\nvar state_67553__$1 = state_67553;\nvar statearr_67564_68415 = state_67553__$1;\n(statearr_67564_68415[(2)] = true);\n\n(statearr_67564_68415[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (15))){\nvar inst_67546 = (state_67553[(2)]);\nvar state_67553__$1 = state_67553;\nvar statearr_67565_68416 = state_67553__$1;\n(statearr_67565_68416[(2)] = inst_67546);\n\n(statearr_67565_68416[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (13))){\nvar inst_67531 = (state_67553[(10)]);\nvar inst_67537 = cljs.core.rand_int(inst_67531);\nvar inst_67538 = (inst_67531 + inst_67537);\nvar inst_67539 = cljs.core.async.timeout(inst_67538);\nvar state_67553__$1 = state_67553;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67553__$1,(16),inst_67539);\n} else {\nif((state_val_67554 === (6))){\nvar inst_67514 = (state_67553[(8)]);\nvar inst_67521 = (state_67553[(2)]);\nvar state_67553__$1 = (function (){var statearr_67570 = state_67553;\n(statearr_67570[(11)] = inst_67521);\n\nreturn statearr_67570;\n})();\nif(cljs.core.truth_(inst_67514)){\nvar statearr_67571_68417 = state_67553__$1;\n(statearr_67571_68417[(1)] = (7));\n\n} else {\nvar statearr_67572_68418 = state_67553__$1;\n(statearr_67572_68418[(1)] = (8));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (3))){\nvar inst_67551 = (state_67553[(2)]);\nvar state_67553__$1 = state_67553;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67553__$1,inst_67551);\n} else {\nif((state_val_67554 === (12))){\nvar inst_67549 = (state_67553[(2)]);\nvar state_67553__$1 = state_67553;\nvar statearr_67573_68419 = state_67553__$1;\n(statearr_67573_68419[(2)] = inst_67549);\n\n(statearr_67573_68419[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (2))){\nvar inst_67506 = (state_67553[(7)]);\nvar inst_67514 = (state_67553[(8)]);\nvar inst_67505 = (state_67553[(9)]);\nvar inst_67510 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67511 = [new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),uid];\nvar inst_67512 = (new cljs.core.PersistentVector(null,2,(5),inst_67510,inst_67511,null));\nvar inst_67513 = (function (){var n = inst_67505;\nvar client_ids_satisfied = inst_67506;\nreturn ((function (n,client_ids_satisfied,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (m){\nvar ks_to_pull = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(client_ids_satisfied,cljs.core.keys(m));\nif(cljs.core.empty_QMARK_(ks_to_pull)){\nreturn taoensso.encore.swapped(m,null);\n} else {\nreturn taoensso.encore.swapped(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (ks_to_pull,n,client_ids_satisfied,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (m__$1,k){\nvar vec__67575 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k);\nvar _QMARK_sch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67575,(0),null);\nvar udt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67575,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,udt], null));\n});})(ks_to_pull,n,client_ids_satisfied,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n,m,ks_to_pull),cljs.core.select_keys(m,ks_to_pull));\n}\n});\n;})(n,client_ids_satisfied,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_67514__$1 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(conns_,inst_67512,inst_67513);\nvar inst_67515 = (function (){var n = inst_67505;\nvar client_ids_satisfied = inst_67506;\nvar _QMARK_pulled = inst_67514__$1;\nreturn ((function (n,client_ids_satisfied,_QMARK_pulled,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,inst_67513,inst_67514__$1,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function (x){\nvar or__4131__auto__ = (x == null);\nif(or__4131__auto__){\nreturn or__4131__auto__;\n} else {\nvar fexpr__67580 = taoensso.truss.impl.non_throwing(cljs.core.map_QMARK_);\nreturn (fexpr__67580.cljs$core$IFn$_invoke$arity$1 ? fexpr__67580.cljs$core$IFn$_invoke$arity$1(x) : fexpr__67580.call(null,x));\n}\n});\n;})(n,client_ids_satisfied,_QMARK_pulled,inst_67506,inst_67514,inst_67505,inst_67510,inst_67511,inst_67512,inst_67513,inst_67514__$1,state_val_67554,c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar inst_67516 = (inst_67515.cljs$core$IFn$_invoke$arity$1 ? inst_67515.cljs$core$IFn$_invoke$arity$1(inst_67514__$1) : inst_67515.call(null,inst_67514__$1));\nvar state_67553__$1 = (function (){var statearr_67581 = state_67553;\n(statearr_67581[(8)] = inst_67514__$1);\n\nreturn statearr_67581;\n})();\nif(cljs.core.truth_(inst_67516)){\nvar statearr_67582_68420 = state_67553__$1;\n(statearr_67582_68420[(1)] = (4));\n\n} else {\nvar statearr_67583_68421 = state_67553__$1;\n(statearr_67583_68421[(1)] = (5));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (11))){\nvar state_67553__$1 = state_67553;\nvar statearr_67584_68422 = state_67553__$1;\n(statearr_67584_68422[(2)] = null);\n\n(statearr_67584_68422[(1)] = (12));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (9))){\nvar inst_67506 = (state_67553[(7)]);\nvar inst_67531 = (state_67553[(10)]);\nvar inst_67505 = (state_67553[(9)]);\nvar inst_67529 = (state_67553[(2)]);\nvar inst_67530 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(inst_67506,inst_67529);\nvar inst_67531__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ms_backoffs,inst_67505);\nvar state_67553__$1 = (function (){var statearr_67585 = state_67553;\n(statearr_67585[(10)] = inst_67531__$1);\n\n(statearr_67585[(12)] = inst_67530);\n\nreturn statearr_67585;\n})();\nif(cljs.core.truth_(inst_67531__$1)){\nvar statearr_67586_68423 = state_67553__$1;\n(statearr_67586_68423[(1)] = (10));\n\n} else {\nvar statearr_67587_68424 = state_67553__$1;\n(statearr_67587_68424[(1)] = (11));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (5))){\nvar inst_67514 = (state_67553[(8)]);\nvar inst_67519 = taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",791,\"([:or nil? map?] ?pulled)\",inst_67514,null,null);\nvar state_67553__$1 = state_67553;\nvar statearr_67591_68425 = state_67553__$1;\n(statearr_67591_68425[(2)] = inst_67519);\n\n(statearr_67591_68425[(1)] = (6));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (14))){\nvar state_67553__$1 = state_67553;\nvar statearr_67592_68426 = state_67553__$1;\n(statearr_67592_68426[(2)] = null);\n\n(statearr_67592_68426[(1)] = (15));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (16))){\nvar inst_67530 = (state_67553[(12)]);\nvar inst_67505 = (state_67553[(9)]);\nvar inst_67541 = (state_67553[(2)]);\nvar inst_67542 = (inst_67505 + (1));\nvar inst_67505__$1 = inst_67542;\nvar inst_67506 = inst_67530;\nvar state_67553__$1 = (function (){var statearr_67593 = state_67553;\n(statearr_67593[(7)] = inst_67506);\n\n(statearr_67593[(9)] = inst_67505__$1);\n\n(statearr_67593[(13)] = inst_67541);\n\nreturn statearr_67593;\n})();\nvar statearr_67594_68427 = state_67553__$1;\n(statearr_67594_68427[(2)] = null);\n\n(statearr_67594_68427[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (10))){\nvar inst_67530 = (state_67553[(12)]);\nvar inst_67533 = cljs.core.complement(inst_67530);\nvar inst_67534 = taoensso.encore.rsome(inst_67533,client_ids_unsatisfied);\nvar state_67553__$1 = state_67553;\nif(cljs.core.truth_(inst_67534)){\nvar statearr_67595_68428 = state_67553__$1;\n(statearr_67595_68428[(1)] = (13));\n\n} else {\nvar statearr_67596_68429 = state_67553__$1;\n(statearr_67596_68429[(1)] = (14));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67554 === (8))){\nvar state_67553__$1 = state_67553;\nvar statearr_67597_68430 = state_67553__$1;\n(statearr_67597_68430[(2)] = null);\n\n(statearr_67597_68430[(1)] = (9));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto__,ms_backoffs,client_ids_unsatisfied){\nreturn (function() {\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__ = null;\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____0 = (function (){\nvar statearr_67598 = [null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_67598[(0)] = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__);\n\n(statearr_67598[(1)] = (1));\n\nreturn statearr_67598;\n});\nvar taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____1 = (function (state_67553){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67553);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67599){if((e67599 instanceof Object)){\nvar ex__65667__auto__ = e67599;\nvar statearr_67600_68431 = state_67553;\n(statearr_67600_68431[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67553);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67599;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68432 = state_67553;\nstate_67553 = G__68432;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__ = function(state_67553){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____1.call(this,state_67553);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____0;\ntaoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto____1;\nreturn taoensso$sente$send_buffered_server_evs_GT_ajax_clients_BANG__$_state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n})();\nvar state__65688__auto__ = (function (){var statearr_67601 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67601[(6)] = c__65686__auto__);\n\nreturn statearr_67601;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto__,ms_backoffs,client_ids_unsatisfied))\n);\n\nreturn c__65686__auto__;\n}\n});\n/**\n * Alias of `taoensso.encore/ajax-lite`\n */\ntaoensso.sente.ajax_lite = taoensso.encore.ajax_lite;\n\n/**\n * @interface\n */\ntaoensso.sente.IChSocket = function(){};\n\ntaoensso.sente._chsk_connect_BANG_ = (function taoensso$sente$_chsk_connect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(chsk);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_connect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4434__auto__.call(null,chsk));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_connect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4431__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-connect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_disconnect_BANG_ = (function taoensso$sente$_chsk_disconnect_BANG_(chsk,reason){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(chsk,reason);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_disconnect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4434__auto__.call(null,chsk,reason));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_disconnect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(chsk,reason) : m__4431__auto__.call(null,chsk,reason));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-disconnect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_reconnect_BANG_ = (function taoensso$sente$_chsk_reconnect_BANG_(chsk){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1(chsk);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_reconnect_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4434__auto__.call(null,chsk));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_reconnect_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(chsk) : m__4431__auto__.call(null,chsk));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-reconnect!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente._chsk_send_BANG_ = (function taoensso$sente$_chsk_send_BANG_(chsk,ev,opts){\nif((((!((chsk == null)))) && ((!((chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 == null)))))){\nreturn chsk.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(chsk,ev,opts);\n} else {\nvar x__4433__auto__ = (((chsk == null))?null:chsk);\nvar m__4434__auto__ = (taoensso.sente._chsk_send_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4434__auto__.call(null,chsk,ev,opts));\n} else {\nvar m__4431__auto__ = (taoensso.sente._chsk_send_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(chsk,ev,opts) : m__4431__auto__.call(null,chsk,ev,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IChSocket.-chsk-send!\",chsk);\n}\n}\n}\n});\n\ntaoensso.sente.chsk_connect_BANG_ = (function taoensso$sente$chsk_connect_BANG_(chsk){\nreturn taoensso.sente._chsk_connect_BANG_(chsk);\n});\n\ntaoensso.sente.chsk_disconnect_BANG_ = (function taoensso$sente$chsk_disconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_disconnect_BANG_(chsk,new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641));\n});\n\n/**\n * Useful for reauthenticating after login/logout, etc.\n */\ntaoensso.sente.chsk_reconnect_BANG_ = (function taoensso$sente$chsk_reconnect_BANG_(chsk){\nreturn taoensso.sente._chsk_reconnect_BANG_(chsk);\n});\n\n/**\n * Deprecated\n */\ntaoensso.sente.chsk_destroy_BANG_ = taoensso.sente.chsk_disconnect_BANG_;\n/**\n * Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\n */\ntaoensso.sente.chsk_send_BANG_ = (function taoensso$sente$chsk_send_BANG_(var_args){\nvar G__67621 = arguments.length;\nswitch (G__67621) {\ncase 2:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 3:\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (chsk,ev){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,cljs.core.PersistentArrayMap.EMPTY);\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$4 = (function (chsk,ev,_QMARK_timeout_ms,_QMARK_cb){\nreturn taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3(chsk,ev,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),_QMARK_timeout_ms,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),_QMARK_cb], null));\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (chsk,ev,opts){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,841,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send: (%s) %s\",cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841),cljs.core.boolean$(new cljs.core.Keyword(null,\"cb\",\"cb\",589947841).cljs$core$IFn$_invoke$arity$1(opts))),ev], null);\n}),null)),null,-1576897073);\n\nreturn taoensso.sente._chsk_send_BANG_(chsk,ev,opts);\n});\n\ntaoensso.sente.chsk_send_BANG_.cljs$lang$maxFixedArity = 4;\n\ntaoensso.sente.chsk_send__GT_closed_BANG_ = (function taoensso$sente$chsk_send__GT_closed_BANG_(_QMARK_cb_fn){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,846,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk send against closed chsk.\"], null);\n}),null)),null,645580769);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__67636_68434 = new cljs.core.Keyword(\"chsk\",\"closed\",\"chsk/closed\",-922855264);\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__67636_68434) : _QMARK_cb_fn.call(null,G__67636_68434));\n} else {\n}\n\nreturn false;\n});\ntaoensso.sente.assert_send_args = (function taoensso$sente$assert_send_args(x,_QMARK_timeout_ms,_QMARK_cb){\ntaoensso.sente.assert_event(x);\n\nif((((((_QMARK_timeout_ms == null)) && ((_QMARK_cb == null)))) || (taoensso.encore.nat_int_QMARK_(_QMARK_timeout_ms)))){\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb requires a timeout; timeout-ms should be a +ive integer: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(_QMARK_timeout_ms)].join(''),\"\\n\",\"(or (and (nil? ?timeout-ms) (nil? ?cb)) (and (enc/nat-int? ?timeout-ms)))\"].join('')));\n}\n\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)) || (taoensso.encore.chan_QMARK_(_QMARK_cb)))){\nreturn null;\n} else {\nthrow (new Error([\"Assert failed: \",[\"cb should be nil, an ifn, or a channel: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(_QMARK_cb))].join(''),\"\\n\",\"(or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\"].join('')));\n}\n});\ntaoensso.sente.pull_unused_cb_fn_BANG_ = (function taoensso$sente$pull_unused_cb_fn_BANG_(cbs_waiting_,_QMARK_cb_uuid){\nvar temp__5735__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar cb_uuid = temp__5735__auto__;\nreturn taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3(cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid], null),((function (cb_uuid,temp__5735__auto__){\nreturn (function (_QMARK_f){\nreturn taoensso.encore.swapped(new cljs.core.Keyword(\"swap\",\"dissoc\",\"swap/dissoc\",-605373782),_QMARK_f);\n});})(cb_uuid,temp__5735__auto__))\n);\n} else {\nreturn null;\n}\n});\n/**\n * Atomically swaps the value of chk's :state_ atom.\n */\ntaoensso.sente.swap_chsk_state_BANG_ = (function taoensso$sente$swap_chsk_state_BANG_(chsk,f){\nvar vec__67650 = taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk),(function (old_state){\nvar new_state = (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(old_state) : f.call(null,old_state));\nvar new_state__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530).cljs$core$IFn$_invoke$arity$1(old_state))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_state,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),false):new_state);\nvar new_state__$2 = (cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(new_state__$1))?cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new_state__$1,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)):new_state__$1);\nreturn taoensso.encore.swapped(new_state__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state__$2], null));\n}));\nvar old_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67650,(0),null);\nvar new_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67650,(1),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_state,new_state)){\nvar output = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_state,new_state], null);\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(chsk,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099)], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"state\",\"chsk/state\",-1991397620),output], null));\n\nreturn output;\n} else {\nreturn null;\n}\n});\ntaoensso.sente.chsk_state__GT_closed = (function taoensso$sente$chsk_state__GT_closed(state,reason){\nvar e_68435 = (function (){try{if(cljs.core.map_QMARK_(state)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67654){if((e67654 instanceof Error)){\nvar e = e67654;\nreturn e;\n} else {\nthrow e67654;\n\n}\n}})();\nif((e_68435 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",893,\"(map? state)\",state,e_68435,null);\n}\n\nvar e_68436 = (function (){try{if((function (){var fexpr__67657 = (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__67658 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"requested-disconnect\",\"requested-disconnect\",1037120641),null,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720),null,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424),null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__67658) : taoensso.truss.impl.set_STAR_.call(null,G__67658));\n})(),x);\n});\nreturn fexpr__67657(reason);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67655){if((e67655 instanceof Error)){\nvar e = e67655;\nreturn e;\n} else {\nthrow e67655;\n\n}\n}})();\nif((e_68436 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",894,\"([:el #{:requested-disconnect :downgrading-ws-to-ajax :unexpected :requested-reconnect}] reason)\",reason,e_68436,null);\n}\n\nif(cljs.core.truth_((function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(state);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(reason,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n}\n})())){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733)),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"last-close\",\"last-close\",-2054255782),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null)], 0));\n} else {\nreturn state;\n}\n});\n/**\n * Experimental, undocumented. Allows a core.async channel to be provided\n *   instead of a cb-fn. The channel will receive values of form\n *   [<event-id>.cb <reply>].\n */\ntaoensso.sente.cb_chan_as_fn = (function taoensso$sente$cb_chan_as_fn(_QMARK_cb,ev){\nif((((_QMARK_cb == null)) || (cljs.core.ifn_QMARK_(_QMARK_cb)))){\nreturn _QMARK_cb;\n} else {\nvar e_68437 = (function (){try{if(taoensso.encore.chan_QMARK_(_QMARK_cb)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67666){if((e67666 instanceof Error)){\nvar e = e67666;\nreturn e;\n} else {\nthrow e67666;\n\n}\n}})();\nif((e_68437 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",915,\"(enc/chan? ?cb)\",_QMARK_cb,e_68437,null);\n}\n\ntaoensso.sente.assert_event(ev);\n\nvar vec__67667 = ev;\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67667,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67667,(1),null);\nvar cb_ch = _QMARK_cb;\nreturn ((function (vec__67667,ev_id,_,cb_ch){\nreturn (function (reply){\nreturn cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(cb_ch,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([taoensso.encore.as_qname(ev_id),\".cb\"].join('')),reply], null));\n});\n;})(vec__67667,ev_id,_,cb_ch))\n}\n});\ntaoensso.sente.receive_buffered_evs_BANG_ = (function taoensso$sente$receive_buffered_evs_BANG_(chs,clj){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,926,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-buffered-evs!: %s\",clj], null);\n}),null)),null,-2004931388);\n\nvar buffered_evs = ((cljs.core.vector_QMARK_(clj))?clj:taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",927,\"(vector? clj)\",clj,null,null));\nvar seq__67671 = cljs.core.seq(buffered_evs);\nvar chunk__67672 = null;\nvar count__67673 = (0);\nvar i__67674 = (0);\nwhile(true){\nif((i__67674 < count__67673)){\nvar ev = chunk__67672.cljs$core$IIndexed$_nth$arity$2(null,i__67674);\ntaoensso.sente.assert_event(ev);\n\nvar vec__67682_68438 = ev;\nvar id_68439 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67682_68438,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_68439),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__68440 = seq__67671;\nvar G__68441 = chunk__67672;\nvar G__68442 = count__67673;\nvar G__68443 = (i__67674 + (1));\nseq__67671 = G__68440;\nchunk__67672 = G__68441;\ncount__67673 = G__68442;\ni__67674 = G__68443;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__67671);\nif(temp__5735__auto__){\nvar seq__67671__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__67671__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__67671__$1);\nvar G__68444 = cljs.core.chunk_rest(seq__67671__$1);\nvar G__68445 = c__4550__auto__;\nvar G__68446 = cljs.core.count(c__4550__auto__);\nvar G__68447 = (0);\nseq__67671 = G__68444;\nchunk__67672 = G__68445;\ncount__67673 = G__68446;\ni__67674 = G__68447;\ncontinue;\n} else {\nvar ev = cljs.core.first(seq__67671__$1);\ntaoensso.sente.assert_event(ev);\n\nvar vec__67688_68448 = ev;\nvar id_68449 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67688_68448,(0),null);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(id_68449),\"chsk\")){\n} else {\nthrow (new Error(\"Assert failed: (not= (namespace id) \\\"chsk\\\")\"));\n}\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(chs),ev);\n\n\nvar G__68450 = cljs.core.next(seq__67671__$1);\nvar G__68451 = null;\nvar G__68452 = (0);\nvar G__68453 = (0);\nseq__67671 = G__68450;\nchunk__67672 = G__68451;\ncount__67673 = G__68452;\ni__67674 = G__68453;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ntaoensso.sente.handshake_QMARK_ = (function taoensso$sente$handshake_QMARK_(x){\nvar and__4120__auto__ = cljs.core.vector_QMARK_(x);\nif(and__4120__auto__){\nvar vec__67695 = x;\nvar x1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67695,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x1,new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686));\n} else {\nreturn and__4120__auto__;\n}\n});\ntaoensso.sente.receive_handshake_BANG_ = (function taoensso$sente$receive_handshake_BANG_(chsk_type,chsk,clj){\nvar e_68454 = (function (){try{if((function (){var fexpr__67702 = (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__67704 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__67704) : taoensso.truss.impl.set_STAR_.call(null,G__67704));\n})(),x);\n});\nreturn fexpr__67702(chsk_type);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67699){if((e67699 instanceof Error)){\nvar e = e67699;\nreturn e;\n} else {\nthrow e67699;\n\n}\n}})();\nif((e_68454 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",941,\"([:el #{:ws :ajax}] chsk-type)\",chsk_type,e_68454,null);\n}\n\nvar e_68455 = (function (){try{if(taoensso.sente.handshake_QMARK_(clj)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67705){if((e67705 instanceof Error)){\nvar e = e67705;\nreturn e;\n} else {\nthrow e67705;\n\n}\n}})();\nif((e_68455 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",942,\"(handshake? clj)\",clj,e_68455,null);\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,943,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"receive-handshake! (%s): %s\",chsk_type,clj], null);\n}),null)),null,1865811426);\n\nvar vec__67707 = clj;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67707,(0),null);\nvar vec__67710 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67707,(1),null);\nvar _QMARK_uid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67710,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67710,(1),null);\nvar _QMARK_handshake_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67710,(2),null);\nvar map__67713 = chsk;\nvar map__67713__$1 = (((((!((map__67713 == null))))?(((((map__67713.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67713.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67713):map__67713);\nvar chs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67713__$1,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120));\nvar ever_opened_QMARK__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67713__$1,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913));\nvar first_handshake_QMARK_ = cljs.core.compare_and_set_BANG_(ever_opened_QMARK__,false,true);\nvar new_state = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),chsk_type,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),true,new cljs.core.Keyword(null,\"uid\",\"uid\",-1447769400),_QMARK_uid,new cljs.core.Keyword(null,\"handshake-data\",\"handshake-data\",-278378864),_QMARK_handshake_data,new cljs.core.Keyword(null,\"first-open?\",\"first-open?\",396686530),first_handshake_QMARK_], null);\nvar handshake_ev = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"handshake\",\"chsk/handshake\",64910686),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_uid,null,_QMARK_handshake_data,first_handshake_QMARK_], null)], null);\ntaoensso.sente.assert_event(handshake_ev);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk,((function (vec__67707,_,vec__67710,_QMARK_uid,___$1,_QMARK_handshake_data,map__67713,map__67713__$1,chs,ever_opened_QMARK__,first_handshake_QMARK_,new_state,handshake_ev){\nreturn (function (p1__67698_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__67698_SHARP_,new_state], 0));\n});})(vec__67707,_,vec__67710,_QMARK_uid,___$1,_QMARK_handshake_data,map__67713,map__67713__$1,chs,ever_opened_QMARK__,first_handshake_QMARK_,new_state,handshake_ev))\n);\n\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(chs),handshake_ev);\n\nreturn new cljs.core.Keyword(null,\"handled\",\"handled\",1889700151);\n});\n/**\n * nnil iff the websocket npm library[1] is available.\n *   Easiest way to install:\n *     1. Add the lein-npm[2] plugin to your `project.clj`,\n *     2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n * \n *   [1] Ref. https://www.npmjs.com/package/websocket\n *   [2] Ref. https://github.com/RyanMcG/lein-npm\n */\ntaoensso.sente._QMARK_node_npm_websocket_ = (new cljs.core.Delay((function (){\nif(((taoensso.sente.node_target_QMARK_) && ((typeof require !== 'undefined')))){\ntry{return require(\"websocket\");\n}catch (e67718){var e = e67718;\nreturn null;\n}} else {\nreturn null;\n}\n}),null));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChWebSocket = (function (client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.ws_kalive_ms = ws_kalive_ms;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.retry_count_ = retry_count_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.cbs_waiting_ = cbs_waiting_;\nthis.socket_ = socket_;\nthis.udt_last_comms_ = udt_last_comms_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k67729,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__67736 = k67729;\nvar G__67736__$1 = (((G__67736 instanceof cljs.core.Keyword))?G__67736.fqn:null);\nswitch (G__67736__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"ws-kalive-ms\":\nreturn self__.ws_kalive_ms;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"retry-count_\":\nreturn self__.retry_count_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"cbs-waiting_\":\nreturn self__.cbs_waiting_;\n\nbreak;\ncase \"socket_\":\nreturn self__.socket_;\n\nbreak;\ncase \"udt-last-comms_\":\nreturn self__.udt_last_comms_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k67729,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__67737){\nvar vec__67738 = p__67737;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67738,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67738,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChWebSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__67728){\nvar self__ = this;\nvar G__67728__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__67728__$1,14,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (14 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__67741 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (1998688700 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__67741(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this67730,other67731){\nvar self__ = this;\nvar this67730__$1 = this;\nreturn (((!((other67731 == null)))) && ((this67730__$1.constructor === other67731.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.client_id,other67731.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.chs,other67731.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.params,other67731.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.packer,other67731.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.url,other67731.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.ws_kalive_ms,other67731.ws_kalive_ms)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.state_,other67731.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.instance_handle_,other67731.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.retry_count_,other67731.retry_count_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.ever_opened_QMARK__,other67731.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.backoff_ms_fn,other67731.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.cbs_waiting_,other67731.cbs_waiting_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.socket_,other67731.socket_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.udt_last_comms_,other67731.udt_last_comms_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67730__$1.__extmap,other67731.__extmap)));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__67728){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__67742 = cljs.core.keyword_identical_QMARK_;\nvar expr__67743 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__67745 = new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140);\nvar G__67746 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67745,G__67746) : pred__67742.call(null,G__67745,G__67746));\n})())){\nreturn (new taoensso.sente.ChWebSocket(G__67728,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67747 = new cljs.core.Keyword(null,\"chs\",\"chs\",376886120);\nvar G__67748 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67747,G__67748) : pred__67742.call(null,G__67747,G__67748));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,G__67728,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67749 = new cljs.core.Keyword(null,\"params\",\"params\",710516235);\nvar G__67750 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67749,G__67750) : pred__67742.call(null,G__67749,G__67750));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,G__67728,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67751 = new cljs.core.Keyword(null,\"packer\",\"packer\",66077544);\nvar G__67752 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67751,G__67752) : pred__67742.call(null,G__67751,G__67752));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,G__67728,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67753 = new cljs.core.Keyword(null,\"url\",\"url\",276297046);\nvar G__67754 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67753,G__67754) : pred__67742.call(null,G__67753,G__67754));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__67728,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67755 = new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968);\nvar G__67756 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67755,G__67756) : pred__67742.call(null,G__67755,G__67756));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__67728,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67757 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__67758 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67757,G__67758) : pred__67742.call(null,G__67757,G__67758));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,G__67728,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67759 = new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457);\nvar G__67760 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67759,G__67760) : pred__67742.call(null,G__67759,G__67760));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,G__67728,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67761 = new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093);\nvar G__67762 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67761,G__67762) : pred__67742.call(null,G__67761,G__67762));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,G__67728,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67763 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913);\nvar G__67764 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67763,G__67764) : pred__67742.call(null,G__67763,G__67764));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,G__67728,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67765 = new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955);\nvar G__67766 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67765,G__67766) : pred__67742.call(null,G__67765,G__67766));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,G__67728,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67767 = new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061);\nvar G__67768 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67767,G__67768) : pred__67742.call(null,G__67767,G__67768));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__67728,self__.socket_,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67769 = new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908);\nvar G__67770 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67769,G__67770) : pred__67742.call(null,G__67769,G__67770));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,G__67728,self__.udt_last_comms_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67771 = new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639);\nvar G__67772 = expr__67743;\nreturn (pred__67742.cljs$core$IFn$_invoke$arity$2 ? pred__67742.cljs$core$IFn$_invoke$arity$2(G__67771,G__67772) : pred__67742.call(null,G__67771,G__67772));\n})())){\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,G__67728,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__67728),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),self__.ws_kalive_ms,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),self__.retry_count_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),self__.cbs_waiting_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),self__.socket_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),self__.udt_last_comms_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__67728){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChWebSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.ws_kalive_ms,self__.state_,self__.instance_handle_,self__.retry_count_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.cbs_waiting_,self__.socket_,self__.udt_last_comms_,G__67728,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChWebSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (chsk__$1){\nreturn (function (p1__67719_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__67719_SHARP_,reason);\n});})(chsk__$1))\n);\n\nvar temp__5735__auto__ = cljs.core.deref(self__.socket_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nreturn s.close((1000),\"CLOSE_NORMAL\");\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__67774 = opts;\nvar map__67774__$1 = (((((!((map__67774 == null))))?(((((map__67774.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67774.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67774):map__67774);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67774__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67774__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67774__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar _QMARK_cb_uuid = (cljs.core.truth_(_QMARK_cb_fn)?taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1((6)):null);\nvar ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,_QMARK_cb_uuid);\nvar temp__5735__auto___68457 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___68457)){\nvar cb_uuid_68458 = temp__5735__auto___68457;\ntaoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3(self__.cbs_waiting_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cb_uuid_68458], null),(function (){var e = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67777){if((e67777 instanceof Error)){\nvar e = e67777;\nreturn e;\n} else {\nthrow e67777;\n\n}\n}})();\nif((e == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1028,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e,null);\n}\n})());\n\nvar temp__5735__auto___68459__$1 = _QMARK_timeout_ms;\nif(cljs.core.truth_(temp__5735__auto___68459__$1)){\nvar timeout_ms_68460 = temp__5735__auto___68459__$1;\nvar c__65686__auto___68461 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (state_67788){\nvar state_val_67789 = (state_67788[(1)]);\nif((state_val_67789 === (1))){\nvar inst_67778 = cljs.core.async.timeout(timeout_ms_68460);\nvar state_67788__$1 = state_67788;\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67788__$1,(2),inst_67778);\n} else {\nif((state_val_67789 === (2))){\nvar inst_67781 = (state_67788[(7)]);\nvar inst_67780 = (state_67788[(2)]);\nvar inst_67781__$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,_QMARK_cb_uuid);\nvar state_67788__$1 = (function (){var statearr_67793 = state_67788;\n(statearr_67793[(8)] = inst_67780);\n\n(statearr_67793[(7)] = inst_67781__$1);\n\nreturn statearr_67793;\n})();\nif(cljs.core.truth_(inst_67781__$1)){\nvar statearr_67794_68462 = state_67788__$1;\n(statearr_67794_68462[(1)] = (3));\n\n} else {\nvar statearr_67795_68463 = state_67788__$1;\n(statearr_67795_68463[(1)] = (4));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67789 === (3))){\nvar inst_67781 = (state_67788[(7)]);\nvar inst_67783 = (function (){var G__67797 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (inst_67781.cljs$core$IFn$_invoke$arity$1 ? inst_67781.cljs$core$IFn$_invoke$arity$1(G__67797) : inst_67781.call(null,G__67797));\n})();\nvar state_67788__$1 = state_67788;\nvar statearr_67798_68464 = state_67788__$1;\n(statearr_67798_68464[(2)] = inst_67783);\n\n(statearr_67798_68464[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67789 === (4))){\nvar state_67788__$1 = state_67788;\nvar statearr_67799_68465 = state_67788__$1;\n(statearr_67799_68465[(2)] = null);\n\n(statearr_67799_68465[(1)] = (5));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67789 === (5))){\nvar inst_67786 = (state_67788[(2)]);\nvar state_67788__$1 = state_67788;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67788__$1,inst_67786);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n});})(c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67803 = [null,null,null,null,null,null,null,null,null];\n(statearr_67803[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67803[(1)] = (1));\n\nreturn statearr_67803;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67788){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67788);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67804){if((e67804 instanceof Object)){\nvar ex__65667__auto__ = e67804;\nvar statearr_67805_68466 = state_67788;\n(statearr_67805_68466[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67788);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67804;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68467 = state_67788;\nstate_67788 = G__68467;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67788){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67788);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n})();\nvar state__65688__auto__ = (function (){var statearr_67806 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67806[(6)] = c__65686__auto___68461);\n\nreturn statearr_67806;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto___68461,timeout_ms_68460,temp__5735__auto___68459__$1,cb_uuid_68458,temp__5735__auto___68457,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n\n} else {\n}\n} else {\n}\n\ntry{cljs.core.deref(self__.socket_).send(ppstr);\n\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}catch (e67807){var e = e67807;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1040,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"Chsk send error\"], null);\n});})(e,_QMARK_cb_uuid,ppstr,map__67774,map__67774__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n,null)),null,-725992495);\n\nvar temp__5735__auto___68468 = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5735__auto___68468)){\nvar cb_uuid_68469 = temp__5735__auto___68468;\nvar cb_fn_STAR__68470 = (function (){var or__4131__auto__ = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid_68469);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar e__$1 = (function (){try{if(taoensso.truss.impl.some_QMARK_(_QMARK_cb_fn)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e67811){if((e67811 instanceof Error)){\nvar e__$1 = e67811;\nreturn e__$1;\n} else {\nthrow e67811;\n\n}\n}})();\nif((e__$1 == null)){\nreturn _QMARK_cb_fn;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1043,\"(taoensso.truss.impl/some? ?cb-fn)\",_QMARK_cb_fn,e__$1,null);\n}\n}\n})();\nvar G__67813_68471 = new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439);\n(cb_fn_STAR__68470.cljs$core$IFn$_invoke$arity$1 ? cb_fn_STAR__68470.cljs$core$IFn$_invoke$arity$1(G__67813_68471) : cb_fn_STAR__68470.call(null,G__67813_68471));\n} else {\n}\n\nreturn false;\n}}\n});\n\ntaoensso.sente.ChWebSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = (function (){var or__4131__auto__ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"WebSocket\");\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(goog.global,\"MozWebSocket\");\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(taoensso.sente._QMARK_node_npm_websocket_),\"w3cwebsocket\");\n}\n}\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar WebSocket = temp__5735__auto__;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = ((function (instance_handle,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});})(instance_handle,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar connect_fn = ((function (instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function taoensso$sente$connect_fn(){\nif(have_handle_QMARK_()){\nvar retry_fn = ((function (instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.retry_count_,cljs.core.inc);\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1065,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-1236150568);\n\ngoog.global.setTimeout(taoensso$sente$connect_fn,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__67720_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67720_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar _QMARK_socket = (function (){try{return (new WebSocket(taoensso.encore.merge_url_with_query_string(self__.url,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0)))));\n}catch (e67822){var e = e67822;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1080,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e,retry_fn,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e,\"WebSocket error\"], null);\n});})(e,retry_fn,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-1677595578);\n\nreturn null;\n}})();\nif(cljs.core.not(_QMARK_socket)){\nreturn retry_fn();\n} else {\nreturn cljs.core.reset_BANG_(self__.socket_,(function (){var G__67823 = _QMARK_socket;\n(G__67823[\"onerror\"] = ((function (G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1090,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WebSocket error: %s\",(function (){try{return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(ws_ev);\n}catch (e67824){var _ = e67824;\nreturn ws_ev;\n}})()], null);\n});})(G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-267758593);\n\nvar last_ws_error = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev], null);\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (last_ws_error,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__67721_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67721_SHARP_,new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502),last_ws_error);\n});})(last_ws_error,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n});})(G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n(G__67823[\"onmessage\"] = ((function (G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\nvar ppstr = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"data\");\nvar vec__67825 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67825,(0),null);\nvar _QMARK_cb_uuid = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67825,(1),null);\ncljs.core.reset_BANG_(self__.udt_last_comms_,taoensso.encore.now_udt());\n\nvar or__4131__auto__ = ((taoensso.sente.handshake_QMARK_(clj))?(function (){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),chsk__$1,clj);\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nreturn new cljs.core.Keyword(null,\"handshake\",\"handshake\",68079331);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)))?(function (){\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(self__.chs),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)], null));\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nvar temp__5733__auto__ = _QMARK_cb_uuid;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar cb_uuid = temp__5733__auto__;\nvar temp__5733__auto____$1 = taoensso.sente.pull_unused_cb_fn_BANG_(self__.cbs_waiting_,cb_uuid);\nif(cljs.core.truth_(temp__5733__auto____$1)){\nvar cb_fn = temp__5733__auto____$1;\nreturn (cb_fn.cljs$core$IFn$_invoke$arity$1 ? cb_fn.cljs$core$IFn$_invoke$arity$1(clj) : cb_fn.call(null,clj));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1126,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto____$1,cb_uuid,temp__5733__auto__,or__4131__auto____$1,or__4131__auto__,ppstr,vec__67825,clj,_QMARK_cb_uuid,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",clj], null);\n});})(temp__5733__auto____$1,cb_uuid,temp__5733__auto__,or__4131__auto____$1,or__4131__auto__,ppstr,vec__67825,clj,_QMARK_cb_uuid,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-510292196);\n}\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});})(G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n(G__67823[\"onclose\"] = ((function (G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (ws_ev){\nvar clean_QMARK_ = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"wasClean\");\nvar code = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"code\");\nvar reason = taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2(ws_ev,\"reason\");\nvar last_ws_close = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ws_ev,new cljs.core.Keyword(null,\"clean?\",\"clean?\",-1675631009),clean_QMARK_,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"reason\",\"reason\",-2070751759),reason], null);\nif(cljs.core.truth_(clean_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"taoensso.sente\",null,1148,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Clean WebSocket close, will not attempt reconnect\"], null);\n});})(clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n,null)),null,-1347502603);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__67724_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67724_SHARP_,new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n});})(clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (p1__67726_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(taoensso.sente.chsk_state__GT_closed(p1__67726_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424)),new cljs.core.Keyword(null,\"last-ws-close\",\"last-ws-close\",-798104932),last_ws_close);\n});})(clean_QMARK_,code,reason,last_ws_close,G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\nreturn retry_fn();\n}\n});})(G__67823,retry_fn,_QMARK_socket,instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\nreturn G__67823;\n})());\n}\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,WebSocket,temp__5735__auto__,chsk__$1))\n;\nvar temp__5735__auto___68472__$1 = self__.ws_kalive_ms;\nif(cljs.core.truth_(temp__5735__auto___68472__$1)){\nvar ms_68473 = temp__5735__auto___68472__$1;\nvar c__65686__auto___68474 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function (state_67867){\nvar state_val_67868 = (state_67867[(1)]);\nif((state_val_67868 === (7))){\nvar inst_67862 = (state_67867[(2)]);\nvar state_67867__$1 = state_67867;\nvar statearr_67869_68475 = state_67867__$1;\n(statearr_67869_68475[(2)] = inst_67862);\n\n(statearr_67869_68475[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (1))){\nvar state_67867__$1 = state_67867;\nvar statearr_67870_68476 = state_67867__$1;\n(statearr_67870_68476[(2)] = null);\n\n(statearr_67870_68476[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (4))){\nvar inst_67841 = (state_67867[(2)]);\nvar inst_67842 = have_handle_QMARK_();\nvar state_67867__$1 = (function (){var statearr_67874 = state_67867;\n(statearr_67874[(7)] = inst_67841);\n\nreturn statearr_67874;\n})();\nif(inst_67842){\nvar statearr_67875_68477 = state_67867__$1;\n(statearr_67875_68477[(1)] = (5));\n\n} else {\nvar statearr_67876_68478 = state_67867__$1;\n(statearr_67876_68478[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (6))){\nvar state_67867__$1 = state_67867;\nvar statearr_67877_68479 = state_67867__$1;\n(statearr_67877_68479[(2)] = null);\n\n(statearr_67877_68479[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (3))){\nvar inst_67864 = (state_67867[(2)]);\nvar state_67867__$1 = state_67867;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_67867__$1,inst_67864);\n} else {\nif((state_val_67868 === (2))){\nvar inst_67838 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_67839 = cljs.core.async.timeout(ms_68473);\nvar state_67867__$1 = (function (){var statearr_67878 = state_67867;\n(statearr_67878[(8)] = inst_67838);\n\nreturn statearr_67878;\n})();\nreturn cljs.core.async.impl.ioc_helpers.take_BANG_(state_67867__$1,(4),inst_67839);\n} else {\nif((state_val_67868 === (9))){\nvar state_67867__$1 = state_67867;\nvar statearr_67881_68480 = state_67867__$1;\n(statearr_67881_68480[(2)] = null);\n\n(statearr_67881_68480[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (5))){\nvar inst_67838 = (state_67867[(8)]);\nvar inst_67844 = cljs.core.deref(self__.udt_last_comms_);\nvar inst_67845 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_67838,inst_67844);\nvar state_67867__$1 = state_67867;\nif(inst_67845){\nvar statearr_67883_68481 = state_67867__$1;\n(statearr_67883_68481[(1)] = (8));\n\n} else {\nvar statearr_67884_68482 = state_67867__$1;\n(statearr_67884_68482[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (10))){\nvar inst_67857 = (state_67867[(2)]);\nvar state_67867__$1 = (function (){var statearr_67885 = state_67867;\n(statearr_67885[(9)] = inst_67857);\n\nreturn statearr_67885;\n})();\nvar statearr_67886_68483 = state_67867__$1;\n(statearr_67886_68483[(2)] = null);\n\n(statearr_67886_68483[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_67868 === (8))){\nvar inst_67847 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_67848 = [new cljs.core.Keyword(\"chsk\",\"ws-ping\",\"chsk/ws-ping\",191675304)];\nvar inst_67849 = (new cljs.core.PersistentVector(null,1,(5),inst_67847,inst_67848,null));\nvar inst_67850 = [new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231)];\nvar inst_67851 = [true];\nvar inst_67852 = cljs.core.PersistentHashMap.fromArrays(inst_67850,inst_67851);\nvar inst_67853 = chsk__$1.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3(null,inst_67849,inst_67852);\nvar state_67867__$1 = state_67867;\nvar statearr_67889_68484 = state_67867__$1;\n(statearr_67889_68484[(2)] = inst_67853);\n\n(statearr_67889_68484[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1){\nreturn (function() {\nvar taoensso$sente$state_machine__65664__auto__ = null;\nvar taoensso$sente$state_machine__65664__auto____0 = (function (){\nvar statearr_67891 = [null,null,null,null,null,null,null,null,null,null];\n(statearr_67891[(0)] = taoensso$sente$state_machine__65664__auto__);\n\n(statearr_67891[(1)] = (1));\n\nreturn statearr_67891;\n});\nvar taoensso$sente$state_machine__65664__auto____1 = (function (state_67867){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_67867);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e67892){if((e67892 instanceof Object)){\nvar ex__65667__auto__ = e67892;\nvar statearr_67893_68485 = state_67867;\n(statearr_67893_68485[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_67867);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e67892;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68486 = state_67867;\nstate_67867 = G__68486;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$state_machine__65664__auto__ = function(state_67867){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$state_machine__65664__auto____1.call(this,state_67867);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$state_machine__65664__auto____0;\ntaoensso$sente$state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$state_machine__65664__auto____1;\nreturn taoensso$sente$state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n})();\nvar state__65688__auto__ = (function (){var statearr_67897 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_67897[(6)] = c__65686__auto___68474);\n\nreturn statearr_67897;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto___68474,ms_68473,temp__5735__auto___68472__$1,instance_handle,have_handle_QMARK_,connect_fn,WebSocket,temp__5735__auto__,chsk__$1))\n);\n\n} else {\n}\n\ncljs.core.reset_BANG_(self__.retry_count_,(0));\n\nconnect_fn();\n\nreturn chsk__$1;\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChWebSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"ws-kalive-ms\",\"ws-kalive-ms\",-1212255801,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"retry-count_\",\"retry-count_\",1660769620,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"cbs-waiting_\",\"cbs-waiting_\",121502466,null),new cljs.core.Symbol(null,\"socket_\",\"socket_\",1279482619,null),new cljs.core.Symbol(null,\"udt-last-comms_\",\"udt-last-comms_\",1494731888,null)], null);\n});\n\ntaoensso.sente.ChWebSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChWebSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChWebSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChWebSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChWebSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChWebSocket.\n */\ntaoensso.sente.__GT_ChWebSocket = (function taoensso$sente$__GT_ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_){\nreturn (new taoensso.sente.ChWebSocket(client_id,chs,params,packer,url,ws_kalive_ms,state_,instance_handle_,retry_count_,ever_opened_QMARK__,backoff_ms_fn,cbs_waiting_,socket_,udt_last_comms_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChWebSocket = (function taoensso$sente$map__GT_ChWebSocket(G__67735){\nvar extmap__4424__auto__ = (function (){var G__67901 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__67735,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639)], 0));\nif(cljs.core.record_QMARK_(G__67735)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__67901);\n} else {\nreturn G__67901;\n}\n})();\nreturn (new taoensso.sente.ChWebSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908).cljs$core$IFn$_invoke$arity$1(G__67735),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639).cljs$core$IFn$_invoke$arity$1(G__67735),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChWebSocket = (function taoensso$sente$new_ChWebSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChWebSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"retry-count_\",\"retry-count_\",20238093),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"cbs-waiting_\",\"cbs-waiting_\",-1519029061),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY),new cljs.core.Keyword(null,\"socket_\",\"socket_\",-361048908),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"udt-last-comms_\",\"udt-last-comms_\",-145799639),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n/**\n * We must set *some* client-side timeout otherwise an unpredictable (and\n *   probably too short) browser default will be used. Must be > server's\n *   :lp-timeout-ms.\n */\ntaoensso.sente.default_client_side_ajax_timeout_ms = taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(60)], 0));\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAjaxSocket = (function (client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,__meta,__extmap,__hash){\nthis.client_id = client_id;\nthis.chs = chs;\nthis.params = params;\nthis.packer = packer;\nthis.url = url;\nthis.state_ = state_;\nthis.instance_handle_ = instance_handle_;\nthis.ever_opened_QMARK__ = ever_opened_QMARK__;\nthis.backoff_ms_fn = backoff_ms_fn;\nthis.ajax_opts = ajax_opts;\nthis.curr_xhr_ = curr_xhr_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k67912,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__67919 = k67912;\nvar G__67919__$1 = (((G__67919 instanceof cljs.core.Keyword))?G__67919.fqn:null);\nswitch (G__67919__$1) {\ncase \"client-id\":\nreturn self__.client_id;\n\nbreak;\ncase \"chs\":\nreturn self__.chs;\n\nbreak;\ncase \"params\":\nreturn self__.params;\n\nbreak;\ncase \"packer\":\nreturn self__.packer;\n\nbreak;\ncase \"url\":\nreturn self__.url;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"instance-handle_\":\nreturn self__.instance_handle_;\n\nbreak;\ncase \"ever-opened?_\":\nreturn self__.ever_opened_QMARK__;\n\nbreak;\ncase \"backoff-ms-fn\":\nreturn self__.backoff_ms_fn;\n\nbreak;\ncase \"ajax-opts\":\nreturn self__.ajax_opts;\n\nbreak;\ncase \"curr-xhr_\":\nreturn self__.curr_xhr_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k67912,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__67920){\nvar vec__67921 = p__67920;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67921,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67921,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChAjaxSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__67911){\nvar self__ = this;\nvar G__67911__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__67911__$1,11,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (11 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__67927 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (-266770752 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__67927(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this67913,other67914){\nvar self__ = this;\nvar this67913__$1 = this;\nreturn (((!((other67914 == null)))) && ((this67913__$1.constructor === other67914.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.client_id,other67914.client_id)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.chs,other67914.chs)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.params,other67914.params)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.packer,other67914.packer)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.url,other67914.url)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.state_,other67914.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.instance_handle_,other67914.instance_handle_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.ever_opened_QMARK__,other67914.ever_opened_QMARK__)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.backoff_ms_fn,other67914.backoff_ms_fn)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.ajax_opts,other67914.ajax_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.curr_xhr_,other67914.curr_xhr_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67913__$1.__extmap,other67914.__extmap)));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),null,new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),null,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),null,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),null,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),null,new cljs.core.Keyword(null,\"params\",\"params\",710516235),null,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),null,new cljs.core.Keyword(null,\"url\",\"url\",276297046),null,new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),null,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__67911){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__67934 = cljs.core.keyword_identical_QMARK_;\nvar expr__67935 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__67937 = new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140);\nvar G__67938 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67937,G__67938) : pred__67934.call(null,G__67937,G__67938));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(G__67911,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67939 = new cljs.core.Keyword(null,\"chs\",\"chs\",376886120);\nvar G__67940 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67939,G__67940) : pred__67934.call(null,G__67939,G__67940));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,G__67911,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67941 = new cljs.core.Keyword(null,\"params\",\"params\",710516235);\nvar G__67942 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67941,G__67942) : pred__67934.call(null,G__67941,G__67942));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,G__67911,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67943 = new cljs.core.Keyword(null,\"packer\",\"packer\",66077544);\nvar G__67944 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67943,G__67944) : pred__67934.call(null,G__67943,G__67944));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,G__67911,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67945 = new cljs.core.Keyword(null,\"url\",\"url\",276297046);\nvar G__67946 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67945,G__67946) : pred__67934.call(null,G__67945,G__67946));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,G__67911,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67947 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__67948 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67947,G__67948) : pred__67934.call(null,G__67947,G__67948));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,G__67911,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67949 = new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457);\nvar G__67950 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67949,G__67950) : pred__67934.call(null,G__67949,G__67950));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,G__67911,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67953 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913);\nvar G__67954 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67953,G__67954) : pred__67934.call(null,G__67953,G__67954));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,G__67911,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67956 = new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955);\nvar G__67957 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67956,G__67957) : pred__67934.call(null,G__67956,G__67957));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,G__67911,self__.ajax_opts,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67958 = new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109);\nvar G__67959 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67958,G__67959) : pred__67934.call(null,G__67958,G__67959));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,G__67911,self__.curr_xhr_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__67960 = new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696);\nvar G__67961 = expr__67935;\nreturn (pred__67934.cljs$core$IFn$_invoke$arity$2 ? pred__67934.cljs$core$IFn$_invoke$arity$2(G__67960,G__67961) : pred__67934.call(null,G__67960,G__67961));\n})())){\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,G__67911,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__67911),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),self__.chs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"params\",\"params\",710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),self__.packer,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"url\",\"url\",276297046),self__.url,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),self__.instance_handle_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),self__.ever_opened_QMARK__,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),self__.backoff_ms_fn,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),self__.ajax_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),self__.curr_xhr_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__67911){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChAjaxSocket(self__.client_id,self__.chs,self__.params,self__.packer,self__.url,self__.state_,self__.instance_handle_,self__.ever_opened_QMARK__,self__.backoff_ms_fn,self__.ajax_opts,self__.curr_xhr_,G__67911,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\ncljs.core.reset_BANG_(self__.instance_handle_,null);\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (chsk__$1){\nreturn (function (p1__67904_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__67904_SHARP_,reason);\n});})(chsk__$1))\n);\n\nvar temp__5735__auto__ = cljs.core.deref(self__.curr_xhr_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar x = temp__5735__auto__;\nreturn x.abort();\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nchsk__$1.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2(null,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar map__67965 = opts;\nvar map__67965__$1 = (((((!((map__67965 == null))))?(((((map__67965.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67965.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67965):map__67965);\nvar _QMARK_timeout_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67965__$1,new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406));\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67965__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar flush_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67965__$1,new cljs.core.Keyword(null,\"flush?\",\"flush?\",-108887231));\nvar _ = taoensso.sente.assert_send_args(ev,_QMARK_timeout_ms,_QMARK_cb);\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nif(cljs.core.not(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))){\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n} else {\nvar csrf_token = new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_));\nvar G__67968_68488 = self__.url;\nvar G__67969_68489 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"post\",\"post\",269697687),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4131__auto__ = _QMARK_timeout_ms;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),csrf_token], null)], 0)),new cljs.core.Keyword(null,\"params\",\"params\",710516235),(function (){var ppstr = taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3(self__.packer,ev,(cljs.core.truth_(_QMARK_cb_fn)?new cljs.core.Keyword(null,\"ajax-cb\",\"ajax-cb\",-807060321):null));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id,new cljs.core.Keyword(null,\"ppstr\",\"ppstr\",1557495252),ppstr], null)], 0));\n})()], null)], 0));\nvar G__67970_68490 = ((function (G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function taoensso$sente$ajax_cb(p__67973){\nvar map__67974 = p__67973;\nvar map__67974__$1 = (((((!((map__67974 == null))))?(((((map__67974.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67974.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67974):map__67974);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67974__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67974__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__67976 = new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489);\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__67976) : _QMARK_cb_fn.call(null,G__67976));\n} else {\nreturn null;\n}\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (p1__67906_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__67906_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n});})(map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n\nif(cljs.core.truth_(_QMARK_cb_fn)){\nvar G__67977 = new cljs.core.Keyword(\"chsk\",\"error\",\"chsk/error\",-984175439);\nreturn (_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(G__67977) : _QMARK_cb_fn.call(null,G__67977));\n} else {\nreturn null;\n}\n}\n} else {\nvar content = _QMARK_content;\nvar resp_ppstr = content;\nvar vec__67978 = taoensso.sente.unpack(self__.packer,resp_ppstr);\nvar resp_clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67978,(0),null);\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67978,(1),null);\nif(cljs.core.truth_(_QMARK_cb_fn)){\n(_QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1 ? _QMARK_cb_fn.cljs$core$IFn$_invoke$arity$1(resp_clj) : _QMARK_cb_fn.call(null,resp_clj));\n} else {\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(resp_clj,new cljs.core.Keyword(\"chsk\",\"dummy-cb-200\",\"chsk/dummy-cb-200\",-1663130337))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1269,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (content,resp_ppstr,vec__67978,resp_clj,___$1,map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Cb reply w/o local cb-fn: %s\",resp_clj], null);\n});})(content,resp_ppstr,vec__67978,resp_clj,___$1,map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (content,resp_ppstr,vec__67978,resp_clj,___$1,map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1){\nreturn (function (p1__67907_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67907_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n});})(content,resp_ppstr,vec__67978,resp_clj,___$1,map__67974,map__67974__$1,_QMARK_error,_QMARK_content,G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n);\n}\n});})(G__67968_68488,G__67969_68489,csrf_token,map__67965,map__67965__$1,_QMARK_timeout_ms,_QMARK_cb,flush_QMARK_,_,_QMARK_cb_fn,chsk__$1))\n;\n(taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__67968_68488,G__67969_68489,G__67970_68490) : taoensso.sente.ajax_lite.call(null,G__67968_68488,G__67969_68489,G__67970_68490));\n\nreturn new cljs.core.Keyword(null,\"apparent-success\",\"apparent-success\",242592222);\n}\n});\n\ntaoensso.sente.ChAjaxSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar instance_handle = cljs.core.reset_BANG_(self__.instance_handle_,taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0());\nvar have_handle_QMARK_ = ((function (instance_handle,chsk__$1){\nreturn (function (){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.instance_handle_),instance_handle);\n});})(instance_handle,chsk__$1))\n;\nvar poll_fn = ((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function taoensso$sente$poll_fn(retry_count){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1279,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"async-poll-for-update!\"], null);\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n,null)),null,51189364);\n\nif(have_handle_QMARK_()){\nvar retry_fn = ((function (instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nif(have_handle_QMARK_()){\nvar retry_count_STAR_ = (retry_count + (1));\nvar backoff_ms = (self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1 ? self__.backoff_ms_fn.cljs$core$IFn$_invoke$arity$1(retry_count_STAR_) : self__.backoff_ms_fn.call(null,retry_count_STAR_));\nvar udt_next_reconnect = (taoensso.encore.now_udt() + backoff_ms);\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1287,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Chsk is closed: will try reconnect attempt (%s) in %s ms\",retry_count_STAR_,backoff_ms], null);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n,null)),null,1139184446);\n\ngoog.global.setTimeout(((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (){\nreturn taoensso$sente$poll_fn(retry_count_STAR_);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n,backoff_ms);\n\nreturn taoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__67908_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67908_SHARP_,new cljs.core.Keyword(null,\"udt-next-reconnect\",\"udt-next-reconnect\",-1990375733),udt_next_reconnect);\n});})(retry_count_STAR_,backoff_ms,udt_next_reconnect,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n;\nreturn cljs.core.reset_BANG_(self__.curr_xhr_,(function (){var G__67981 = self__.url;\nvar G__67982 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.ajax_opts,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"method\",\"method\",55703592),new cljs.core.Keyword(null,\"get\",\"get\",1683182755),new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"timeout-ms\",\"timeout-ms\",754221406).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn taoensso.sente.default_client_side_ajax_timeout_ms;\n}\n})(),new cljs.core.Keyword(null,\"resp-type\",\"resp-type\",1050675962),new cljs.core.Keyword(null,\"text\",\"text\",-1790561697),new cljs.core.Keyword(null,\"params\",\"params\",710516235),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.params,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"udt\",\"udt\",2011712751),taoensso.encore.now_udt(),new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),self__.client_id], null),(cljs.core.truth_(new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_)))?null:new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"handshake?\",\"handshake?\",-423743093),true], null))], 0)),new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"headers\",\"headers\",-835030129).cljs$core$IFn$_invoke$arity$1(self__.ajax_opts),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"X-CSRF-Token\",\"X-CSRF-Token\",1562992453),new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))], null)], 0))], null)], 0));\nvar G__67983 = ((function (G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function taoensso$sente$poll_fn_$_ajax_cb(p__67984){\nvar map__67985 = p__67984;\nvar map__67985__$1 = (((((!((map__67985 == null))))?(((((map__67985.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__67985.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__67985):map__67985);\nvar _QMARK_error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67985__$1,new cljs.core.Keyword(null,\"?error\",\"?error\",1070752222));\nvar _QMARK_content = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__67985__$1,new cljs.core.Keyword(null,\"?content\",\"?content\",1697782054));\nif(cljs.core.truth_(_QMARK_error)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(_QMARK_error,new cljs.core.Keyword(null,\"timeout\",\"timeout\",-318625318))){\nreturn taoensso$sente$poll_fn((0));\n} else {\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (map__67985,map__67985__$1,_QMARK_error,_QMARK_content,G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__67909_SHARP_){\nreturn taoensso.sente.chsk_state__GT_closed(p1__67909_SHARP_,new cljs.core.Keyword(null,\"unexpected\",\"unexpected\",-1137752424));\n});})(map__67985,map__67985__$1,_QMARK_error,_QMARK_content,G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n\nreturn retry_fn();\n\n}\n} else {\nvar content = _QMARK_content;\nvar ppstr = content;\nvar vec__67987 = taoensso.sente.unpack(self__.packer,ppstr);\nvar clj = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67987,(0),null);\nvar handshake_QMARK_ = taoensso.sente.handshake_QMARK_(clj);\nif(handshake_QMARK_){\ntaoensso.sente.receive_handshake_BANG_(new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),chsk__$1,clj);\n} else {\n}\n\ntaoensso.sente.swap_chsk_state_BANG_(chsk__$1,((function (content,ppstr,vec__67987,clj,handshake_QMARK_,map__67985,map__67985__$1,_QMARK_error,_QMARK_content,G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1){\nreturn (function (p1__67910_SHARP_){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__67910_SHARP_,new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),true);\n});})(content,ppstr,vec__67987,clj,handshake_QMARK_,map__67985,map__67985__$1,_QMARK_error,_QMARK_content,G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n);\n\ntaoensso$sente$poll_fn((0));\n\nif(handshake_QMARK_){\nreturn null;\n} else {\nvar or__4131__auto__ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clj,new cljs.core.Keyword(\"chsk\",\"timeout\",\"chsk/timeout\",-319776489)))?(function (){\nif(cljs.core.truth_(cljs.core.deref(taoensso.sente.debug_mode_QMARK__))){\ntaoensso.sente.receive_buffered_evs_BANG_(self__.chs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"debug\",\"timeout\",\"debug/timeout\",309499949)], null)], null));\n} else {\n}\n\nreturn new cljs.core.Keyword(null,\"noop\",\"noop\",-673731258);\n})()\n:null);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar buffered_evs = clj;\nreturn taoensso.sente.receive_buffered_evs_BANG_(self__.chs,buffered_evs);\n}\n}\n}\n});})(G__67981,G__67982,retry_fn,instance_handle,have_handle_QMARK_,chsk__$1))\n;\nreturn (taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3 ? taoensso.sente.ajax_lite.cljs$core$IFn$_invoke$arity$3(G__67981,G__67982,G__67983) : taoensso.sente.ajax_lite.call(null,G__67981,G__67982,G__67983));\n})());\n} else {\nreturn null;\n}\n});})(instance_handle,have_handle_QMARK_,chsk__$1))\n;\npoll_fn((0));\n\nreturn chsk__$1;\n});\n\ntaoensso.sente.ChAjaxSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"client-id\",\"client-id\",1175909387,null),new cljs.core.Symbol(null,\"chs\",\"chs\",2017417647,null),new cljs.core.Symbol(null,\"params\",\"params\",-1943919534,null),new cljs.core.Symbol(null,\"packer\",\"packer\",1706609071,null),new cljs.core.Symbol(null,\"url\",\"url\",1916828573,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"instance-handle_\",\"instance-handle_\",-282852930,null),new cljs.core.Symbol(null,\"ever-opened?_\",\"ever-opened?_\",-1013096856,null),new cljs.core.Symbol(null,\"backoff-ms-fn\",\"backoff-ms-fn\",-1881539814,null),new cljs.core.Symbol(null,\"ajax-opts\",\"ajax-opts\",1122292418,null),new cljs.core.Symbol(null,\"curr-xhr_\",\"curr-xhr_\",321757831,null)], null);\n});\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAjaxSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChAjaxSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChAjaxSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChAjaxSocket.\n */\ntaoensso.sente.__GT_ChAjaxSocket = (function taoensso$sente$__GT_ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_){\nreturn (new taoensso.sente.ChAjaxSocket(client_id,chs,params,packer,url,state_,instance_handle_,ever_opened_QMARK__,backoff_ms_fn,ajax_opts,curr_xhr_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAjaxSocket = (function taoensso$sente$map__GT_ChAjaxSocket(G__67915){\nvar extmap__4424__auto__ = (function (){var G__67990 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__67915,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"url\",\"url\",276297046),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696)], 0));\nif(cljs.core.record_QMARK_(G__67915)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__67990);\n} else {\nreturn G__67990;\n}\n})();\nreturn (new taoensso.sente.ChAjaxSocket(new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"chs\",\"chs\",376886120).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"packer\",\"packer\",66077544).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"url\",\"url\",276297046).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109).cljs$core$IFn$_invoke$arity$1(G__67915),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696).cljs$core$IFn$_invoke$arity$1(G__67915),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChAjaxSocket = (function taoensso$sente$new_ChAjaxSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAjaxSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"instance-handle_\",\"instance-handle_\",-1923384457),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),new cljs.core.Keyword(null,\"curr-xhr_\",\"curr-xhr_\",-1318773696),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {taoensso.sente.IChSocket}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ntaoensso.sente.ChAutoSocket = (function (ws_chsk_opts,ajax_chsk_opts,state_,impl_,__meta,__extmap,__hash){\nthis.ws_chsk_opts = ws_chsk_opts;\nthis.ajax_chsk_opts = ajax_chsk_opts;\nthis.state_ = state_;\nthis.impl_ = impl_;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k67992,else__4388__auto__){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar G__67996 = k67992;\nvar G__67996__$1 = (((G__67996 instanceof cljs.core.Keyword))?G__67996.fqn:null);\nswitch (G__67996__$1) {\ncase \"ws-chsk-opts\":\nreturn self__.ws_chsk_opts;\n\nbreak;\ncase \"ajax-chsk-opts\":\nreturn self__.ajax_chsk_opts;\n\nbreak;\ncase \"state_\":\nreturn self__.state_;\n\nbreak;\ncase \"impl_\":\nreturn self__.impl_;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k67992,else__4388__auto__);\n\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\nvar self__ = this;\nvar this__4404__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\nreturn (function (ret__4407__auto__,p__67997){\nvar vec__67998 = p__67997;\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67998,(0),null);\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__67998,(1),null);\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\n});})(this__4404__auto____$1))\n,init__4406__auto__,this__4404__auto____$1);\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\nreturn (function (keyval__4403__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\n});})(this__4399__auto____$1))\n;\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#taoensso.sente.ChAutoSocket{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_],null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__67991){\nvar self__ = this;\nvar G__67991__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__67991__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\nvar self__ = this;\nvar this__4383__auto____$1 = this;\nreturn self__.__meta;\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nreturn (4 + cljs.core.count(self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\nvar self__ = this;\nvar this__4381__auto____$1 = this;\nvar h__4243__auto__ = self__.__hash;\nif((!((h__4243__auto__ == null)))){\nreturn h__4243__auto__;\n} else {\nvar h__4243__auto____$1 = (function (){var fexpr__68001 = ((function (h__4243__auto__,this__4381__auto____$1){\nreturn (function (coll__4382__auto__){\nreturn (-1193508708 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\n});})(h__4243__auto__,this__4381__auto____$1))\n;\nreturn fexpr__68001(this__4381__auto____$1);\n})();\nself__.__hash = h__4243__auto____$1;\n\nreturn h__4243__auto____$1;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this67993,other67994){\nvar self__ = this;\nvar this67993__$1 = this;\nreturn (((!((other67994 == null)))) && ((this67993__$1.constructor === other67994.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67993__$1.ws_chsk_opts,other67994.ws_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67993__$1.ajax_chsk_opts,other67994.ajax_chsk_opts)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67993__$1.state_,other67994.state_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67993__$1.impl_,other67994.impl_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this67993__$1.__extmap,other67994.__extmap)));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),null,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),null,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),null,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),null], null), null),k__4395__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__67991){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nvar pred__68002 = cljs.core.keyword_identical_QMARK_;\nvar expr__68003 = k__4393__auto__;\nif(cljs.core.truth_((function (){var G__68005 = new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104);\nvar G__68006 = expr__68003;\nreturn (pred__68002.cljs$core$IFn$_invoke$arity$2 ? pred__68002.cljs$core$IFn$_invoke$arity$2(G__68005,G__68006) : pred__68002.call(null,G__68005,G__68006));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(G__67991,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__68007 = new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327);\nvar G__68008 = expr__68003;\nreturn (pred__68002.cljs$core$IFn$_invoke$arity$2 ? pred__68002.cljs$core$IFn$_invoke$arity$2(G__68007,G__68008) : pred__68002.call(null,G__68007,G__68008));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,G__67991,self__.state_,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__68009 = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102);\nvar G__68010 = expr__68003;\nreturn (pred__68002.cljs$core$IFn$_invoke$arity$2 ? pred__68002.cljs$core$IFn$_invoke$arity$2(G__68009,G__68010) : pred__68002.call(null,G__68009,G__68010));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,G__67991,self__.impl_,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((function (){var G__68011 = new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179);\nvar G__68012 = expr__68003;\nreturn (pred__68002.cljs$core$IFn$_invoke$arity$2 ? pred__68002.cljs$core$IFn$_invoke$arity$2(G__68011,G__68012) : pred__68002.call(null,G__68011,G__68012));\n})())){\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,G__67991,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__67991),null));\n}\n}\n}\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\nvar self__ = this;\nvar this__4397__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),self__.ws_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),self__.ajax_chsk_opts,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),self__.impl_,null))], null),self__.__extmap));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__67991){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (new taoensso.sente.ChAutoSocket(self__.ws_chsk_opts,self__.ajax_chsk_opts,self__.state_,self__.impl_,G__67991,self__.__extmap,self__.__hash));\n});\n\ntaoensso.sente.ChAutoSocket.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\nvar self__ = this;\nvar this__4390__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$ = cljs.core.PROTOCOL_SENTINEL;\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_disconnect_BANG_$arity$2 = (function (chsk,reason){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nreturn taoensso.sente._chsk_disconnect_BANG_(impl,reason);\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_reconnect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"requested-reconnect\",\"requested-reconnect\",2008347707));\n\nreturn chsk__$1.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_send_BANG_$arity$3 = (function (chsk,ev,opts){\nvar self__ = this;\nvar chsk__$1 = this;\nvar temp__5733__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar impl = temp__5733__auto__;\nreturn taoensso.sente._chsk_send_BANG_(impl,ev,opts);\n} else {\nvar map__68013 = opts;\nvar map__68013__$1 = (((((!((map__68013 == null))))?(((((map__68013.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68013.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68013):map__68013);\nvar _QMARK_cb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68013__$1,new cljs.core.Keyword(null,\"cb\",\"cb\",589947841));\nvar _QMARK_cb_fn = taoensso.sente.cb_chan_as_fn(_QMARK_cb,ev);\nreturn taoensso.sente.chsk_send__GT_closed_BANG_(_QMARK_cb_fn);\n}\n});\n\ntaoensso.sente.ChAutoSocket.prototype.taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1 = (function (chsk){\nvar self__ = this;\nvar chsk__$1 = this;\nvar ajax_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ajax_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ws_chsk_opts__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.ws_chsk_opts,new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),self__.state_);\nvar ajax_conn_BANG_ = ((function (ajax_chsk_opts__$1,ws_chsk_opts__$1,chsk__$1){\nreturn (function (){\ncljs.core.remove_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080));\n\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});})(ajax_chsk_opts__$1,ws_chsk_opts__$1,chsk__$1))\n;\nvar ws_conn_BANG_ = ((function (ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (){\nvar downgraded_QMARK___68492 = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.core.add_watch(self__.state_,new cljs.core.Keyword(\"chsk\",\"auto-ajax-downgrade\",\"chsk/auto-ajax-downgrade\",-831528080),((function (downgraded_QMARK___68492,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (_,___$1,old_state,new_state){\nvar temp__5735__auto__ = cljs.core.deref(self__.impl_);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar impl = temp__5735__auto__;\nvar temp__5735__auto____$1 = new cljs.core.Keyword(null,\"ever-opened?_\",\"ever-opened?_\",1641338913).cljs$core$IFn$_invoke$arity$1(impl);\nif(cljs.core.truth_(temp__5735__auto____$1)){\nvar ever_opened_QMARK__ = temp__5735__auto____$1;\nif(cljs.core.truth_(cljs.core.deref(ever_opened_QMARK__))){\nreturn null;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"last-ws-error\",\"last-ws-error\",-820288502).cljs$core$IFn$_invoke$arity$1(new_state))){\nif(cljs.core.compare_and_set_BANG_(downgraded_QMARK___68492,false,true)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1420,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (ever_opened_QMARK__,temp__5735__auto____$1,impl,temp__5735__auto__,downgraded_QMARK___68492,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Permanently downgrading :auto chsk -> :ajax\"], null);\n});})(ever_opened_QMARK__,temp__5735__auto____$1,impl,temp__5735__auto__,downgraded_QMARK___68492,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n,null)),null,1341571613);\n\ntaoensso.sente._chsk_disconnect_BANG_(impl,new cljs.core.Keyword(null,\"downgrading-ws-to-ajax\",\"downgrading-ws-to-ajax\",402136720));\n\nreturn cljs.core.reset_BANG_(self__.impl_,ajax_conn_BANG_());\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});})(downgraded_QMARK___68492,ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n);\n\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts__$1,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(self__.state_))).taoensso$sente$IChSocket$_chsk_connect_BANG_$arity$1(null);\n});})(ajax_chsk_opts__$1,ws_chsk_opts__$1,ajax_conn_BANG_,chsk__$1))\n;\ncljs.core.reset_BANG_(self__.impl_,(function (){var or__4131__auto__ = ws_conn_BANG_();\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn ajax_conn_BANG_();\n}\n})());\n\nreturn chsk__$1;\n});\n\ntaoensso.sente.ChAutoSocket.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-349638577,null),new cljs.core.Symbol(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",-1051844442,null),new cljs.core.Symbol(null,\"state_\",\"state_\",-1696768667,null),new cljs.core.Symbol(null,\"impl_\",\"impl_\",-1435617590,null)], null);\n});\n\ntaoensso.sente.ChAutoSocket.cljs$lang$type = true;\n\ntaoensso.sente.ChAutoSocket.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\nreturn (new cljs.core.List(null,\"taoensso.sente/ChAutoSocket\",null,(1),null));\n});\n\ntaoensso.sente.ChAutoSocket.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"taoensso.sente/ChAutoSocket\");\n});\n\n/**\n * Positional factory function for taoensso.sente/ChAutoSocket.\n */\ntaoensso.sente.__GT_ChAutoSocket = (function taoensso$sente$__GT_ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_){\nreturn (new taoensso.sente.ChAutoSocket(ws_chsk_opts,ajax_chsk_opts,state_,impl_,null,null,null));\n});\n\n/**\n * Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values.\n */\ntaoensso.sente.map__GT_ChAutoSocket = (function taoensso$sente$map__GT_ChAutoSocket(G__67995){\nvar extmap__4424__auto__ = (function (){var G__68015 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__67995,new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179)], 0));\nif(cljs.core.record_QMARK_(G__67995)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__68015);\n} else {\nreturn G__68015;\n}\n})();\nreturn (new taoensso.sente.ChAutoSocket(new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104).cljs$core$IFn$_invoke$arity$1(G__67995),new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327).cljs$core$IFn$_invoke$arity$1(G__67995),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(G__67995),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179).cljs$core$IFn$_invoke$arity$1(G__67995),null,cljs.core.not_empty(extmap__4424__auto__),null));\n});\n\ntaoensso.sente.new_ChAutoSocket = (function taoensso$sente$new_ChAutoSocket(opts,csrf_token){\nreturn taoensso.sente.map__GT_ChAutoSocket(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"state_\",\"state_\",957667102),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),new cljs.core.Keyword(null,\"open?\",\"open?\",1238443125),false,new cljs.core.Keyword(null,\"ever-opened?\",\"ever-opened?\",1128459732),false,new cljs.core.Keyword(null,\"csrf-token\",\"csrf-token\",-1872302856),csrf_token], null)),new cljs.core.Keyword(null,\"impl_\",\"impl_\",1218818179),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null)], null),opts], 0)));\n});\ntaoensso.sente.get_chsk_url = (function taoensso$sente$get_chsk_url(protocol,host,path,type){\nvar protocol__$1 = (function (){var G__68016 = protocol;\nvar G__68016__$1 = (((G__68016 instanceof cljs.core.Keyword))?G__68016.fqn:null);\nswitch (G__68016__$1) {\ncase \"http\":\nreturn \"http:\";\n\nbreak;\ncase \"https\":\nreturn \"https:\";\n\nbreak;\ndefault:\nreturn protocol;\n\n}\n})();\nvar protocol__$2 = (function (){var e = (function (){try{if((function (){var fexpr__68019 = ((function (protocol__$1){\nreturn (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__68020 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\"https:\",null,\"http:\",null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__68020) : taoensso.truss.impl.set_STAR_.call(null,G__68020));\n})(),x);\n});})(protocol__$1))\n;\nreturn fexpr__68019(protocol__$1);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e68017){if((e68017 instanceof Error)){\nvar e = e68017;\nreturn e;\n} else {\nthrow e68017;\n\n}\n}})();\nif((e == null)){\nreturn protocol__$1;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1440,\"([:el #{\\\"https:\\\" \\\"http:\\\"}] protocol)\",protocol__$1,e,null);\n}\n})();\nvar protocol__$3 = (function (){var G__68021 = type;\nvar G__68021__$1 = (((G__68021 instanceof cljs.core.Keyword))?G__68021.fqn:null);\nswitch (G__68021__$1) {\ncase \"ajax\":\nreturn protocol__$2;\n\nbreak;\ncase \"ws\":\nvar G__68022 = protocol__$2;\nswitch (G__68022) {\ncase \"https:\":\nreturn \"wss:\";\n\nbreak;\ncase \"http:\":\nreturn \"ws:\";\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__68022)].join('')));\n\n}\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__68021__$1)].join('')));\n\n}\n})();\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$3),\"//\",taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([host,path], 0))].join('');\n});\n/**\n * Returns nil on failure, or a map with keys:\n *     :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n *              ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n *     :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n *     :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n *     :chsk    ; IChSocket implementer. You can usu. ignore this.\n * \n *   Common options:\n *     :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n *     :protocol       ; Server protocol, e/o #{:http :https}.\n *     :host           ; Server host (defaults to current page's host).\n *     :port           ; Server port (defaults to current page's port).\n *     :params         ; Map of any params to incl. in chsk Ring requests (handy\n *                     ; for application-level auth, etc.).\n *     :packer         ; :edn (default), or an IPacker implementation.\n *     :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n *     :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n *     :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n *                     ; w/in given msecs. Should be different to server's :ws-kalive-ms.\n */\ntaoensso.sente.make_channel_socket_client_BANG_ = (function taoensso$sente$make_channel_socket_client_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___68496 = arguments.length;\nvar i__4731__auto___68497 = (0);\nwhile(true){\nif((i__4731__auto___68497 < len__4730__auto___68496)){\nargs__4736__auto__.push((arguments[i__4731__auto___68497]));\n\nvar G__68498 = (i__4731__auto___68497 + (1));\ni__4731__auto___68497 = G__68498;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (path,_QMARK_csrf_token,p__68026){\nvar vec__68027 = p__68026;\nvar map__68030 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68027,(0),null);\nvar map__68030__$1 = (((((!((map__68030 == null))))?(((((map__68030.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68030.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68030):map__68030);\nvar opts = map__68030__$1;\nvar ajax_opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68030__$1,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109));\nvar ws_kalive_ms = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"secs\",\"secs\",1532330091),(20)], 0)));\nvar client_id = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),(function (){var or__4131__auto__ = new cljs.core.Keyword(null,\"client-uuid\",\"client-uuid\",-1717531965).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0();\n}\n})());\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68030__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar packer = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),new cljs.core.Keyword(null,\"edn\",\"edn\",1317840885));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68030__$1,new cljs.core.Keyword(null,\"params\",\"params\",710516235));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492));\nvar port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68030__$1,new cljs.core.Keyword(null,\"port\",\"port\",1534937262));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68030__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar recv_buf_or_n = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"recv-buf-or-n\",\"recv-buf-or-n\",1363950355),cljs.core.async.sliding_buffer((2048)));\nvar backoff_ms_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),taoensso.encore.exp_backoff);\nvar wrap_recv_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__68030__$1,new cljs.core.Keyword(null,\"wrap-recv-evs?\",\"wrap-recv-evs?\",-1996694153),true);\nvar _deprecated_more_opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68027,(1),null);\nvar e_68499 = (function (){try{if((function (){var fexpr__68034 = ((function (vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (x){\nreturn cljs.core.contains_QMARK_((function (){var G__68035 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"ws\",\"ws\",86841443),null,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549),null,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),null], null), null);\nreturn (taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1 ? taoensso.truss.impl.set_STAR_.cljs$core$IFn$_invoke$arity$1(G__68035) : taoensso.truss.impl.set_STAR_.call(null,G__68035));\n})(),x);\n});})(vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n;\nreturn fexpr__68034(type);\n})()){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e68032){if((e68032 instanceof Error)){\nvar e = e68032;\nreturn e;\n} else {\nthrow e68032;\n\n}\n}})();\nif((e_68499 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1483,\"([:in #{:ws :ajax :auto}] type)\",type,e_68499,null);\n}\n\nvar e_68500 = (function (){try{if(taoensso.encore.nblank_str_QMARK_(client_id)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e68036){if((e68036 instanceof Error)){\nvar e = e68036;\nreturn e;\n} else {\nthrow e68036;\n\n}\n}})();\nif((e_68500 == null)){\n} else {\ntaoensso.truss.impl._invar_violation_BANG_(true,\"taoensso.sente\",1484,\"(enc/nblank-str? client-id)\",client_id,e_68500,null);\n}\n\nif((!((_deprecated_more_opts == null)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1486,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"], null);\n});})(vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,-606458796);\n} else {\n}\n\nif(cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\"lp-timeout\",\"lp-timeout\",1149461302))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1487,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"], null);\n});})(vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,813454054);\n} else {\n}\n\nif((((!(typeof _QMARK_csrf_token === 'string'))) || (clojure.string.blank_QMARK_(_QMARK_csrf_token)))){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1490,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"], null);\n});})(vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,1725960882);\n} else {\n}\n\nvar packer__$1 = taoensso.sente.coerce_packer(packer);\nvar vec__68037 = (function (){var win_loc = taoensso.encore.get_win_loc();\nvar path__$1 = (function (){var or__4131__auto__ = path;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528).cljs$core$IFn$_invoke$arity$1(win_loc);\n}\n})();\nvar temp__5733__auto__ = new cljs.core.Keyword(null,\"chsk-url-fn\",\"chsk-url-fn\",1968894294).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar f = temp__5733__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__68040 = path__$1;\nvar G__68041 = win_loc;\nvar G__68042 = new cljs.core.Keyword(null,\"ws\",\"ws\",86841443);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__68040,G__68041,G__68042) : f.call(null,G__68040,G__68041,G__68042));\n})(),(function (){var G__68043 = path__$1;\nvar G__68044 = win_loc;\nvar G__68045 = new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__68043,G__68044,G__68045) : f.call(null,G__68043,G__68044,G__68045));\n})()], null);\n} else {\nvar protocol__$1 = (function (){var or__4131__auto__ = protocol;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(win_loc);\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"http\",\"http\",382524695);\n}\n}\n})();\nvar host__$1 = (cljs.core.truth_(port)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"hostname\",\"hostname\",2105669933).cljs$core$IFn$_invoke$arity$1(win_loc)),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(port)].join(''):new cljs.core.Keyword(null,\"host\",\"host\",-1558485167).cljs$core$IFn$_invoke$arity$1(win_loc));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ws\",\"ws\",86841443)),taoensso.sente.get_chsk_url(protocol__$1,host__$1,path__$1,new cljs.core.Keyword(null,\"ajax\",\"ajax\",814345549))], null);\n}\n})();\nvar ws_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68037,(0),null);\nvar ajax_url = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68037,(1),null);\nvar private_chs = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((128))),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(cljs.core.async.sliding_buffer((10))),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537),(function (){var buf = cljs.core.async.sliding_buffer((512));\nif(cljs.core.truth_(wrap_recv_evs_QMARK_)){\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(buf,cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (buf,packer__$1,vec__68037,ws_url,ajax_url,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (ev){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"chsk\",\"recv\",\"chsk/recv\",561097091),ev], null);\n});})(buf,packer__$1,vec__68037,ws_url,ajax_url,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n));\n} else {\nreturn cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(buf);\n}\n})()], null);\nvar common_chsk_opts = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"client-id\",\"client-id\",-464622140),client_id,new cljs.core.Keyword(null,\"chs\",\"chs\",376886120),private_chs,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"packer\",\"packer\",66077544),packer__$1,new cljs.core.Keyword(null,\"ws-kalive-ms\",\"ws-kalive-ms\",1442179968),ws_kalive_ms], null);\nvar ws_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ws_url,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar ajax_chsk_opts = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([common_chsk_opts,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"url\",\"url\",276297046),ajax_url,new cljs.core.Keyword(null,\"ajax-opts\",\"ajax-opts\",-518239109),ajax_opts,new cljs.core.Keyword(null,\"backoff-ms-fn\",\"backoff-ms-fn\",772895955),backoff_ms_fn], null)], 0));\nvar auto_chsk_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ws-chsk-opts\",\"ws-chsk-opts\",-1990170104),ws_chsk_opts,new cljs.core.Keyword(null,\"ajax-chsk-opts\",\"ajax-chsk-opts\",1602591327),ajax_chsk_opts], null);\nvar _QMARK_chsk = taoensso.sente._chsk_connect_BANG_((function (){var G__68046 = type;\nvar G__68046__$1 = (((G__68046 instanceof cljs.core.Keyword))?G__68046.fqn:null);\nswitch (G__68046__$1) {\ncase \"ws\":\nreturn taoensso.sente.new_ChWebSocket(ws_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"ajax\":\nreturn taoensso.sente.new_ChAjaxSocket(ajax_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ncase \"auto\":\nreturn taoensso.sente.new_ChAutoSocket(auto_chsk_opts,_QMARK_csrf_token);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__68046__$1)].join('')));\n\n}\n})());\nvar temp__5733__auto__ = _QMARK_chsk;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar chsk = temp__5733__auto__;\nvar chsk_state_ = new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk);\nvar internal_ch = new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs);\nvar send_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(taoensso.sente.chsk_send_BANG_,chsk);\nvar ev_ch = cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"internal\",\"internal\",-854870097).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(private_chs),new cljs.core.Keyword(null,\"<server\",\"<server\",-2135373537).cljs$core$IFn$_invoke$arity$1(private_chs)], null),recv_buf_or_n);\nvar ev_msg_ch = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2((1),cljs.core.map.cljs$core$IFn$_invoke$arity$1(((function (chsk_state_,internal_ch,send_fn,ev_ch,chsk,temp__5733__auto__,packer__$1,vec__68037,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (ev){\nvar vec__68047 = taoensso.sente.as_event(ev);\nvar ev_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68047,(0),null);\nvar ev__QMARK_data = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68047,(1),null);\nvar ev__$1 = vec__68047;\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),internal_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),chsk_state_,new cljs.core.Keyword(null,\"event\",\"event\",301435442),ev__$1,new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),ev_id,new cljs.core.Keyword(null,\"?data\",\"?data\",-9471433),ev__QMARK_data], null);\n});})(chsk_state_,internal_ch,send_fn,ev_ch,chsk,temp__5733__auto__,packer__$1,vec__68037,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n));\ncljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(ev_ch,ev_msg_ch);\n\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"chsk\",\"chsk\",-863703081),chsk,new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861),ev_msg_ch,new cljs.core.Keyword(null,\"send-fn\",\"send-fn\",351002041),send_fn,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"state_\",\"state_\",957667102).cljs$core$IFn$_invoke$arity$1(chsk)], null);\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),\"taoensso.sente\",null,1580,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto__,packer__$1,vec__68037,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to create channel socket\"], null);\n});})(temp__5733__auto__,packer__$1,vec__68037,ws_url,ajax_url,private_chs,common_chsk_opts,ws_chsk_opts,ajax_chsk_opts,auto_chsk_opts,_QMARK_chsk,vec__68027,map__68030,map__68030__$1,opts,ajax_opts,ws_kalive_ms,client_id,protocol,packer,params,type,port,host,recv_buf_or_n,backoff_ms_fn,wrap_recv_evs_QMARK_,_deprecated_more_opts))\n,null)),null,1916923149);\n}\n});\n\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.make_channel_socket_client_BANG_.cljs$lang$applyTo = (function (seq68023){\nvar G__68024 = cljs.core.first(seq68023);\nvar seq68023__$1 = cljs.core.next(seq68023);\nvar G__68025 = cljs.core.first(seq68023__$1);\nvar seq68023__$2 = cljs.core.next(seq68023__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__68024,G__68025,seq68023__$2);\n});\n\ntaoensso.sente._start_chsk_router_BANG_ = (function taoensso$sente$_start_chsk_router_BANG_(server_QMARK_,ch_recv,event_msg_handler,opts){\nvar map__68050 = opts;\nvar map__68050__$1 = (((((!((map__68050 == null))))?(((((map__68050.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68050.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68050):map__68050);\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68050__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68050__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68050__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nvar ch_ctrl = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();\nvar execute1 = ((function (map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl){\nreturn (function (f){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});})(map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl))\n;\nvar c__65686__auto___68502 = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\ncljs.core.async.impl.dispatch.run(((function (c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nvar f__65687__auto__ = (function (){var switch__65663__auto__ = ((function (c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (state_68099){\nvar state_val_68100 = (state_68099[(1)]);\nif((state_val_68100 === (7))){\nvar inst_68095 = (state_68099[(2)]);\nvar state_68099__$1 = state_68099;\nvar statearr_68101_68503 = state_68099__$1;\n(statearr_68101_68503[(2)] = inst_68095);\n\n(statearr_68101_68503[(1)] = (3));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (1))){\nvar state_68099__$1 = state_68099;\nvar statearr_68102_68504 = state_68099__$1;\n(statearr_68102_68504[(2)] = null);\n\n(statearr_68102_68504[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (4))){\nvar inst_68062 = (state_68099[(7)]);\nvar inst_68060 = (state_68099[(8)]);\nvar inst_68061 = (state_68099[(9)]);\nvar inst_68065 = (state_68099[(10)]);\nvar inst_68060__$1 = (state_68099[(2)]);\nvar inst_68061__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_68060__$1,(0),null);\nvar inst_68062__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(inst_68060__$1,(1),null);\nvar inst_68063 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(inst_68062__$1,ch_ctrl);\nvar inst_68064 = (inst_68061__$1 == null);\nvar inst_68065__$1 = ((inst_68063) || (inst_68064));\nvar state_68099__$1 = (function (){var statearr_68103 = state_68099;\n(statearr_68103[(7)] = inst_68062__$1);\n\n(statearr_68103[(8)] = inst_68060__$1);\n\n(statearr_68103[(9)] = inst_68061__$1);\n\n(statearr_68103[(10)] = inst_68065__$1);\n\nreturn statearr_68103;\n})();\nif(cljs.core.truth_(inst_68065__$1)){\nvar statearr_68104_68505 = state_68099__$1;\n(statearr_68104_68505[(1)] = (5));\n\n} else {\nvar statearr_68105_68506 = state_68099__$1;\n(statearr_68105_68506[(1)] = (6));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (15))){\nvar inst_68061 = (state_68099[(9)]);\nvar state_68099__$1 = state_68099;\nvar statearr_68106_68507 = state_68099__$1;\n(statearr_68106_68507[(2)] = inst_68061);\n\n(statearr_68106_68507[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (13))){\nvar inst_68081 = (state_68099[(2)]);\nvar state_68099__$1 = state_68099;\nvar statearr_68107_68508 = state_68099__$1;\n(statearr_68107_68508[(2)] = inst_68081);\n\n(statearr_68107_68508[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (6))){\nvar inst_68061 = (state_68099[(9)]);\nvar inst_68070 = (inst_68061 == null);\nvar inst_68071 = cljs.core.not(inst_68070);\nvar state_68099__$1 = state_68099;\nif(inst_68071){\nvar statearr_68108_68509 = state_68099__$1;\n(statearr_68108_68509[(1)] = (8));\n\n} else {\nvar statearr_68109_68510 = state_68099__$1;\n(statearr_68109_68510[(1)] = (9));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (3))){\nvar inst_68097 = (state_68099[(2)]);\nvar state_68099__$1 = state_68099;\nreturn cljs.core.async.impl.ioc_helpers.return_chan(state_68099__$1,inst_68097);\n} else {\nif((state_val_68100 === (12))){\nvar state_68099__$1 = state_68099;\nvar statearr_68110_68511 = state_68099__$1;\n(statearr_68110_68511[(2)] = false);\n\n(statearr_68110_68511[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (2))){\nvar inst_68056 = cljs.core.PersistentVector.EMPTY_NODE;\nvar inst_68057 = [ch_recv,ch_ctrl];\nvar inst_68058 = (new cljs.core.PersistentVector(null,2,(5),inst_68056,inst_68057,null));\nvar state_68099__$1 = state_68099;\nreturn cljs.core.async.ioc_alts_BANG_(state_68099__$1,(4),inst_68058);\n} else {\nif((state_val_68100 === (11))){\nvar state_68099__$1 = state_68099;\nvar statearr_68111_68512 = state_68099__$1;\n(statearr_68111_68512[(2)] = true);\n\n(statearr_68111_68512[(1)] = (13));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (9))){\nvar state_68099__$1 = state_68099;\nvar statearr_68112_68513 = state_68099__$1;\n(statearr_68112_68513[(2)] = false);\n\n(statearr_68112_68513[(1)] = (10));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (5))){\nvar state_68099__$1 = state_68099;\nvar statearr_68113_68514 = state_68099__$1;\n(statearr_68113_68514[(2)] = null);\n\n(statearr_68113_68514[(1)] = (7));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (14))){\nvar inst_68061 = (state_68099[(9)]);\nvar inst_68086 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,inst_68061);\nvar state_68099__$1 = state_68099;\nvar statearr_68114_68515 = state_68099__$1;\n(statearr_68114_68515[(2)] = inst_68086);\n\n(statearr_68114_68515[(1)] = (16));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (16))){\nvar inst_68062 = (state_68099[(7)]);\nvar inst_68060 = (state_68099[(8)]);\nvar inst_68061 = (state_68099[(9)]);\nvar inst_68065 = (state_68099[(10)]);\nvar inst_68089 = (state_68099[(2)]);\nvar inst_68090 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(inst_68089,new cljs.core.Keyword(null,\"event\",\"event\",301435442));\nvar inst_68091 = (function (){var vec__68053 = inst_68060;\nvar v = inst_68061;\nvar p = inst_68062;\nvar stop_QMARK_ = inst_68065;\nvar map__68068 = inst_68089;\nvar event_msg = inst_68089;\nvar event = inst_68090;\nreturn ((function (vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\ntry{if(cljs.core.truth_(trace_evs_QMARK_)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),\"taoensso.sente\",null,1607,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Pre-handler event: %s\",event], null);\n});})(vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,326272945);\n} else {\n}\n\nvar G__68117 = (cljs.core.truth_(server_QMARK_)?(function (){var e = (function (){try{if(taoensso.sente.server_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e68118){if((e68118 instanceof Error)){\nvar e = e68118;\nreturn e;\n} else {\nthrow e68118;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1610,\"(server-event-msg? event-msg)\",event_msg,e,null);\n}\n})():(function (){var e = (function (){try{if(taoensso.sente.client_event_msg_QMARK_(event_msg)){\nreturn null;\n} else {\nreturn taoensso.truss.impl._dummy_error;\n}\n}catch (e68119){if((e68119 instanceof Error)){\nvar e = e68119;\nreturn e;\n} else {\nthrow e68119;\n\n}\n}})();\nif((e == null)){\nreturn event_msg;\n} else {\nreturn taoensso.truss.impl._invar_violation_BANG_(null,\"taoensso.sente\",1611,\"(client-event-msg? event-msg)\",event_msg,e,null);\n}\n})());\nreturn (event_msg_handler.cljs$core$IFn$_invoke$arity$1 ? event_msg_handler.cljs$core$IFn$_invoke$arity$1(G__68117) : event_msg_handler.call(null,G__68117));\n}catch (e68115){if((e68115 instanceof Error)){\nvar e1 = e68115;\ntry{var temp__5733__auto__ = error_handler;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar eh = temp__5733__auto__;\nreturn (error_handler.cljs$core$IFn$_invoke$arity$2 ? error_handler.cljs$core$IFn$_invoke$arity$2(e1,event_msg) : error_handler.call(null,e1,event_msg));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1616,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (temp__5733__auto__,e1,vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e1,\"Chsk router `event-msg-handler` error: %s\",event], null);\n});})(temp__5733__auto__,e1,vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,-1616459675);\n}\n}catch (e68116){if((e68116 instanceof Error)){\nvar e2 = e68116;\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"taoensso.sente\",null,1617,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay(((function (e2,e1,vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e2,\"Chsk router `error-handler` error: %s\",event], null);\n});})(e2,e1,vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n,null)),null,910587619);\n} else {\nthrow e68116;\n\n}\n}} else {\nthrow e68115;\n\n}\n}});\n;})(vec__68053,v,p,stop_QMARK_,map__68068,event_msg,event,inst_68062,inst_68060,inst_68061,inst_68065,inst_68089,inst_68090,state_val_68100,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n})();\nvar inst_68092 = execute1(inst_68091);\nvar state_68099__$1 = (function (){var statearr_68120 = state_68099;\n(statearr_68120[(11)] = inst_68092);\n\nreturn statearr_68120;\n})();\nvar statearr_68121_68516 = state_68099__$1;\n(statearr_68121_68516[(2)] = null);\n\n(statearr_68121_68516[(1)] = (2));\n\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (10))){\nvar inst_68084 = (state_68099[(2)]);\nvar state_68099__$1 = state_68099;\nif(cljs.core.truth_(inst_68084)){\nvar statearr_68122_68517 = state_68099__$1;\n(statearr_68122_68517[(1)] = (14));\n\n} else {\nvar statearr_68123_68518 = state_68099__$1;\n(statearr_68123_68518[(1)] = (15));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nif((state_val_68100 === (8))){\nvar inst_68061 = (state_68099[(9)]);\nvar inst_68073 = inst_68061.cljs$lang$protocol_mask$partition0$;\nvar inst_68074 = (inst_68073 & (64));\nvar inst_68075 = inst_68061.cljs$core$ISeq$;\nvar inst_68076 = (cljs.core.PROTOCOL_SENTINEL === inst_68075);\nvar inst_68077 = ((inst_68074) || (inst_68076));\nvar state_68099__$1 = state_68099;\nif(cljs.core.truth_(inst_68077)){\nvar statearr_68124_68519 = state_68099__$1;\n(statearr_68124_68519[(1)] = (11));\n\n} else {\nvar statearr_68125_68520 = state_68099__$1;\n(statearr_68125_68520[(1)] = (12));\n\n}\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});})(c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n;\nreturn ((function (switch__65663__auto__,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function() {\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__ = null;\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____0 = (function (){\nvar statearr_68126 = [null,null,null,null,null,null,null,null,null,null,null,null];\n(statearr_68126[(0)] = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__);\n\n(statearr_68126[(1)] = (1));\n\nreturn statearr_68126;\n});\nvar taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____1 = (function (state_68099){\nwhile(true){\nvar ret_value__65665__auto__ = (function (){try{while(true){\nvar result__65666__auto__ = switch__65663__auto__(state_68099);\nif(cljs.core.keyword_identical_QMARK_(result__65666__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\ncontinue;\n} else {\nreturn result__65666__auto__;\n}\nbreak;\n}\n}catch (e68127){if((e68127 instanceof Object)){\nvar ex__65667__auto__ = e68127;\nvar statearr_68128_68521 = state_68099;\n(statearr_68128_68521[(5)] = ex__65667__auto__);\n\n\ncljs.core.async.impl.ioc_helpers.process_exception(state_68099);\n\nreturn new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268);\n} else {\nthrow e68127;\n\n}\n}})();\nif(cljs.core.keyword_identical_QMARK_(ret_value__65665__auto__,new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268))){\nvar G__68522 = state_68099;\nstate_68099 = G__68522;\ncontinue;\n} else {\nreturn ret_value__65665__auto__;\n}\nbreak;\n}\n});\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__ = function(state_68099){\nswitch(arguments.length){\ncase 0:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____0.call(this);\ncase 1:\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____1.call(this,state_68099);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$0 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____0;\ntaoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__.cljs$core$IFn$_invoke$arity$1 = taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto____1;\nreturn taoensso$sente$_start_chsk_router_BANG__$_state_machine__65664__auto__;\n})()\n;})(switch__65663__auto__,c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n})();\nvar state__65688__auto__ = (function (){var statearr_68129 = (f__65687__auto__.cljs$core$IFn$_invoke$arity$0 ? f__65687__auto__.cljs$core$IFn$_invoke$arity$0() : f__65687__auto__.call(null));\n(statearr_68129[(6)] = c__65686__auto___68502);\n\nreturn statearr_68129;\n})();\nreturn cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped(state__65688__auto__);\n});})(c__65686__auto___68502,map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n);\n\n\nreturn ((function (map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1){\nreturn (function taoensso$sente$_start_chsk_router_BANG__$_stop_BANG_(){\nreturn cljs.core.async.close_BANG_(ch_ctrl);\n});\n;})(map__68050,map__68050__$1,trace_evs_QMARK_,error_handler,simple_auto_threading_QMARK_,ch_ctrl,execute1))\n});\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n * \n *   Or for simple automatic future-based threading of every request, enable\n *   the `:simple-auto-threading?` opt (disabled by default).\n */\ntaoensso.sente.start_server_chsk_router_BANG_ = (function taoensso$sente$start_server_chsk_router_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___68523 = arguments.length;\nvar i__4731__auto___68524 = (0);\nwhile(true){\nif((i__4731__auto___68524 < len__4730__auto___68523)){\nargs__4736__auto__.push((arguments[i__4731__auto___68524]));\n\nvar G__68525 = (i__4731__auto___68524 + (1));\ni__4731__auto___68524 = G__68525;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__68133){\nvar vec__68134 = p__68133;\nvar map__68137 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68134,(0),null);\nvar map__68137__$1 = (((((!((map__68137 == null))))?(((((map__68137.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68137.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68137):map__68137);\nvar opts = map__68137__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68137__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68137__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nvar simple_auto_threading_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68137__$1,new cljs.core.Keyword(null,\"simple-auto-threading?\",\"simple-auto-threading?\",1950754184));\nreturn taoensso.sente._start_chsk_router_BANG_(new cljs.core.Keyword(null,\"server\",\"server\",1499190120),ch_recv,event_msg_handler,opts);\n});\n\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.start_server_chsk_router_BANG_.cljs$lang$applyTo = (function (seq68130){\nvar G__68131 = cljs.core.first(seq68130);\nvar seq68130__$1 = cljs.core.next(seq68130);\nvar G__68132 = cljs.core.first(seq68130__$1);\nvar seq68130__$2 = cljs.core.next(seq68130__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__68131,G__68132,seq68130__$2);\n});\n\n/**\n * Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n *   and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n *   prefer to just write their own loop against `ch-recv`.\n * \n *   Nb performance note: since your `event-msg-handler` fn will be executed\n *   within a simple go block, you'll want this fn to be ~non-blocking\n *   (you'll especially want to avoid blocking IO) to avoid starving the\n *   core.async thread pool under load. To avoid blocking, you can use futures,\n *   agents, core.async, etc. as appropriate.\n */\ntaoensso.sente.start_client_chsk_router_BANG_ = (function taoensso$sente$start_client_chsk_router_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___68526 = arguments.length;\nvar i__4731__auto___68527 = (0);\nwhile(true){\nif((i__4731__auto___68527 < len__4730__auto___68526)){\nargs__4736__auto__.push((arguments[i__4731__auto___68527]));\n\nvar G__68528 = (i__4731__auto___68527 + (1));\ni__4731__auto___68527 = G__68528;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn taoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (ch_recv,event_msg_handler,p__68142){\nvar vec__68143 = p__68142;\nvar map__68146 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__68143,(0),null);\nvar map__68146__$1 = (((((!((map__68146 == null))))?(((((map__68146.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68146.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68146):map__68146);\nvar opts = map__68146__$1;\nvar trace_evs_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68146__$1,new cljs.core.Keyword(null,\"trace-evs?\",\"trace-evs?\",1502453512));\nvar error_handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68146__$1,new cljs.core.Keyword(null,\"error-handler\",\"error-handler\",-484945776));\nreturn taoensso.sente._start_chsk_router_BANG_(cljs.core.not(new cljs.core.Keyword(null,\"server\",\"server\",1499190120)),ch_recv,event_msg_handler,opts);\n});\n\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ntaoensso.sente.start_client_chsk_router_BANG_.cljs$lang$applyTo = (function (seq68139){\nvar G__68140 = cljs.core.first(seq68139);\nvar seq68139__$1 = cljs.core.next(seq68139);\nvar G__68141 = cljs.core.first(seq68139__$1);\nvar seq68139__$2 = cljs.core.next(seq68139__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__68140,G__68141,seq68139__$2);\n});\n\ntaoensso.sente.event_msg_QMARK_ = taoensso.sente.client_event_msg_QMARK_;\n/**\n * Platform-specific alias for `make-channel-socket-server!` or\n *   `make-channel-socket-client!`. Please see the appropriate aliased fn\n * docstring for details.\n */\ntaoensso.sente.make_channel_socket_BANG_ = taoensso.sente.make_channel_socket_client_BANG_;\n/**\n * Platform-specific alias for `start-server-chsk-router!` or\n *   `start-client-chsk-router!`. Please see the appropriate aliased fn\n *   docstring for details.\n */\ntaoensso.sente.start_chsk_router_BANG_ = taoensso.sente.start_client_chsk_router_BANG_;\n/**\n * DEPRECATED: Please use `start-chsk-router!` instead\n */\ntaoensso.sente.start_chsk_router_loop_BANG_ = (function taoensso$sente$start_chsk_router_loop_BANG_(event_handler,ch_recv){\nreturn taoensso.sente.start_client_chsk_router_BANG_(ch_recv,(function (ev_msg){\nvar G__68148 = new cljs.core.Keyword(null,\"event\",\"event\",301435442).cljs$core$IFn$_invoke$arity$1(ev_msg);\nvar G__68149 = new cljs.core.Keyword(null,\"ch-recv\",\"ch-recv\",-990916861).cljs$core$IFn$_invoke$arity$1(ev_msg);\nreturn (event_handler.cljs$core$IFn$_invoke$arity$2 ? event_handler.cljs$core$IFn$_invoke$arity$2(G__68148,G__68149) : event_handler.call(null,G__68148,G__68149));\n}));\n});\n\n/**\n * DEPRECATED. Please use `timbre/set-level!` instead\n */\ntaoensso.sente.set_logging_level_BANG_ = taoensso.timbre.set_level_BANG_;\n\n/**\n * DEPRECATED: Please use `ajax-lite` instead\n */\ntaoensso.sente.ajax_call = taoensso.encore.ajax_lite;\n\n/**\n * DEPRECATED\n */\ntaoensso.sente.default_chsk_url_fn = (function taoensso$sente$default_chsk_url_fn(path,p__68150,websocket_QMARK_){\nvar map__68151 = p__68150;\nvar map__68151__$1 = (((((!((map__68151 == null))))?(((((map__68151.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__68151.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__68151):map__68151);\nvar location = map__68151__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68151__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68151__$1,new cljs.core.Keyword(null,\"host\",\"host\",-1558485167));\nvar pathname = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__68151__$1,new cljs.core.Keyword(null,\"pathname\",\"pathname\",-1420497528));\nvar protocol__$1 = (cljs.core.truth_(websocket_QMARK_)?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol,\"https:\"))?\"wss:\":\"ws:\"):protocol);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol__$1),\"//\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4131__auto__ = path;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn pathname;\n}\n})())].join('');\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","~:file","taoensso/sente.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$elide-require","~$taoensso.sente","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^J","~$have!","^L","~$have?","^L","~$debugf","^H","~$tracef","^H","~$infof","^H","~$errorf","^H"],"~:excludes",["~#set",[]],"~:macros",["^ "],"~:name","^F","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$timbre","^H","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","~$cljs.core","^15","~$goog","^16","^12","^12","^14","^14","~$enc","^L","^H","^H","~$str","~$clojure.string","^19","^19","^L","^L"],"~:seen",["^U",["~:require","~:require-macros"]],"~:uses",["^ ","~$<!","^14","~$>!","^14","~$put!","^14","~$chan","^14","~$format","^L","~$swap-in!","^L","~$reset-in!","^L","~$swapped","^L"],"^1<",["^ ","^J","^J","^10","^H","^13","^14","^15","^15","^14","^14","^F","^F","^17","^L","^H","^H","~$asyncm","^J","^L","^L","~$sente-macros","^F"],"~:form",["~#list",["~$ns","^F","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^1I",["^1;",["^19","~:as","^18"],["^14","^1K","^13","~:refer",["^1I",["^1>","^1?","^1@","^1A"]]],["^L","^1K","^17","^1L",["^1I",["^1B","^1C","^1D","^1E"]],"~:refer-macros",["^1I",["^K","^N","^O"]]],["^H","^1K","^10","^1M",["^1I",["^Q","^P","^R","^G","^S"]]],["^12","^1K","^11"]]],["^1I",["^1<",["^J","^1K","^1F","^1L",["^1I",["^I","^M"]]],["^F","^1K","^1G","^1L",["^1I",["^E"]]]]]]],"~:flags",["^ ","^1;",["^U",[]],"^1<",["^U",[]]],"~:js-deps",["^ "],"~:deps",["^16","^15","^19","^14","^L","^H","^12"]],"^Y","^F","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente.cljc"],"~:compiled-at",1597886902320,"~:resource-name","taoensso/sente.cljc","~:warnings",[],"~:source","(ns taoensso.sente\n  \"Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \\\"socket\\\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.\"\n\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n\n  #?(:clj\n     (:require\n      [clojure.string :as str]\n      [clojure.core.async :as async :refer (<! <!! >! >!! put! chan go go-loop)]\n      [taoensso.encore :as enc :refer (swap-in! reset-in! swapped have have! have?)]\n      [taoensso.timbre :as timbre :refer (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require\n      [clojure.string :as str]\n      [cljs.core.async :as async :refer (<! >! put! chan)]\n      [taoensso.encore :as enc :refer (format swap-in! reset-in! swapped)\n       :refer-macros (have have! have?)]\n      [taoensso.timbre :as timbre :refer-macros (tracef debugf infof warnf errorf)]\n      [taoensso.sente.interfaces :as interfaces]))\n\n  #?(:cljs\n     (:require-macros\n      [cljs.core.async.macros :as asyncm :refer (go go-loop)]\n      [taoensso.sente :as sente-macros :refer (elide-require)])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 105 0])\n  (enc/assert-min-encore-version  2.105))\n\n(def sente-version \"Useful for identifying client/server mismatch\"\n  [1 11 0])\n\n#?(:cljs (def ^:private node-target? (= *target* \"nodejs\")))\n\n;; (timbre/set-level! :trace) ; Uncomment for debugging\n(defonce debug-mode?_ (atom false))\n\n;;;; Events\n;; Clients & server both send `event`s and receive (i.e. route) `event-msg`s:\n;;   - `event`s have the same form client+server side,\n;;   - `event-msg`s have a similar but not identical form\n\n(defn- expected [expected x] {:expected expected :actual {:type (type x) :value x}})\n(defn validate-event\n  \"Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`.\"\n  [x]\n  (cond\n    (not (vector? x))        {:wrong-type   (expected :vector x)}\n    (not (#{1 2} (count x))) {:wrong-length (expected #{1 2}  x)}\n    :else\n    (let [[ev-id _] x]\n      (cond\n        (not (keyword? ev-id))  {:wrong-id-type   (expected :keyword            ev-id)}\n        (not (namespace ev-id)) {:unnamespaced-id (expected :namespaced-keyword ev-id)}\n        :else nil))))\n\n(defn assert-event\n  \"Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception.\"\n  [x]\n  (when-let [errs (validate-event x)]\n    (throw (ex-info \"Invalid event\" {:given x :errors errs}))))\n\n(defn event? \"Valid [ev-id ?ev-data] form?\" [x] (nil? (validate-event x)))\n(defn as-event [x]\n  (if-let [errs (validate-event x)]\n    ;; [:chsk/bad-event {:given x :errors errs}] ; Breaking change\n    [:chsk/bad-event x]\n    x))\n\n(defn client-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :state :event :id :?data} x)\n    (let [{:keys [ch-recv send-fn state event]} x]\n      (and\n        (enc/chan? ch-recv)\n        (ifn?      send-fn)\n        (enc/atom? state)\n        (event?    event)))))\n\n(defn server-event-msg? [x]\n  (and\n    (map? x)\n    (enc/ks= #{:ch-recv :send-fn :connected-uids\n               :ring-req :client-id\n               :event :id :?data :?reply-fn :uid} x)\n    (let [{:keys [ch-recv send-fn connected-uids\n                  ring-req client-id event ?reply-fn]} x]\n      (and\n        (enc/chan?       ch-recv)\n        (ifn?            send-fn)\n        (enc/atom?       connected-uids)\n        (map?            ring-req)\n        (enc/nblank-str? client-id)\n        (event?          event)\n        (or (nil? ?reply-fn)\n            (ifn? ?reply-fn))))))\n\n(defn- put-server-event-msg>ch-recv!\n  \"All server `event-msg`s go through this\"\n  [ch-recv {:as ev-msg :keys [event ?reply-fn]}]\n  (let [[ev-id ev-?data :as valid-event] (as-event event)\n        ev-msg* (merge ev-msg {:event     valid-event\n                               :?reply-fn ?reply-fn\n                               :id        ev-id\n                               :?data     ev-?data})]\n    (if-not (server-event-msg? ev-msg*)\n      (warnf \"Bad ev-msg: %s\" ev-msg) ; Log 'n drop\n      (put! ch-recv ev-msg*))))\n\n;;; Note that cb replys need _not_ be `event` form!\n#?(:cljs (defn cb-error? [cb-reply-clj] (#{:chsk/closed :chsk/timeout :chsk/error} cb-reply-clj)))\n#?(:cljs (defn cb-success? [cb-reply-clj] (not (cb-error? cb-reply-clj))))\n\n;;;; Packing\n;; * Client<->server payloads are arbitrary Clojure vals (cb replies or events).\n;; * Payloads are packed for client<->server transit.\n;; * Packing includes ->str encoding, and may incl. wrapping to carry cb info.\n\n(defn- unpack \"prefixed-pstr->[clj ?cb-uuid]\"\n  [packer prefixed-pstr]\n  (have? string? prefixed-pstr)\n  (let [wrapped? (enc/str-starts-with? prefixed-pstr \"+\")\n        pstr     (subs prefixed-pstr 1)\n        clj\n        (try\n          (interfaces/unpack packer pstr)\n          (catch #?(:clj Throwable :cljs :default) t\n            (debugf \"Bad package: %s (%s)\" pstr t)\n            [:chsk/bad-package pstr]))\n\n        [clj ?cb-uuid] (if wrapped? clj [clj nil])\n        ?cb-uuid (if (= 0 ?cb-uuid) :ajax-cb ?cb-uuid)]\n\n    (tracef \"Unpacking: %s -> %s\" prefixed-pstr [clj ?cb-uuid])\n    [clj ?cb-uuid]))\n\n(defn- pack \"clj->prefixed-pstr\"\n  ([packer clj]\n   (let [;; \"-\" prefix => Unwrapped (has no callback)\n         pstr (str \"-\" (interfaces/pack packer clj))]\n     (tracef \"Packing (unwrapped): %s -> %s\" clj pstr)\n     pstr))\n\n  ([packer clj ?cb-uuid]\n   (let [;;; Keep wrapping as light as possible:\n         ?cb-uuid    (if (= ?cb-uuid :ajax-cb) 0 ?cb-uuid)\n         wrapped-clj (if ?cb-uuid [clj ?cb-uuid] [clj])\n         ;; \"+\" prefix => Wrapped (has callback)\n         pstr (str \"+\" (interfaces/pack packer wrapped-clj))]\n     (tracef \"Packing (wrapped): %s -> %s\" wrapped-clj pstr)\n     pstr)))\n\n(deftype EdnPacker []\n  interfaces/IPacker\n  (pack   [_ x] (enc/pr-edn   x))\n  (unpack [_ s] (enc/read-edn s)))\n\n(def ^:private default-edn-packer (EdnPacker.))\n\n(defn- coerce-packer [x]\n  (if (= x :edn)\n    default-edn-packer\n    (have #(satisfies? interfaces/IPacker %) x)))\n\n(comment\n  (do\n    (require '[taoensso.sente.packers.transit :as transit])\n    (def ^:private default-transit-json-packer (transit/get-transit-packer)))\n\n  (let [pack   interfaces/pack\n        unpack interfaces/unpack\n        data   {:a :A :b :B :c \"hello world\"}]\n\n    (enc/qb 10000\n      (let [pk default-edn-packer]          (unpack pk (pack pk data)))\n      (let [pk default-transit-json-packer] (unpack pk (pack pk data))))))\n\n;;;; Server API\n\n(def ^:private next-idx! (enc/idx-fn))\n\n(declare\n  ^:private send-buffered-server-evs>ws-clients!\n  ^:private send-buffered-server-evs>ajax-clients!\n  ^:private default-client-side-ajax-timeout-ms)\n\n(defn- bad-origin?\n  [allowed-origins {:as ring-req :keys [headers]}]\n  (let [origin  (get headers \"origin\")\n        referer (get headers \"referer\" \"\")]\n    (cond\n      (do        (=   allowed-origins :all))   false\n      (contains? (set allowed-origins) origin) false\n      (enc/rsome #(str/starts-with? referer (str % \"/\")) allowed-origins) false\n      :else true)))\n\n(comment\n  ;; good (pass)\n  (bad-origin? :all                 {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://site.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com/\"}})\n\n  ;; bad (fail)\n  (bad-origin? #{\"http://site.com\"} {:headers nil})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"origin\"  \"http://attacker.com\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://attacker.com/\"}})\n  (bad-origin? #{\"http://site.com\"} {:headers {\"referer\" \"http://site.com.attacker.com/\"}}))\n\n(defn make-channel-socket-server!\n  \"Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\\\"http://site.com\\\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).\"\n\n  [web-server-ch-adapter\n   & [{:keys [recv-buf-or-n ws-kalive-ms lp-timeout-ms\n              send-buf-ms-ajax send-buf-ms-ws\n              user-id-fn bad-csrf-fn bad-origin-fn csrf-token-fn handshake-data-fn packer allowed-origins]\n       :or   {recv-buf-or-n    (async/sliding-buffer 1000)\n              ws-kalive-ms     (enc/ms :secs 25) ; < Heroku 55s timeout\n              lp-timeout-ms    (enc/ms :secs 20) ; < Heroku 30s timeout\n              send-buf-ms-ajax 100\n              send-buf-ms-ws   30\n              user-id-fn    (fn [ring-req] (get-in ring-req [:session :uid]))\n              bad-csrf-fn   (fn [_ring-req] {:status 403 :body \"Bad CSRF token\"})\n              bad-origin-fn (fn [_ring-req] {:status 403 :body \"Unauthorized origin\"})\n              csrf-token-fn (fn [ring-req]\n                              (or (:anti-forgery-token ring-req)\n                                  (get-in ring-req [:session :csrf-token])\n                                  (get-in ring-req [:session :ring.middleware.anti-forgery/anti-forgery-token])\n                                  (get-in ring-req [:session \"__anti-forgery-token\"])\n                                  #_:sente/no-reference-csrf-token\n                                  ))\n              handshake-data-fn (fn [ring-req] nil)\n              packer :edn\n              allowed-origins :all}}]]\n\n  (have? enc/pos-int? send-buf-ms-ajax send-buf-ms-ws)\n  (have? #(satisfies? interfaces/IServerChanAdapter %) web-server-ch-adapter)\n\n  (let [max-ms default-client-side-ajax-timeout-ms]\n   (when (>= lp-timeout-ms max-ms)\n     (throw\n       (ex-info (str \":lp-timeout-ms must be < \" max-ms)\n         {:lp-timeout-ms lp-timeout-ms\n          :default-client-side-ajax-timeout-ms max-ms}))))\n\n  (let [allowed-origins (have [:or set? #{:all}] allowed-origins)\n        packer  (coerce-packer packer)\n        ch-recv (chan recv-buf-or-n)\n\n        user-id-fn\n        (fn [ring-req client-id]\n          ;; Allow uid to depend (in part or whole) on client-id. Be cautious\n          ;; of security implications.\n          (or (user-id-fn (assoc ring-req :client-id client-id)) ::nil-uid))\n\n        ;; :ws udts used for ws-kalive (to check for activity in window period)\n        ;; :ajax udts used for lp-timeout (as a way to check active conn identity)\n        conns_          (atom {:ws  {} :ajax  {}}) ; {<uid> {<client-id> [<?sch> <udt>]}}\n        send-buffers_   (atom {:ws  {} :ajax  {}}) ; {<uid> [<buffered-evs> <#{ev-uuids}>]}\n        connected-uids_ (atom {:ws #{} :ajax #{} :any #{}}) ; Public\n\n        upd-conn!\n        (fn\n          ([conn-type uid client-id] ; Update udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [[?sch _udt] ?v\n                     new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch ?sch})))))\n\n          ([conn-type uid client-id new-?sch] ; Update sch + udt\n           (swap-in! conns_ [conn-type uid client-id]\n             (fn [?v]\n               (let [new-udt (enc/now-udt)]\n                 (enc/swapped\n                   [new-?sch new-udt]\n                   {:init? (nil? ?v) :udt new-udt :?sch new-?sch}))))))\n\n        connect-uid!\n        (fn [conn-type uid] {:pre [(have? uid)]}\n          (let [newly-connected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [new-m\n                          (case conn-type\n                            :ws   {:ws (conj ws uid) :ajax ajax            :any (conj any uid)}\n                            :ajax {:ws ws            :ajax (conj ajax uid) :any (conj any uid)})]\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and (not (contains? old-any uid))\n                                          (contains? new-any uid))\n                            :newly-connected))))))]\n            newly-connected?))\n\n        upd-connected-uid!\n        (fn [uid] {:pre [(have? uid)]}\n          (let [newly-disconnected?\n                (swap-in! connected-uids_ []\n                  (fn [{:keys [ws ajax any] :as old-m}]\n                    (let [conns' @conns_\n                          any-ws-clients?   (contains? (:ws   conns') uid)\n                          any-ajax-clients? (contains? (:ajax conns') uid)\n                          any-clients?      (or any-ws-clients?\n                                                any-ajax-clients?)\n                          new-m\n                          {:ws   (if any-ws-clients?   (conj ws   uid) (disj ws   uid))\n                           :ajax (if any-ajax-clients? (conj ajax uid) (disj ajax uid))\n                           :any  (if any-clients?      (conj any  uid) (disj any  uid))}]\n\n                      (swapped new-m\n                        (let [old-any (:any old-m)\n                              new-any (:any new-m)]\n                          (when (and      (contains? old-any uid)\n                                     (not (contains? new-any uid)))\n                            :newly-disconnected))))))]\n\n            newly-disconnected?))\n\n        send-fn ; server>user (by uid) push\n        (fn [user-id ev & [{:as opts :keys [flush?]}]]\n          (let [uid (if (= user-id :sente/all-users-without-uid) ::nil-uid user-id)\n                _   (tracef \"Chsk send: (->uid %s) %s\" uid ev)\n                _   (assert uid\n                    (str \"Support for sending to `nil` user-ids has been REMOVED. \"\n                         \"Please send to `:sente/all-users-without-uid` instead.\"))\n                _   (assert-event ev)\n\n                ev-uuid (enc/uuid-str)\n\n                flush-buffer!\n                (fn [conn-type]\n                  (when-let\n                      [pulled\n                       (swap-in! send-buffers_ [conn-type]\n                         (fn [m]\n                           ;; Don't actually flush unless the event buffered\n                           ;; with _this_ send call is still buffered (awaiting\n                           ;; flush). This means that we'll have many (go\n                           ;; block) buffer flush calls that'll noop. They're\n                           ;; cheap, and this approach is preferable to\n                           ;; alternatives like flush workers.\n                           (let [[_ ev-uuids] (get m uid)]\n                             (if (contains? ev-uuids ev-uuid)\n                               (swapped (dissoc m uid)\n                                        (get    m uid))\n                               (swapped m nil)))))]\n\n                    (let [[buffered-evs ev-uuids] pulled]\n                      (have? vector? buffered-evs)\n                      (have? set?    ev-uuids)\n\n                      (let [buffered-evs-ppstr (pack packer buffered-evs)]\n                        (tracef \"buffered-evs-ppstr: %s\" buffered-evs-ppstr)\n                        (case conn-type\n                          :ws   (send-buffered-server-evs>ws-clients! conns_\n                                  uid buffered-evs-ppstr upd-conn!)\n                          :ajax (send-buffered-server-evs>ajax-clients! conns_\n                                  uid buffered-evs-ppstr))))))]\n\n            (if (= ev [:chsk/close]) ; Currently undocumented\n              (do\n                (debugf \"Chsk closing (client may reconnect): %s\" uid)\n                (when flush?\n                  (flush-buffer! :ws)\n                  (flush-buffer! :ajax))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ws uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch)))\n\n                (doseq [[?sch _udt] (vals (get-in @conns_ [:ajax uid]))]\n                  (when-let [sch ?sch] (interfaces/sch-close! sch))))\n\n              (do\n                ;; Buffer event\n                (doseq [conn-type [:ws :ajax]]\n                  (swap-in! send-buffers_ [conn-type uid]\n                    (fn [?v]\n                      (if-not ?v\n                        [[ev] #{ev-uuid}]\n                        (let [[buffered-evs ev-uuids] ?v]\n                          [(conj buffered-evs ev)\n                           (conj ev-uuids     ev-uuid)])))))\n\n                ;;; Flush event buffers after relevant timeouts:\n                ;; * May actually flush earlier due to another timeout.\n                ;; * We send to _all_ of a uid's connections.\n                ;; * Broadcasting is possible but I'd suggest doing it rarely,\n                ;;   and only to users we know/expect are actually online.\n                ;;\n                (if flush?\n                  (do\n                    (flush-buffer! :ws)\n                    (flush-buffer! :ajax))\n                  (let [ws-timeout   (async/timeout send-buf-ms-ws)\n                        ajax-timeout (async/timeout send-buf-ms-ajax)]\n                    (go\n                      (<! ws-timeout)\n                      (flush-buffer! :ws))\n                    (go\n                      (<! ajax-timeout)\n                      (flush-buffer! :ajax)))))))\n\n          ;; Server-side send is async so nothing useful to return (currently\n          ;; undefined):\n          nil)\n\n        bad-csrf?\n        (fn [ring-req]\n          (if (nil? csrf-token-fn) ; Provides a way to disable CSRF check\n            false\n            (if-let [reference-csrf-token (csrf-token-fn ring-req)]\n              (let [csrf-token-from-client\n                    (or\n                      (get-in ring-req [:params    :csrf-token])\n                      (get-in ring-req [:headers \"x-csrf-token\"])\n                      (get-in ring-req [:headers \"x-xsrf-token\"]))]\n\n                (not\n                  (enc/const-str=\n                    reference-csrf-token\n                    csrf-token-from-client)))\n\n              true ; By default fail if no CSRF token\n              )))\n\n\n        ev-msg-const\n        {:ch-recv        ch-recv\n         :send-fn        send-fn\n         :connected-uids connected-uids_}]\n\n    {:ch-recv        ch-recv\n     :send-fn        send-fn\n     :connected-uids connected-uids_\n\n     ;; Does not participate in `conns_` (has specific req->resp)\n     :ajax-post-fn\n     (fn [ring-req]\n       (cond\n         (bad-csrf?   ring-req)\n         (bad-csrf-fn ring-req)\n\n         (bad-origin? allowed-origins ring-req)\n         (bad-origin-fn               ring-req)\n\n         :else\n         (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n           {:on-open\n            (fn [server-ch websocket?]\n              (assert (not websocket?))\n              (let [params        (get ring-req :params)\n                    ppstr         (get params   :ppstr)\n                    client-id     (get params   :client-id)\n                    [clj has-cb?] (unpack packer ppstr)\n                    reply-fn\n                    (let [replied?_ (atom false)]\n                      (fn [resp-clj] ; Any clj form\n                        (when (compare-and-set! replied?_ false true)\n                          (tracef \"Chsk send (ajax post reply): %s\" resp-clj)\n                          (interfaces/sch-send! server-ch websocket?\n                            (pack packer resp-clj)))))]\n\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {;; Note that the client-id is provided here just for the\n                     ;; user's convenience. non-lp-POSTs don't actually need a\n                     ;; client-id for Sente's own implementation:\n                     :client-id client-id #_\"unnecessary-for-non-lp-POSTs\"\n                     :ring-req  ring-req\n                     :event     clj\n                     :uid       (user-id-fn ring-req client-id)\n                     :?reply-fn (when has-cb? reply-fn)}))\n\n                (if has-cb?\n                  (when-let [ms lp-timeout-ms]\n                    (go\n                      (<! (async/timeout ms))\n                      (reply-fn :chsk/timeout)))\n                  (reply-fn :chsk/dummy-cb-200))))})))\n\n     ;; Ajax handshake/poll, or WebSocket handshake\n     :ajax-get-or-ws-handshake-fn\n     (fn [ring-req]\n       (let [sch-uuid   (enc/uuid-str 6)\n             params     (get ring-req :params)\n             client-id  (get params   :client-id)\n             uid        (user-id-fn    ring-req client-id)\n\n             receive-event-msg! ; Partial\n             (fn self\n               ([event          ] (self event nil))\n               ([event ?reply-fn]\n                (put-server-event-msg>ch-recv! ch-recv\n                  (merge ev-msg-const\n                    {:client-id client-id\n                     :ring-req  ring-req\n                     :event     event\n                     :?reply-fn ?reply-fn\n                     :uid       uid}))))\n\n             send-handshake!\n             (fn [server-ch websocket?]\n               (tracef \"send-handshake!\")\n               (let [?handshake-data (handshake-data-fn ring-req)\n                     handshake-ev\n                     (if (nil? ?handshake-data) ; Micro optimization\n                       [:chsk/handshake [uid nil]]\n                       [:chsk/handshake [uid nil ?handshake-data]])]\n                 (interfaces/sch-send! server-ch websocket?\n                   (pack packer handshake-ev))))]\n\n         (cond\n\n           (str/blank? client-id)\n           (let [err-msg \"Client's Ring request doesn't have a client id. Does your server have the necessary keyword Ring middleware (`wrap-params` & `wrap-keyword-params`)?\"]\n             (errorf (str err-msg \": %s\") ring-req) ; Careful re: % in req\n             (throw (ex-info err-msg {:ring-req ring-req})))\n\n           (bad-csrf?   ring-req)\n           (bad-csrf-fn ring-req)\n\n           (bad-origin? allowed-origins ring-req)\n           (bad-origin-fn               ring-req)\n\n           :else\n           (interfaces/ring-req->server-ch-resp web-server-ch-adapter ring-req\n             {:on-open\n              (fn [server-ch websocket?]\n                (if websocket?\n\n                  ;; WebSocket handshake\n                  (let [_ (tracef \"New WebSocket channel: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ws uid client-id server-ch)\n                        udt-open     (:udt updated-conn)]\n\n                    (when (connect-uid! :ws uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (send-handshake! server-ch websocket?)\n\n                    ;; Start ws-kalive loop\n                    ;; This also works to gc ws conns that were suddenly\n                    ;; terminated (e.g. by turning on airplane mode)\n                    (when-let [ms ws-kalive-ms]\n                      (go-loop [udt-t0 udt-open]\n                        (<! (async/timeout ms))\n                        (when-let [[_sch udt-t1] (get-in @conns_ [:ws uid client-id])]\n                          (when (interfaces/sch-open? server-ch)\n                            ;; (assert (= _sch server-ch))\n                            (when (= udt-t1 udt-t0)\n                              ;; Ref. issue #230:\n                              ;; We've seen no send/recv activity on this\n                              ;; conn w/in our kalive window so send a ping\n                              ;; ->client (should auto-close conn if it's\n                              ;; gone dead).\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/ws-ping)))\n                            (recur udt-t1))))))\n\n                  ;; Ajax handshake/poll\n                  (let [_ (tracef \"New Ajax handshake/poll: %s (%s)\" uid sch-uuid)\n                        updated-conn (upd-conn! :ajax uid client-id server-ch)\n                        udt-open     (:udt updated-conn)\n                        handshake?   (or (:init? updated-conn) (:handshake? params))]\n\n                    (when (connect-uid! :ajax uid)\n                      (receive-event-msg! [:chsk/uidport-open uid]))\n\n                    (if handshake?\n                      ; Client will immediately repoll\n                      (send-handshake! server-ch websocket?)\n\n                      (when-let [ms lp-timeout-ms]\n                        (go\n                          (<! (async/timeout ms))\n                          (when-let [[_sch udt-t1] (get-in @conns_ [:ajax uid client-id])]\n                            (when (= udt-t1 udt-open)\n                              ;; (assert (= _sch server-ch))\n                              ;; Appears to still be the active sch\n                              (interfaces/sch-send! server-ch websocket?\n                                (pack packer :chsk/timeout))))))))))\n\n              :on-msg\n              (fn [server-ch websocket? req-ppstr]\n                (assert websocket?)\n                (upd-conn! :ws uid client-id)\n                (let [[clj ?cb-uuid] (unpack packer req-ppstr)]\n                  (receive-event-msg! clj ; Should be ev\n                    (when ?cb-uuid\n                      (fn reply-fn [resp-clj] ; Any clj form\n                        (tracef \"Chsk send (ws reply): %s\" resp-clj)\n                        ;; true iff apparent success:\n                        (interfaces/sch-send! server-ch websocket?\n                          (pack packer resp-clj ?cb-uuid)))))))\n\n              :on-close ; We rely on `on-close` to trigger for _every_ conn!\n              (fn [server-ch websocket? _status]\n                ;; Note that `status` type varies with underlying web server\n                (let [conn-type (if websocket? :ws :ajax)\n                      _ (tracef \"%s channel closed: %s (%s)\"\n                          (if websocket? \"WebSocket\" \"Ajax\")\n                          uid sch-uuid)\n\n                      updated-conn (upd-conn! conn-type uid client-id nil)\n                      udt-close    (:udt updated-conn)]\n\n                  ;; Allow some time for possible reconnects (repoll,\n                  ;; sole window refresh, etc.):\n                  (go\n                    (<! (async/timeout 5000))\n                    (let [[_?sch udt-t1] (get-in @conns_ [conn-type uid client-id])]\n\n                      (when @debug-mode?_\n                        (debugf \"close-timeout: %s %s %s %s\" conn-type uid\n                          sch-uuid [(= udt-t1 udt-close) udt-t1 udt-close]))\n\n                      (when (= udt-t1 udt-close)\n                        (let [disconnect? ; Removed entry for client-id?\n                              (swap-in! conns_ [conn-type uid client-id]\n                                (fn [[_sch udt-t1]]\n                                  (if (= udt-t1 udt-close)\n                                    (swapped :swap/dissoc true)\n                                    (swapped [_sch udt-t1] false))))]\n\n                          (when disconnect?\n\n                            ;; Potentially remove entry for uid\n                            (swap-in! conns_ [conn-type uid]\n                              (fn [?m] (if (empty? ?m) :swap/dissoc ?m)))\n\n                            (when (upd-connected-uid! uid)\n                              (receive-event-msg! [:chsk/uidport-close uid])))))))))\n\n              :on-error\n              (fn [server-ch websocket? error]\n                (errorf \"ring-req->server-ch-resp error: %s (%s)\"\n                  error uid sch-uuid))}))))}))\n\n(defn- send-buffered-server-evs>ws-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's WebSocket conns.\"\n  [conns_ uid buffered-evs-pstr upd-conn!]\n  (tracef \"send-buffered-server-evs>ws-clients!: %s\" buffered-evs-pstr)\n  (doseq [[client-id [?sch _udt]] (get-in @conns_ [:ws uid])]\n    (when-let [sch ?sch]\n      (upd-conn! :ws uid client-id)\n      (interfaces/sch-send! sch :websocket buffered-evs-pstr))))\n\n(defn- send-buffered-server-evs>ajax-clients!\n  \"Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects.\"\n  [conns_ uid buffered-evs-pstr]\n  (tracef \"send-buffered-server-evs>ajax-clients!: %s\" buffered-evs-pstr)\n  (let [ms-backoffs [90 180 360 720 1440] ; Mean 2790s\n        ;; All connected/possibly-reconnecting client uuids:\n        client-ids-unsatisfied (keys (get-in @conns_ [:ajax uid]))]\n\n    (when-not (empty? client-ids-unsatisfied)\n      ;; (tracef \"client-ids-unsatisfied: %s\" client-ids-unsatisfied)\n      (go-loop [n 0 client-ids-satisfied #{}]\n        (let [?pulled ; nil or {<client-id> [<?sch> <udt>]}\n              (swap-in! conns_ [:ajax uid]\n                (fn [m] ; {<client-id> [<?sch> <udt>]}\n                  (let [ks-to-pull (remove client-ids-satisfied (keys m))]\n                    ;; (tracef \"ks-to-pull: %s\" ks-to-pull)\n                    (if (empty? ks-to-pull)\n                      (swapped m nil)\n                      (swapped\n                        (reduce\n                          (fn [m k]\n                            (let [[?sch udt] (get m k)]\n                              ;; Nb don't change udt; for Ajax conns_ we only\n                              ;; want udt updated on poll or close, not on\n                              ;; activity (as with ws conns_)\n                              (assoc m k [nil udt #_(enc/now-udt)])))\n\n                          m ks-to-pull)\n                        (select-keys m ks-to-pull))))))]\n\n          (have? [:or nil? map?] ?pulled)\n\n          (let [?newly-satisfied\n                (when ?pulled\n                  (reduce-kv\n                    (fn [s client-id [?sch _udt]]\n                      (let [sent?\n                            (when-let [sch ?sch]\n                              ;; Will noop + return false if sch already closed:\n                              (interfaces/sch-send! ?sch (not :websocket)\n                                buffered-evs-pstr))]\n\n                        (if sent? (conj s client-id) s)))\n                    #{} ?pulled))\n\n                now-satisfied (into client-ids-satisfied ?newly-satisfied)]\n\n            ;; (tracef \"now-satisfied: %s\" now-satisfied)\n            (when-let [ms-backoff (get ms-backoffs n)]\n              (when (enc/rsome (complement now-satisfied) client-ids-unsatisfied)\n                (let [ms-timeout (+ ms-backoff (rand-int ms-backoff))]\n                  ;; Allow some time for possible poller reconnects:\n                  (<! (async/timeout ms-timeout))\n                  (recur (inc n) now-satisfied))))))))))\n\n;;;; Client API\n\n#?(:cljs (def ajax-lite \"Alias of `taoensso.encore/ajax-lite`\" enc/ajax-lite))\n#?(:cljs\n   (defprotocol IChSocket\n     (-chsk-connect!    [chsk])\n     (-chsk-disconnect! [chsk reason])\n     (-chsk-reconnect!  [chsk])\n     (-chsk-send!       [chsk ev opts])))\n\n#?(:cljs\n   (do\n     (defn chsk-connect!    [chsk] (-chsk-connect!    chsk))\n     (defn chsk-disconnect! [chsk] (-chsk-disconnect! chsk :requested-disconnect))\n     (defn chsk-reconnect! \"Useful for reauthenticating after login/logout, etc.\"\n       [chsk] (-chsk-reconnect! chsk))\n     (def chsk-destroy! \"Deprecated\" chsk-disconnect!)))\n\n#?(:cljs\n   (defn chsk-send!\n     \"Sends `[ev-id ev-?data :as event]`, returns true on apparent success.\"\n     ([chsk ev] (chsk-send! chsk ev {}))\n     ([chsk ev ?timeout-ms ?cb] (chsk-send! chsk ev {:timeout-ms ?timeout-ms\n                                                     :cb         ?cb}))\n     ([chsk ev opts]\n      (tracef \"Chsk send: (%s) %s\" (assoc opts :cb (boolean (:cb opts))) ev)\n      (-chsk-send! chsk ev opts))))\n\n#?(:cljs\n   (defn- chsk-send->closed! [?cb-fn]\n     (warnf \"Chsk send against closed chsk.\")\n     (when ?cb-fn (?cb-fn :chsk/closed))\n     false))\n\n#?(:cljs\n   (defn- assert-send-args [x ?timeout-ms ?cb]\n     (assert-event x)\n     (assert (or (and (nil? ?timeout-ms) (nil? ?cb))\n                 (and (enc/nat-int? ?timeout-ms)))\n             (str \"cb requires a timeout; timeout-ms should be a +ive integer: \" ?timeout-ms))\n     (assert (or (nil? ?cb) (ifn? ?cb) (enc/chan? ?cb))\n             (str \"cb should be nil, an ifn, or a channel: \" (type ?cb)))))\n\n#?(:cljs\n   (defn- pull-unused-cb-fn! [cbs-waiting_ ?cb-uuid]\n     (when-let [cb-uuid ?cb-uuid]\n       (swap-in! cbs-waiting_ [cb-uuid]\n                 (fn [?f] (swapped :swap/dissoc ?f))))))\n\n#?(:cljs\n   (defn- swap-chsk-state!\n     \"Atomically swaps the value of chk's :state_ atom.\"\n     [chsk f]\n     (let [[old-state new-state]\n           (swap-in! (:state_ chsk)\n             (fn [old-state]\n               (let [new-state (f old-state)\n                     new-state\n                     (if (:first-open? old-state)\n                       (assoc new-state :first-open? false)\n                       new-state)\n\n                     new-state\n                     (if (:open? new-state)\n                       (dissoc new-state :udt-next-reconnect)\n                       new-state)]\n\n                 (swapped new-state [old-state new-state]))))]\n\n       (when (not= old-state new-state)\n         (let [output [old-state new-state]]\n           ;; (debugf \"Chsk state change: %s\" output)\n           (put! (get-in chsk [:chs :state]) [:chsk/state output])\n           output)))))\n\n#?(:cljs\n   (defn- chsk-state->closed [state reason]\n     (have? map? state)\n     (have? [:el #{:requested-disconnect\n                   :requested-reconnect\n                   :downgrading-ws-to-ajax\n                   :unexpected}] reason)\n     (if (or (:open? state) (not= reason :unexpected))\n       (-> state\n           (dissoc :udt-next-reconnect)\n           (assoc\n             :open? false\n             :last-close {:udt (enc/now-udt) :reason reason}))\n       state)))\n\n#?(:cljs\n   (defn- cb-chan-as-fn\n     \"Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>].\"\n     [?cb ev]\n     (if (or (nil? ?cb) (ifn? ?cb))\n       ?cb\n       (do\n         (have? enc/chan? ?cb)\n         (assert-event ev)\n         (let [[ev-id _] ev\n               cb-ch ?cb]\n           (fn [reply]\n             (put! cb-ch\n               [(keyword (str (enc/as-qname ev-id) \".cb\"))\n                reply])))))))\n\n#?(:cljs\n   (defn- receive-buffered-evs! [chs clj]\n     (tracef \"receive-buffered-evs!: %s\" clj)\n     (let [buffered-evs (have vector? clj)]\n       (doseq [ev buffered-evs]\n         (assert-event ev)\n         ;; Should never receive :chsk/* events from server here:\n         (let [[id] ev] (assert (not= (namespace id) \"chsk\")))\n         (put! (:<server chs) ev)))))\n\n#?(:cljs\n   (defn- handshake? [x]\n     (and (vector? x) ; Nb support arb input (e.g. cb replies)\n          (let [[x1] x] (= x1 :chsk/handshake)))))\n\n#?(:cljs\n   (defn- receive-handshake! [chsk-type chsk clj]\n     (have? [:el #{:ws :ajax}] chsk-type)\n     (have? handshake? clj)\n     (tracef \"receive-handshake! (%s): %s\" chsk-type clj)\n     (let [[_ [?uid _ ?handshake-data]] clj\n           {:keys [chs ever-opened?_]} chsk\n           first-handshake? (compare-and-set! ever-opened?_ false true)\n           new-state\n           {:type           chsk-type ; :auto -> e/o #{:ws :ajax}, etc.\n            :open?          true\n            :ever-opened?   true\n            :uid            ?uid\n            :handshake-data ?handshake-data\n            :first-open?    first-handshake?}\n\n           handshake-ev\n           [:chsk/handshake\n            [?uid nil ?handshake-data first-handshake?]]]\n\n       (assert-event handshake-ev)\n       (swap-chsk-state! chsk #(merge % new-state))\n       (put! (:internal chs) handshake-ev)\n\n       :handled)))\n\n#?(:clj\n   (defmacro ^:private elide-require\n    \"Experimental. The presence of `js/require` calls can cause issues with\n    React Native, even if they never execute. Currently no other known\n    workarounds. Ref. https://github.com/ptaoussanis/sente/issues/247.\"\n     [& body]\n     (when-not (enc/get-sys-val \"SENTE_ELIDE_JS_REQUIRE\")\n       `(do ~@body))))\n\n#?(:cljs\n   (def ^:private ?node-npm-websocket_\n     \"nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \\\"1.0.23\\\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm\"\n     (delay ; Eager eval causes issues with React Native, Ref. #247,\n       (elide-require\n         (when (and node-target? (exists? js/require))\n           (try\n             (js/require \"websocket\")\n             ;; In particular, catch 'UnableToResolveError'\n             (catch :default e\n               ;; (errorf e \"Unable to load npm websocket lib\")\n               nil)))))))\n\n#?(:cljs\n   (defrecord ChWebSocket\n     ;; WebSocket-only IChSocket implementation\n     ;; Handles (re)connections, cbs, etc.\n\n     [client-id chs params packer url ws-kalive-ms\n      state_ ; {:type _ :open? _ :uid _ :csrf-token _ ...}\n      instance-handle_ retry-count_ ever-opened?_\n      backoff-ms-fn ; (fn [nattempt]) -> msecs\n      cbs-waiting_ ; {<cb-uuid> <fn> ...}\n      socket_\n      udt-last-comms_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [s @socket_] (.close s 1000 \"CLOSE_NORMAL\")))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [?cb-uuid (when ?cb-fn (enc/uuid-str 6))\n                 ppstr (pack packer ev ?cb-uuid)]\n\n             (when-let [cb-uuid ?cb-uuid]\n               (reset-in! cbs-waiting_ [cb-uuid] (have ?cb-fn))\n               (when-let [timeout-ms ?timeout-ms]\n                 (go\n                   (<! (async/timeout timeout-ms))\n                   (when-let [cb-fn* (pull-unused-cb-fn! cbs-waiting_ ?cb-uuid)]\n                     (cb-fn* :chsk/timeout)))))\n\n             (try\n               (.send @socket_ ppstr)\n               (reset! udt-last-comms_ (enc/now-udt))\n               :apparent-success\n               (catch :default e\n                 (errorf e \"Chsk send error\")\n                 (when-let [cb-uuid ?cb-uuid]\n                   (let [cb-fn* (or (pull-unused-cb-fn! cbs-waiting_ cb-uuid)\n                                    (have ?cb-fn))]\n                     (cb-fn* :chsk/error)))\n                 false))))))\n\n     (-chsk-connect! [chsk]\n       (when-let [WebSocket\n                  (or\n                    (enc/oget goog/global    \"WebSocket\")\n                    (enc/oget goog/global \"MozWebSocket\")\n                    (enc/oget @?node-npm-websocket_ \"w3cwebsocket\"))]\n\n         (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n               have-handle? (fn [] (= @instance-handle_ instance-handle))\n               connect-fn\n               (fn connect-fn []\n                 (when (have-handle?)\n                   (let [retry-fn\n                         (fn [] ; Backoff then recur\n                           (when (have-handle?)\n                             (let [retry-count* (swap! retry-count_ inc)\n                                   backoff-ms (backoff-ms-fn retry-count*)\n                                   udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                               (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                 retry-count* backoff-ms)\n                               (.setTimeout goog/global connect-fn backoff-ms)\n                               (swap-chsk-state! chsk\n                                 #(assoc % :udt-next-reconnect udt-next-reconnect)))))\n\n                         ?socket\n                         (try\n                           (WebSocket.\n                             (enc/merge-url-with-query-string url\n                               (merge params ; 1st (don't clobber impl.):\n                                 {:client-id client-id\n                                  :csrf-token (:csrf-token @state_)})))\n\n                           (catch :default e\n                             (errorf e \"WebSocket error\")\n                             nil))]\n\n                     (if-not ?socket\n                       (retry-fn) ; Couldn't even get a socket\n\n                       (reset! socket_\n                         (doto ?socket\n                           (aset \"onerror\"\n                             (fn [ws-ev]\n                               (errorf ; ^:meta {:raw-console? true}\n                                 \"WebSocket error: %s\"\n                                 (try\n                                   (js->clj ws-ev)\n                                   (catch :default _ ws-ev)))\n\n                               (let [last-ws-error {:udt (enc/now-udt), :ev ws-ev}]\n                                 (swap-chsk-state! chsk\n                                   #(assoc % :last-ws-error last-ws-error)))))\n\n                           (aset \"onmessage\" ; Nb receives both push & cb evs!\n                             (fn [ws-ev]\n                               (let [ppstr (enc/oget ws-ev \"data\")\n\n                                     ;; `clj` may/not satisfy `event?` since\n                                     ;; we also receive cb replies here. This\n                                     ;; is why we prefix pstrs to indicate\n                                     ;; whether they're wrapped or not\n                                     [clj ?cb-uuid] (unpack packer ppstr)]\n\n                                 (reset! udt-last-comms_ (enc/now-udt))\n\n                                 (or\n                                   (when (handshake? clj)\n                                     (receive-handshake! :ws chsk clj)\n                                     (reset! retry-count_ 0)\n                                     :handshake)\n\n                                   (when (= clj :chsk/ws-ping)\n                                     (put! (:<server chs) [:chsk/ws-ping])\n                                     :noop)\n\n                                   (if-let [cb-uuid ?cb-uuid]\n                                     (if-let [cb-fn (pull-unused-cb-fn! cbs-waiting_\n                                                      cb-uuid)]\n                                       (cb-fn clj)\n                                       (warnf \"Cb reply w/o local cb-fn: %s\" clj))\n                                     (let [buffered-evs clj]\n                                       (receive-buffered-evs! chs buffered-evs)))))))\n\n                           ;; Fires repeatedly (on each connection attempt) while\n                           ;; server is down:\n                           (aset \"onclose\"\n                             (fn [ws-ev]\n                               (let [clean? (enc/oget ws-ev \"wasClean\")\n                                     code   (enc/oget ws-ev \"code\")\n                                     reason (enc/oget ws-ev \"reason\")\n                                     last-ws-close\n                                     {:udt    (enc/now-udt)\n                                      :ev     ws-ev\n                                      :clean? clean?\n                                      :code   code\n                                      :reason reason}]\n\n                                 ;; Firefox calls \"onclose\" while unloading,\n                                 ;; Ref. http://goo.gl/G5BYbn:\n                                 (if clean?\n                                   (do\n                                     (debugf \"Clean WebSocket close, will not attempt reconnect\")\n                                     (swap-chsk-state! chsk\n                                       #(assoc % :last-ws-close last-ws-close)))\n                                   (do\n                                     (swap-chsk-state! chsk\n                                       #(assoc (chsk-state->closed % :unexpected)\n                                          :last-ws-close last-ws-close))\n                                     (retry-fn))))))))))))]\n\n           (when-let [ms ws-kalive-ms]\n             (go-loop []\n               (let [udt-t0 @udt-last-comms_]\n                 (<! (async/timeout ms))\n                 (when (have-handle?)\n                   (let [udt-t1 @udt-last-comms_]\n                     (when (= udt-t0 udt-t1)\n                       ;; Ref. issue #259:\n                       ;; We've seen no send/recv activity on this\n                       ;; conn w/in our kalive window so send a ping\n                       ;; ->server (should auto-close conn if it's\n                       ;; gone dead). The server generally sends pings so\n                       ;; this should be rare. Mostly here to help clients\n                       ;; identify conns that were suddenly dropped.\n\n                       (-chsk-send! chsk [:chsk/ws-ping] {:flush? true})))\n                   (recur)))))\n\n           (reset! retry-count_ 0)\n           (connect-fn)\n           chsk)))))\n\n#?(:cljs\n   (defn- new-ChWebSocket [opts csrf-token]\n     (map->ChWebSocket\n       (merge\n         {:state_ (atom {:type :ws :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :retry-count_     (atom 0)\n          :ever-opened?_    (atom false)\n          :cbs-waiting_     (atom {})\n          :socket_          (atom nil)\n          :udt-last-comms_  (atom nil)}\n         opts))))\n\n(def ^:private default-client-side-ajax-timeout-ms\n  \"We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms.\"\n  (enc/ms :secs 60))\n\n#?(:cljs\n   (defrecord ChAjaxSocket\n     ;; Ajax-only IChSocket implementation\n     ;; Handles (re)polling, etc.\n\n     [client-id chs params packer url state_\n      instance-handle_ ever-opened?_\n      backoff-ms-fn\n      ajax-opts curr-xhr_]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (reset! instance-handle_ nil) ; Disable auto retry\n       (swap-chsk-state! chsk #(chsk-state->closed % reason))\n       (when-let [x @curr-xhr_] (.abort x)))\n\n     (-chsk-reconnect! [chsk]\n       (-chsk-disconnect! chsk :requested-reconnect)\n       (-chsk-connect!    chsk))\n\n     (-chsk-send! [chsk ev opts]\n       (let [{?timeout-ms :timeout-ms ?cb :cb :keys [flush?]} opts\n             _ (assert-send-args ev ?timeout-ms ?cb)\n             ?cb-fn (cb-chan-as-fn ?cb ev)]\n         (if-not (:open? @state_) ; Definitely closed\n           (chsk-send->closed! ?cb-fn)\n\n           ;; TODO Buffer before sending (but honor `:flush?`)\n           (let [csrf-token (:csrf-token @state_)]\n             (ajax-lite url\n               (merge ajax-opts\n                 {:method     :post\n                  :timeout-ms (or ?timeout-ms (:timeout-ms ajax-opts)\n                                  default-client-side-ajax-timeout-ms)\n                  :resp-type  :text ; We'll do our own pstr decoding\n                  :headers\n                  (merge\n                    (:headers ajax-opts) ; 1st (don't clobber impl.)\n                    {:X-CSRF-Token csrf-token})\n\n                  :params\n                  (let [ppstr (pack packer ev (when ?cb-fn :ajax-cb))]\n                    (merge params ; 1st (don't clobber impl.):\n                      {:udt        (enc/now-udt) ; Force uncached resp\n\n                       ;; A duplicate of X-CSRF-Token for user's convenience\n                       ;; and for back compatibility with earlier CSRF docs:\n                       :csrf-token csrf-token\n\n                       ;; Just for user's convenience here. non-lp-POSTs\n                       ;; don't actually need a client-id for Sente's own\n                       ;; implementation:\n                       :client-id  client-id\n\n                       :ppstr      ppstr}))})\n\n               (fn ajax-cb [{:keys [?error ?content]}]\n                 (if ?error\n                   (if (= ?error :timeout)\n                     (when ?cb-fn (?cb-fn :chsk/timeout))\n                     (do\n                       (swap-chsk-state! chsk\n                         #(chsk-state->closed % :unexpected))\n                       (when ?cb-fn (?cb-fn :chsk/error))))\n\n                   (let [content ?content\n                         resp-ppstr content\n                         [resp-clj _] (unpack packer resp-ppstr)]\n                     (if ?cb-fn\n                       (?cb-fn resp-clj)\n                       (when (not= resp-clj :chsk/dummy-cb-200)\n                         (warnf \"Cb reply w/o local cb-fn: %s\" resp-clj)))\n                     (swap-chsk-state! chsk #(assoc % :open? true))))))\n\n             :apparent-success))))\n\n     (-chsk-connect! [chsk]\n       (let [instance-handle (reset! instance-handle_ (enc/uuid-str))\n             have-handle? (fn [] (= @instance-handle_ instance-handle))\n             poll-fn ; async-poll-for-update-fn\n             (fn poll-fn [retry-count]\n               (tracef \"async-poll-for-update!\")\n               (when (have-handle?)\n                 (let [retry-fn\n                       (fn [] ; Backoff then recur\n                         (when (have-handle?)\n                           (let [retry-count* (inc retry-count)\n                                 backoff-ms (backoff-ms-fn retry-count*)\n                                 udt-next-reconnect (+ (enc/now-udt) backoff-ms)]\n                             (warnf \"Chsk is closed: will try reconnect attempt (%s) in %s ms\"\n                                    retry-count* backoff-ms)\n                             (.setTimeout goog/global\n                               (fn [] (poll-fn retry-count*))\n                               backoff-ms)\n                             (swap-chsk-state! chsk\n                               #(assoc % :udt-next-reconnect udt-next-reconnect)))))]\n\n                   (reset! curr-xhr_\n                     (ajax-lite url\n                       (merge ajax-opts\n                         {:method     :get ; :timeout-ms timeout-ms\n                          :timeout-ms (or (:timeout-ms ajax-opts)\n                                        default-client-side-ajax-timeout-ms)\n                          :resp-type  :text ; Prefer to do our own pstr reading\n                          :params\n                          (merge\n                            ;; Note that user params here are actually POST\n                            ;; params for convenience. Contrast: WebSocket\n                            ;; params sent as query params since there's no\n                            ;; other choice there.\n                            params ; 1st (don't clobber impl.):\n\n                            {:udt       (enc/now-udt) ; Force uncached resp\n                             :client-id client-id}\n\n                            ;; A truthy :handshake? param will prompt server to\n                            ;; reply immediately with a handshake response,\n                            ;; letting us confirm that our client<->server comms\n                            ;; are working:\n                            (when-not (:open? @state_) {:handshake? true}))\n\n                          :headers\n                          (merge\n                            (:headers ajax-opts) ; 1st (don't clobber impl.)\n                            {:X-CSRF-Token (:csrf-token @state_)})})\n\n                       (fn ajax-cb [{:keys [?error ?content]}]\n                         (if ?error\n                           (cond\n                             (= ?error :timeout) (poll-fn 0)\n                             ;; (= ?error :abort) ; Abort => intentional, not an error\n                             :else\n                             (do\n                               (swap-chsk-state! chsk\n                                 #(chsk-state->closed % :unexpected))\n                               (retry-fn)))\n\n                           ;; The Ajax long-poller is used only for events, never cbs:\n                           (let [content ?content\n                                 ppstr content\n                                 [clj] (unpack packer ppstr)\n                                 handshake? (handshake? clj)]\n\n                             (when handshake?\n                               (receive-handshake! :ajax chsk clj))\n\n                             (swap-chsk-state! chsk #(assoc % :open? true))\n                             (poll-fn 0) ; Repoll asap\n\n                             (when-not handshake?\n                               (or\n                                 (when (= clj :chsk/timeout)\n                                   (when @debug-mode?_\n                                     (receive-buffered-evs! chs [[:debug/timeout]]))\n                                   :noop)\n\n                                 (let [buffered-evs clj] ; An application reply\n                                   (receive-buffered-evs! chs buffered-evs))))))))))))]\n\n         (poll-fn 0)\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAjaxSocket [opts csrf-token]\n     (map->ChAjaxSocket\n       (merge\n         {:state_           (atom {:type :ajax :open? false :ever-opened? false :csrf-token csrf-token})\n          :instance-handle_ (atom nil)\n          :ever-opened?_    (atom false)\n          :curr-xhr_        (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defrecord ChAutoSocket\n     ;; Dynamic WebSocket/Ajax IChSocket implementation\n     ;; Wraps a swappable ChWebSocket/ChAjaxSocket\n\n     [ws-chsk-opts ajax-chsk-opts state_\n      impl_ ; ChWebSocket or ChAjaxSocket\n      ]\n\n     IChSocket\n     (-chsk-disconnect! [chsk reason]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl reason)))\n\n     ;; Possibly reset impl type:\n     (-chsk-reconnect! [chsk]\n       (when-let [impl @impl_]\n         (-chsk-disconnect! impl :requested-reconnect)\n         (-chsk-connect!    chsk)))\n\n     (-chsk-send! [chsk ev opts]\n       (if-let [impl @impl_]\n         (-chsk-send! impl ev opts)\n         (let [{?cb :cb} opts\n               ?cb-fn (cb-chan-as-fn ?cb ev)]\n           (chsk-send->closed! ?cb-fn))))\n\n     (-chsk-connect! [chsk]\n       ;; Starting with a simple downgrade-only strategy here as a proof of concept\n       ;; TODO Later consider smarter downgrade or downgrade+upgrade strategies?\n       (let [ajax-chsk-opts (assoc ajax-chsk-opts :state_ state_)\n               ws-chsk-opts (assoc   ws-chsk-opts :state_ state_)\n\n             ajax-conn!\n             (fn []\n               ;; Remove :auto->:ajax downgrade watch\n               (remove-watch state_ :chsk/auto-ajax-downgrade)\n               (-chsk-connect! (new-ChAjaxSocket ajax-chsk-opts (:csrf-token @state_))))\n\n             ws-conn!\n             (fn []\n               ;; Configure :auto->:ajax downgrade watch\n               (let [downgraded?_ (atom false)]\n                 (add-watch state_ :chsk/auto-ajax-downgrade\n                   (fn [_ _ old-state new-state]\n                     (when-let [impl @impl_]\n                       (when-let [ever-opened?_ (:ever-opened?_ impl)]\n                         (when-not @ever-opened?_\n                           (when (:last-ws-error new-state)\n                             (when (compare-and-set! downgraded?_ false true)\n                               (warnf \"Permanently downgrading :auto chsk -> :ajax\")\n                               (-chsk-disconnect! impl :downgrading-ws-to-ajax)\n                               (reset! impl_ (ajax-conn!))))))))))\n\n               (-chsk-connect! (new-ChWebSocket ws-chsk-opts (:csrf-token @state_))))]\n\n         (reset! impl_ (or (ws-conn!) (ajax-conn!)))\n         chsk))))\n\n#?(:cljs\n   (defn- new-ChAutoSocket [opts csrf-token]\n     (map->ChAutoSocket\n       (merge\n         {:state_ (atom {:type :auto :open? false :ever-opened? false :csrf-token csrf-token})\n          :impl_  (atom nil)}\n         opts))))\n\n#?(:cljs\n   (defn- get-chsk-url [protocol host path type]\n     (let [protocol (case protocol :http \"http:\" :https \"https:\" protocol)\n           protocol (have [:el #{\"http:\" \"https:\"}] protocol)\n           protocol (case type\n                      :ajax     protocol\n                      :ws (case protocol \"https:\" \"wss:\" \"http:\" \"ws:\"))]\n       (str protocol \"//\" (enc/path host path)))))\n\n#?(:cljs\n   (defn make-channel-socket-client!\n     \"Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.\"\n\n     [path ?csrf-token &\n      [{:keys [type protocol host port params recv-buf-or-n packer ws-kalive-ms\n               client-id ajax-opts wrap-recv-evs? backoff-ms-fn]\n        :as   opts\n        :or   {type           :auto\n               recv-buf-or-n  (async/sliding-buffer 2048) ; Mostly for buffered-evs\n               packer         :edn\n               client-id      (or (:client-uuid opts) ; Backwards compatibility\n                                  (enc/uuid-str))\n               wrap-recv-evs? true\n               backoff-ms-fn  enc/exp-backoff\n               ws-kalive-ms   (enc/ms :secs 20)}}\n\n       _deprecated-more-opts]]\n\n     (have? [:in #{:ajax :ws :auto}] type)\n     (have? enc/nblank-str? client-id)\n\n     (when (not (nil? _deprecated-more-opts)) (warnf \"`make-channel-socket-client!` fn signature CHANGED with Sente v0.10.0.\"))\n     (when (contains? opts :lp-timeout) (warnf \":lp-timeout opt has CHANGED; please use :lp-timout-ms.\"))\n\n     (when (or (not (string? ?csrf-token)) (str/blank? ?csrf-token))\n       (warnf \"WARNING: no CSRF token provided. Connections will FAIL if server-side CSRF check is enabled (as it is by default).\"))\n\n     (let [packer (coerce-packer packer)\n\n           [ws-url ajax-url]\n           (let [;; Not available with React Native, etc.:\n                 win-loc  (enc/get-win-loc)\n                 path     (or path (:pathname win-loc))]\n\n             (if-let [f (:chsk-url-fn opts)] ; Deprecated\n               [(f path win-loc :ws)\n                (f path win-loc :ajax)]\n\n               (let [protocol (or protocol (:protocol win-loc) :http)\n                     host     (if port\n                                (str (:hostname win-loc) \":\" port)\n                                (do  (:host     win-loc)))]\n                 [(get-chsk-url protocol host path :ws)\n                  (get-chsk-url protocol host path :ajax)])))\n\n           private-chs\n           {:internal (chan (async/sliding-buffer 128))\n            :state    (chan (async/sliding-buffer 10))\n            :<server\n            (let [;; Nb must be >= max expected buffered-evs size:\n                  buf (async/sliding-buffer 512)]\n              (if wrap-recv-evs?\n                (chan buf (map (fn [ev] [:chsk/recv ev])))\n                (chan buf)))}\n\n           common-chsk-opts\n           {:client-id    client-id\n            :chs          private-chs\n            :params       params\n            :packer       packer\n            :ws-kalive-ms ws-kalive-ms}\n\n           ws-chsk-opts\n           (merge common-chsk-opts\n             {:url           ws-url\n              :backoff-ms-fn backoff-ms-fn})\n\n           ajax-chsk-opts\n           (merge common-chsk-opts\n             {:url           ajax-url\n              :ajax-opts     ajax-opts\n              :backoff-ms-fn backoff-ms-fn})\n\n           auto-chsk-opts\n           {:ws-chsk-opts   ws-chsk-opts\n            :ajax-chsk-opts ajax-chsk-opts}\n\n           ?chsk\n           (-chsk-connect!\n             (case type\n               :ws   (new-ChWebSocket    ws-chsk-opts ?csrf-token)\n               :ajax (new-ChAjaxSocket ajax-chsk-opts ?csrf-token)\n               :auto (new-ChAutoSocket auto-chsk-opts ?csrf-token)))]\n\n       (if-let [chsk ?chsk]\n         (let [chsk-state_ (:state_ chsk)\n               internal-ch (:internal private-chs)\n               send-fn (partial chsk-send! chsk)\n               ev-ch\n               (async/merge\n                 [(:internal private-chs)\n                  (:state    private-chs)\n                  (:<server  private-chs)]\n                 recv-buf-or-n)\n\n               ev-msg-ch\n               (async/chan 1\n                 (map\n                   (fn [ev]\n                     (let [[ev-id ev-?data :as ev] (as-event ev)]\n                       {;; Allow client to inject into router for handler:\n                        :ch-recv internal-ch\n                        :send-fn send-fn\n                        :state   chsk-state_\n                        :event   ev\n                        :id      ev-id\n                        :?data   ev-?data}))))]\n\n           (async/pipe ev-ch ev-msg-ch)\n\n           {:chsk    chsk\n            :ch-recv ev-msg-ch\n            :send-fn send-fn\n            :state   (:state_ chsk)})\n\n         (warnf \"Failed to create channel socket\")))))\n\n;;;; Event-msg routers (handler loops)\n\n(defn- -start-chsk-router!\n  [server? ch-recv event-msg-handler opts]\n  (let [{:keys [trace-evs? error-handler simple-auto-threading?]} opts\n        ch-ctrl (chan)\n\n        execute1\n        #?(:cljs (fn [f] (f))\n           :clj\n           (if simple-auto-threading?\n             (fn [f] (future-call f))\n             (fn [f] (f))))]\n\n    (go-loop []\n      (let [[v p] (async/alts! [ch-recv ch-ctrl])\n            stop? (or (= p ch-ctrl) (nil? v))]\n\n        (when-not stop?\n          (let [{:as event-msg :keys [event]} v]\n\n            (execute1\n              (fn []\n                (enc/catching\n                  (do\n                    (when trace-evs? (tracef \"Pre-handler event: %s\" event))\n                    (event-msg-handler\n                      (if server?\n                        (have! server-event-msg? event-msg)\n                        (have! client-event-msg? event-msg))))\n                  e1\n                  (enc/catching\n                    (if-let [eh error-handler]\n                      (error-handler e1 event-msg)\n                       (errorf e1 \"Chsk router `event-msg-handler` error: %s\" event))\n                    e2 (errorf e2 \"Chsk router `error-handler` error: %s\"     event)))))\n\n            (recur)))))\n\n    (fn stop! [] (async/close! ch-ctrl))))\n\n(defn start-server-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler simple-auto-threading?]}]]\n  (-start-chsk-router! :server ch-recv event-msg-handler opts))\n\n(defn start-client-chsk-router!\n  \"Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\"\n  [ch-recv event-msg-handler &\n   [{:as opts :keys [trace-evs? error-handler]}]]\n  (-start-chsk-router! (not :server) ch-recv event-msg-handler opts))\n\n;;;; Platform aliases\n\n(def event-msg? #?(:clj server-event-msg? :cljs client-event-msg?))\n\n(def make-channel-socket!\n  \"Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details.\"\n  #?(:clj  make-channel-socket-server!\n     :cljs make-channel-socket-client!))\n\n(def start-chsk-router!\n  \"Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details.\"\n  #?(:clj  start-server-chsk-router!\n     :cljs start-client-chsk-router!))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:clj\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-msg-handler ch-recv]\n       (start-server-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev-msg ch-recv])\n         (fn [ev-msg] (event-msg-handler ev-msg (:ch-recv ev-msg))))))\n\n  #?(:cljs\n     (defn start-chsk-router-loop!\n       \"DEPRECATED: Please use `start-chsk-router!` instead\"\n       [event-handler ch-recv]\n       (start-client-chsk-router! ch-recv\n         ;; Old handler form: (fn [ev ch-recv])\n         (fn [ev-msg] (event-handler (:event ev-msg) (:ch-recv ev-msg))))))\n\n  (def set-logging-level! \"DEPRECATED. Please use `timbre/set-level!` instead\" timbre/set-level!)\n\n  #?(:cljs (def ajax-call \"DEPRECATED: Please use `ajax-lite` instead\" enc/ajax-lite))\n  #?(:cljs\n     (def default-chsk-url-fn \"DEPRECATED\"\n       (fn [path {:as location :keys [protocol host pathname]} websocket?]\n         (let [protocol\n               (if websocket?\n                 (if (= protocol \"https:\") \"wss:\" \"ws:\")\n                 protocol)]\n           (str protocol \"//\" host (or path pathname)))))))\n","~:reader-features",["^U",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.sente/sente-version","taoensso.sente/node-target?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*target*","js/taoensso","js/taoensso.sente","js/taoensso.sente.debug-mode?_","taoensso.sente/debug-mode?_","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","taoensso.sente/expected","expected","x","cljs.core/type","taoensso.sente/validate-event","cljs.core/not","G__66963","fexpr__66962","cljs.core/count","vec__66966","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","ev-id","_","cljs.core/Keyword","cljs.core/namespace","taoensso.sente/assert-event","temp__5735__auto__","errs","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2","taoensso.sente/event?","taoensso.sente/as-event","temp__5733__auto__","taoensso.sente/client-event-msg?","and__4120__auto__","cljs.core/map?","taoensso.encore/ks=","map__66983","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","ch-recv","send-fn","state","event","taoensso.encore/chan?","cljs.core/ifn?","taoensso.encore/atom?","taoensso.sente/server-event-msg?","map__67017","connected-uids","ring-req","client-id","?reply-fn","taoensso.encore/nblank-str?","p__67019","map__67020","taoensso.sente/put-server-event-msg>ch-recv!","ev-msg","vec__67023","ev-?data","valid-event","ev-msg*","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2","taoensso.sente/cb-error?","cb-reply-clj","fexpr__67029","taoensso.sente/cb-success?","taoensso.sente/unpack","packer","prefixed-pstr","taoensso.truss.impl/-invar-violation!","vec__67034","wrapped?","taoensso.encore/str-starts-with?","pstr","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","clj","e67037","taoensso.sente.interfaces/unpack","t","?cb-uuid","var_args","G__67040","taoensso.sente/pack","js/Error","taoensso.sente.interfaces/pack","wrapped-clj","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","taoensso.sente/EdnPacker","taoensso.sente/->EdnPacker","taoensso.encore.pr_edn.cljs$core$IFn$_invoke$arity$1","s","taoensso.encore.read_edn.cljs$core$IFn$_invoke$arity$1","taoensso.sente/default-edn-packer","taoensso.sente/coerce-packer","e","fexpr__67049","p1__67046#","taoensso.truss.impl/-dummy-error","e67047","cljs.core/native-satisfies?","taoensso.sente.interfaces/IPacker","taoensso.sente/next-idx!","taoensso.encore/idx-fn","p__67054","map__67057","taoensso.sente/bad-origin?","allowed-origins","headers","origin","referer","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core/contains?","cljs.core/set","p1__67053#","taoensso.encore/rsome","clojure.string/starts-with?","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","taoensso.sente/make-channel-socket-server!","p__67072","vec__67073","map__67076","seq67068","G__67069","cljs.core/first","cljs.core/next","self__4717__auto__","web-server-ch-adapter","recv-buf-or-n","ws-kalive-ms","lp-timeout-ms","send-buf-ms-ajax","send-buf-ms-ws","user-id-fn","bad-csrf-fn","bad-origin-fn","csrf-token-fn","handshake-data-fn","cljs.core.async/sliding-buffer","taoensso.encore.ms.cljs$core$IFn$_invoke$arity$variadic","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","_ring-req","or__4131__auto__","e67078","e67079","taoensso.encore/pos-int?","fexpr__67082","p1__67061#","e67080","taoensso.sente.interfaces/IServerChanAdapter","max-ms","taoensso.sente/default-client-side-ajax-timeout-ms","fexpr__67087","fexpr__67089","cljs.core/set?","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","G__67091","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","conns_","send-buffers_","connected-uids_","upd-conn!","conn-type","uid","taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$3","?v","vec__67093","?sch","_udt","new-udt","taoensso.encore/now-udt","taoensso.encore/swapped","new-?sch","connect-uid!","taoensso.truss.impl/some?","e67100","newly-connected?","p__67101","map__67102","ws","ajax","any","old-m","new-m","G__67105","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","old-any","new-any","upd-connected-uid!","e67106","newly-disconnected?","p__67107","map__67108","cljs.core/deref","conns'","any-ws-clients?","any-ajax-clients?","any-clients?","cljs.core.disj.cljs$core$IFn$_invoke$arity$2","p__67114","vec__67115","map__67118","user-id","ev","opts","flush?","ev-uuid","taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$0","flush-buffer!","pulled","m","vec__67120","ev-uuids","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","vec__67123","buffered-evs","buffered-evs-ppstr","taoensso.sente.pack.cljs$core$IFn$_invoke$arity$2","G__67126","taoensso.sente/send-buffered-server-evs>ws-clients!","taoensso.sente/send-buffered-server-evs>ajax-clients!","seq__67131","cljs.core/seq","chunk__67132","count__67133","i__67134","vec__67144","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","vec__67150","cljs.core/vals","sch","taoensso.sente.interfaces/sch-close!","seq__67153","chunk__67154","count__67155","i__67156","vec__67169","vec__67172","seq__67175","chunk__67176","count__67177","i__67178","vec__67185","vec__67188","ws-timeout","cljs.core.async/timeout","ajax-timeout","c__65686__auto__","cljs.core.async.impl.dispatch/run","f__65687__auto__","switch__65663__auto__","state_67197","state_val_67198","cljs.core.async.impl.ioc-helpers/take!","inst_67192","inst_67193","statearr-67203","cljs.core.async.impl.ioc-helpers/return-chan","statearr-67204","state-machine__65664__auto__","ret-value__65665__auto__","result__65666__auto__","cljs.core/keyword-identical?","e67206","js/Object","ex__65667__auto__","statearr-67207","cljs.core.async.impl.ioc-helpers/process-exception","state__65688__auto__","statearr-67208","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","state_67214","state_val_67215","inst_67211","inst_67212","statearr-67218","statearr-67219","e67221","statearr-67222","statearr-67224","bad-csrf?","reference-csrf-token","csrf-token-from-client","taoensso.encore/const-str=","ev-msg-const","taoensso.sente.interfaces/ring-req->server-ch-resp","server-ch","websocket?","vec__67227","params","ppstr","has-cb?","reply-fn","replied?_","resp-clj","cljs.core/compare-and-set!","taoensso.sente.interfaces/sch-send!","ms","state_67235","state_val_67236","inst_67230","inst_67232","inst_67233","G__67238","statearr-67239","statearr-67240","e67241","statearr-67242","statearr-67245","G__67246","sch-uuid","taoensso.encore.uuid_str.cljs$core$IFn$_invoke$arity$1","receive-event-msg!","taoensso$sente$self.cljs$core$IFn$_invoke$arity$2","send-handshake!","?handshake-data","handshake-ev","clojure.string/blank?","err-msg","updated-conn","upd_conn_BANG_.cljs$core$IFn$_invoke$arity$4","udt-open","receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$1","state_67289","state_val_67290","inst_67285","statearr-67294","inst_67251","statearr-67296","statearr-67297","inst_67262","inst_67255","inst_67257","inst_67258","cljs.core/PersistentVector","inst_67260","inst_67261","statearr-67298","statearr-67300","statearr-67301","inst_67268","inst_67278","statearr-67302","statearr-67303","statearr-67304","inst_67287","statearr-67308","inst_67253","inst_67274","inst_67275","statearr-67309","statearr-67310","inst_67267","inst_67269","statearr-67311","statearr-67312","statearr-67313","inst_67282","statearr-67314","inst_67272","statearr-67315","statearr-67316","statearr-67317","e67320","statearr-67321","statearr-67322","taoensso.sente.interfaces/sch-open?","handshake?","state_67349","state_val_67350","inst_67323","inst_67330","inst_67325","inst_67326","inst_67327","inst_67328","inst_67329","statearr-67351","statearr-67352","statearr-67353","inst_67335","inst_67337","inst_67338","statearr-67354","statearr-67355","statearr-67356","statearr-67357","inst_67347","inst_67340","inst_67341","statearr-67359","statearr-67360","inst_67344","statearr-67361","statearr-67362","e67363","statearr-67364","statearr-67365","req-ppstr","upd_conn_BANG_.cljs$core$IFn$_invoke$arity$3","vec__67366","receive_event_msg_BANG_.cljs$core$IFn$_invoke$arity$2","taoensso.sente.pack.cljs$core$IFn$_invoke$arity$3","_status","udt-close","state_67420","state_val_67421","statearr-67422","inst_67369","statearr-67423","statearr-67424","inst_67379","inst_67381","inst_67380","inst_67397","inst_67392","inst_67393","inst_67394","inst_67396","vec__67372","statearr-67428","statearr-67429","statearr-67430","inst_67384","inst_67385","inst_67386","statearr-67431","inst_67406","inst_67407","inst_67408","inst_67409","statearr-67432","inst_67371","inst_67375","inst_67376","inst_67377","inst_67378","inst_67382","statearr-67433","statearr-67434","statearr-67436","inst_67415","statearr-67439","inst_67399","inst_67400","inst_67401","inst_67402","inst_67403","inst_67404","statearr-67441","statearr-67442","statearr-67443","inst_67389","inst_67390","statearr-67444","statearr-67445","statearr-67446","inst_67412","statearr-67447","statearr-67448","inst_67418","statearr-67450","e67451","statearr-67452","statearr-67453","_?sch","udt-t1","disconnect?","p__67395","vec__67425","_sch","?m","cljs.core/empty?","error","buffered-evs-pstr","seq__67455","chunk__67456","count__67457","i__67458","vec__67480","vec__67483","vec__67491","vec__67494","G__67488","G__67489","G__67490","G__67500","G__67501","G__67502","ms-backoffs","client-ids-unsatisfied","cljs.core/keys","state_67553","state_val_67554","inst_67506","inst_67514","inst_67505","inst_67524","inst_67525","cljs.core/PersistentHashSet","inst_67526","statearr-67561","inst_67504","statearr-67562","statearr-67563","statearr-67564","inst_67546","statearr-67565","inst_67531","inst_67537","inst_67538","inst_67539","inst_67521","statearr-67570","statearr-67571","statearr-67572","inst_67551","inst_67549","statearr-67573","inst_67510","inst_67511","inst_67512","inst_67513","inst_67515","fexpr__67580","taoensso.truss.impl/non-throwing","inst_67516","statearr-67581","statearr-67582","statearr-67583","statearr-67584","inst_67529","inst_67530","statearr-67585","statearr-67586","statearr-67587","inst_67519","statearr-67591","statearr-67592","inst_67541","inst_67542","statearr-67593","statearr-67594","inst_67533","inst_67534","statearr-67595","statearr-67596","statearr-67597","statearr-67598","e67599","statearr-67600","statearr-67601","n","client-ids-satisfied","?pulled","ks-to-pull","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","k","vec__67575","udt","cljs.core/select-keys","cljs.core/reduce-kv","p__67523","vec__67555","sent?","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/complement","cljs.core/rand-int","taoensso.sente/ajax-lite","taoensso.encore/ajax-lite","x__4433__auto__","m__4434__auto__","taoensso.sente/-chsk-connect!","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","taoensso.sente/-chsk-disconnect!","taoensso.sente/-chsk-reconnect!","taoensso.sente/-chsk-send!","taoensso.sente/IChSocket","chsk","reason","taoensso.sente/chsk-connect!","taoensso.sente/chsk-disconnect!","taoensso.sente/chsk-reconnect!","taoensso.sente/chsk-destroy!","G__67621","taoensso.sente/chsk-send!","taoensso.sente.chsk_send_BANG_.cljs$core$IFn$_invoke$arity$3","?timeout-ms","?cb","cljs.core/boolean","taoensso.sente/chsk-send->closed!","?cb-fn","G__67636","taoensso.sente/assert-send-args","taoensso.encore/nat-int?","taoensso.sente/pull-unused-cb-fn!","cbs-waiting_","cb-uuid","?f","taoensso.sente/swap-chsk-state!","f","vec__67650","old-state","new-state","taoensso.encore.swap_in_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","output","taoensso.sente/chsk-state->closed","e67654","fexpr__67657","G__67658","taoensso.truss.impl/set*","e67655","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","taoensso.sente/cb-chan-as-fn","e67666","vec__67667","cb-ch","reply","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","taoensso.encore/as-qname","taoensso.sente/receive-buffered-evs!","chs","seq__67671","chunk__67672","count__67673","i__67674","vec__67682","vec__67688","id","taoensso.sente/handshake?","vec__67695","x1","taoensso.sente/receive-handshake!","chsk-type","fexpr__67702","G__67704","e67699","e67705","vec__67707","vec__67710","map__67713","?uid","ever-opened?_","first-handshake?","p1__67698#","taoensso.sente/?node-npm-websocket_","js/require","e67718","this__4385__auto__","k__4386__auto__","this__4387__auto__","k67729","else__4388__auto__","G__67736","url","state_","instance-handle_","retry-count_","backoff-ms-fn","socket_","udt-last-comms_","__extmap","this__4404__auto__","f__4405__auto__","init__4406__auto__","ret__4407__auto__","p__67737","vec__67738","k__4408__auto__","v__4409__auto__","this__4399__auto__","writer__4400__auto__","opts__4401__auto__","pr-pair__4402__auto__","keyval__4403__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","G__67728","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4383__auto__","__meta","this__4380__auto__","__hash","this__4389__auto__","this__4381__auto__","h__4243__auto__","fexpr__67741","coll__4382__auto__","cljs.core/hash-unordered-coll","this67730","other67731","this__4394__auto__","k__4395__auto__","cljs.core/-with-meta","cljs.core/not-empty","this__4392__auto__","k__4393__auto__","pred__67742","expr__67743","G__67745","G__67746","G__67747","G__67748","G__67749","G__67750","G__67751","G__67752","G__67753","G__67754","G__67755","G__67756","G__67757","G__67758","G__67759","G__67760","G__67761","G__67762","G__67763","G__67764","G__67765","G__67766","G__67767","G__67768","G__67769","G__67770","G__67771","G__67772","this__4397__auto__","cljs.core/MapEntry","this__4384__auto__","this__4390__auto__","entry__4391__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","taoensso.sente/ChWebSocket","this__4428__auto__","cljs.core/List","writer__4429__auto__","G__67735","extmap__4424__auto__","G__67901","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","taoensso.sente/->ChWebSocket","taoensso.sente/map->ChWebSocket","cljs.core/reset!","p1__67719#","map__67774","taoensso.encore.reset_in_BANG_.cljs$core$IFn$_invoke$arity$3","e67777","timeout-ms","state_67788","state_val_67789","inst_67778","inst_67781","inst_67780","statearr-67793","statearr-67794","statearr-67795","inst_67783","G__67797","statearr-67798","statearr-67799","inst_67786","statearr-67803","e67804","statearr-67805","statearr-67806","e67807","cb-fn*","e67811","G__67813","WebSocket","taoensso.encore.oget.cljs$core$IFn$_invoke$arity$2","goog/global","instance-handle","have-handle?","connect-fn","retry-fn","retry-count*","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","backoff-ms","udt-next-reconnect","p1__67720#","?socket","e67822","taoensso.encore/merge-url-with-query-string","G__67823","ws-ev","e67824","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","last-ws-error","p1__67721#","vec__67825","cb-fn","clean?","code","last-ws-close","p1__67724#","p1__67726#","state_67867","state_val_67868","inst_67862","statearr-67869","statearr-67870","inst_67841","inst_67842","statearr-67874","statearr-67875","statearr-67876","statearr-67877","inst_67864","inst_67838","inst_67839","statearr-67878","statearr-67881","inst_67844","inst_67845","statearr-67883","statearr-67884","inst_67857","statearr-67885","statearr-67886","inst_67847","inst_67848","inst_67849","inst_67850","inst_67851","inst_67852","cljs.core/PersistentHashMap","inst_67853","statearr-67889","statearr-67891","e67892","statearr-67893","statearr-67897","taoensso.sente/new-ChWebSocket","csrf-token","k67912","G__67919","ajax-opts","curr-xhr_","p__67920","vec__67921","G__67911","fexpr__67927","this67913","other67914","pred__67934","expr__67935","G__67937","G__67938","G__67939","G__67940","G__67941","G__67942","G__67943","G__67944","G__67945","G__67946","G__67947","G__67948","G__67949","G__67950","G__67953","G__67954","G__67956","G__67957","G__67958","G__67959","G__67960","G__67961","taoensso.sente/ChAjaxSocket","G__67915","G__67990","taoensso.sente/->ChAjaxSocket","taoensso.sente/map->ChAjaxSocket","p1__67904#","map__67965","G__67968","G__67969","G__67970","p__67973","map__67974","?error","?content","G__67976","p1__67906#","G__67977","vec__67978","content","resp-ppstr","p1__67907#","poll-fn","retry-count","p1__67908#","G__67981","G__67982","G__67983","p__67984","map__67985","p1__67909#","vec__67987","p1__67910#","taoensso.sente/new-ChAjaxSocket","k67992","G__67996","ws-chsk-opts","ajax-chsk-opts","impl_","p__67997","vec__67998","G__67991","fexpr__68001","this67993","other67994","pred__68002","expr__68003","G__68005","G__68006","G__68007","G__68008","G__68009","G__68010","G__68011","G__68012","taoensso.sente/ChAutoSocket","G__67995","G__68015","taoensso.sente/->ChAutoSocket","taoensso.sente/map->ChAutoSocket","impl","map__68013","ajax-conn!","cljs.core/remove-watch","ws-conn!","downgraded?_","cljs.core/add-watch","taoensso.sente/new-ChAutoSocket","taoensso.sente/get-chsk-url","protocol","host","path","type","G__68016","fexpr__68019","G__68020","e68017","G__68021","G__68022","taoensso.encore.path.cljs$core$IFn$_invoke$arity$variadic","taoensso.sente/make-channel-socket-client!","p__68026","vec__68027","map__68030","seq68023","G__68024","G__68025","?csrf-token","port","wrap-recv-evs?","taoensso.encore/exp-backoff","_deprecated-more-opts","fexpr__68034","G__68035","e68032","e68036","vec__68037","ws-url","ajax-url","win-loc","taoensso.encore/get-win-loc","G__68040","G__68041","G__68042","G__68043","G__68044","G__68045","private-chs","buf","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$1","common-chsk-opts","auto-chsk-opts","?chsk","G__68046","chsk-state_","internal-ch","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","ev-ch","cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2","ev-msg-ch","vec__68047","cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2","taoensso.sente/-start-chsk-router!","server?","event-msg-handler","map__68050","trace-evs?","error-handler","simple-auto-threading?","ch-ctrl","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0","execute1","state_68099","state_val_68100","inst_68095","statearr-68101","statearr-68102","inst_68062","inst_68060","inst_68061","inst_68065","inst_68063","inst_68064","statearr-68103","statearr-68104","statearr-68105","statearr-68106","inst_68081","statearr-68107","inst_68070","inst_68071","statearr-68108","statearr-68109","inst_68097","statearr-68110","inst_68056","inst_68057","inst_68058","cljs.core.async/ioc-alts!","statearr-68111","statearr-68112","statearr-68113","inst_68086","statearr-68114","inst_68089","inst_68090","inst_68091","vec__68053","map__68068","inst_68092","statearr-68120","statearr-68121","inst_68084","statearr-68122","statearr-68123","inst_68073","inst_68074","inst_68075","inst_68076","inst_68077","statearr-68124","statearr-68125","statearr-68126","e68127","statearr-68128","statearr-68129","v","p","stop?","event-msg","e68115","G__68117","e68118","e68119","e1","e68116","eh","e2","cljs.core.async/close!","taoensso.sente/start-server-chsk-router!","p__68133","vec__68134","map__68137","seq68130","G__68131","G__68132","taoensso.sente/start-client-chsk-router!","p__68142","vec__68143","map__68146","seq68139","G__68140","G__68141","taoensso.sente/event-msg?","taoensso.sente/make-channel-socket!","taoensso.sente/start-chsk-router!","taoensso.sente/start-chsk-router-loop!","event-handler","G__68148","G__68149","taoensso.sente/set-logging-level!","taoensso.timbre/set-level!","taoensso.sente/ajax-call","taoensso.sente/default-chsk-url-fn","p__68150","map__68151","location","pathname"]]],"~:cache-keys",["~#cmap",[["^1R","goog/dom/tagname.js"],[1597770556544,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^U",[]],"~:deps-syms",["^16","~$goog.dom.HtmlElement"]]],["^1R","goog/async/freelist.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","cljs/core/async/impl/ioc_helpers.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","~$cljs.core.async.impl.protocols"]]],["^1R","goog/labs/useragent/platform.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.labs.userAgent.util","~$goog.string"]]],["~:macro","^15"],[1597770669000],["^1R","taoensso/sente/interfaces.cljc"],[1597770838699,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^L"]]],["^1R","cljs/core/async.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^28","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1R","goog/timer/timer.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.Promise","~$goog.events.EventTarget"]]],["^1R","cljs/tools/reader/impl/utils.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^19","^2:"]]],["^1R","goog/math/math.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","~$goog.asserts"]]],["^1R","goog/string/stringformat.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2:"]]],["^1R","goog/events/eventtype.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1R","goog/labs/useragent/browser.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^29","~$goog.object","~$goog.string.internal"]]],["^2;","^F"],[1597770838000],["^1R","goog/array/array.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D"]]],["^2;","^J"],[1597770838000],["^1R","goog/useragent/useragent.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^29","~$goog.reflect","^2:"]]],["^1R","goog/structs/prioritypool.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^2;","~$cljs.tools.reader.reader-types"],[1597770172000],["^1R","goog/async/run.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^1R","taoensso/encore.cljs"],[1597770838792,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^19","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^2G","^2:","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^1R","goog/debug/error.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/async/workqueue.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","~$goog.async.FreeList"]]],["^1R","goog/events/events.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2E","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1R","goog/promise/resolver.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/events/browserfeature.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2F"]]],["^1R","cljs/tools/reader/edn.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","~$cljs.tools.reader.impl.errors","^2O","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2:","^2W"]]],["^1R","goog/structs/priorityqueue.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.structs.Heap"]]],["^1R","goog/net/xhrio.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.Timer","^2A","^2D","^34","^2C","~$goog.json.hybrid","~$goog.log","^31","^30","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^2G","^2:","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^2F"]]],["^1R","goog/promise/thenable.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","taoensso/sente.cljc"],[1597770838699,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^19","^14","^L","^H","^12"]]],["^1R","goog/dom/nodetype.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^2;","^H"],[1597770838000],["^1R","cljs/tools/reader/impl/inspect.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15"]]],["^1R","cljs/tools/reader.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2O","^39","^3:","^38","^2A","^2:","^2W"]]],["^1R","goog/net/wrapperxmlhttpfactory.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1R","goog/events/eventtarget.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.Disposable","^2D","^2X","~$goog.events.Event","^36","^37","^2G"]]],["^1R","goog/disposable/disposable.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.disposable.IDisposable"]]],["^1R","goog/object/object.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/structs/set.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^3B","~$goog.structs.Collection","^3C"]]],"~:SHADOW-TIMESTAMP",[1597770557000,1597770669000],["^1R","goog/math/long.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","^2L"]]],["^1R","goog/events/listener.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.events.ListenableKey"]]],["^1R","cljs/core/async/impl/channels.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^28","^2?","^2="]]],["^1R","goog/events/listenermap.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","~$goog.events.Listener","^2G"]]],["^1R","goog/events/eventid.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","taoensso/truss.cljs"],[1597770838672,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","~$taoensso.truss.impl"]]],["^1R","goog/string/internal.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/functions/functions.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","cljs/core/async/impl/dispatch.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2=","^2Q"]]],["^1R","taoensso/truss/impl.cljs"],[1597770838672,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2S"]]],["^1R","cljs/core/async/impl/protocols.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15"]]],["^1R","goog/net/eventtype.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/structs/map.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1R","goog/net/xhriopool.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2Y","~$goog.structs.PriorityPool"]]],["^1R","goog/structs/queue.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A"]]],["^1R","goog/labs/useragent/engine.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^29","^2:"]]],["^1R","taoensso/timbre/appenders/core.cljs"],[1597770838703,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^19","^L"]]],["^1R","cljs/reader.cljs"],[1597770669034,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2G","^3;","^2U","^2W"]]],["^1R","goog/asserts/asserts.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1R","cljs/core/async/impl/buffers.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^28"]]],["^1R","goog/debug/logbuffer.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","~$goog.debug.LogRecord"]]],["^2;","^L"],[1597770838000],["^1R","goog/uri/uri.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2D","^2:","^3B","^3C","^3D","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1R","goog/net/errorcode.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^2;","^14"],[1597770838000],["^1R","goog/disposable/idisposable.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/promise/promise.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","~$goog.Thenable","^2D","^33","~$goog.async.run","^2R","^3R","~$goog.promise.Resolver"]]],["^1R","cljs/core/async/impl/timers.cljs"],[1597770838376,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^28","^2<","^2?"]]],["^1R","goog/debug/logrecord.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/base.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",[]]],["^1R","goog/json/hybrid.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","~$goog.json"]]],["^1R","goog/structs/structs.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2G"]]],["^1R","cljs/tools/reader/impl/errors.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2O","^19","~$cljs.tools.reader.impl.inspect"]]],["^1R","clojure/string.cljs"],[1597770669034,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^2:","^2W"]]],["^1R","goog/structs/pool.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^3G","~$goog.structs.Queue","~$goog.structs.Set"]]],["^1R","goog/net/httpstatus.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/structs/heap.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2G","~$goog.structs.Node"]]],["^1R","goog/debug/entrypointregistry.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D"]]],["^1R","goog/string/string.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2H"]]],["^1R","goog/reflect/reflect.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/labs/useragent/util.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2H"]]],["^2;","~$cljs.core.async.impl.ioc-macros"],[1597770838000],["^1R","goog/debug/debug.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","~$goog.debug.errorcontext","^2F"]]],["^1R","goog/string/stringbuffer.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/debug/errorcontext.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","cljs/tools/reader/reader_types.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^39","^2:","^2W"]]],["^1R","goog/iter/iter.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2D","~$goog.functions","~$goog.math"]]],["^1R","goog/async/nexttick.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^34","~$goog.dom.TagName","^45","^2I","^2J"]]],["^1R","goog/debug/logger.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2D","~$goog.debug","~$goog.debug.LogBuffer","^3T"]]],["^1R","goog/events/event.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^3G","~$goog.events.EventId"]]],["^1R","cljs/tools/reader/impl/commons.cljs"],[1597770172355,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^38","^2O","^39"]]],["^1R","goog/dom/htmlelement.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","cljs/core.cljs"],[1597770669034,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["~$goog.math.Long","~$goog.math.Integer","^2:","^2G","^2A","~$goog.Uri","^2W"]]],["^1R","goog/log/log.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^48","~$goog.debug.LogManager","^3T","~$goog.debug.Logger"]]],["^1R","goog/structs/collection.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/events/browserevent.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^48","^2E","^3H","~$goog.events.EventType","^2L","^2F"]]],["^1R","goog/math/integer.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/structs/node.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^2;","^3N"],[1597770838000],["^1R","clojure/set.cljs"],[1597770669034,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15"]]],["^1R","goog/uri/utils.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2A","^2D","^2:"]]],["^1R","taoensso/timbre.cljs"],[1597770838703,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^15","^19","^L","~$taoensso.timbre.appenders.core"]]],["^1R","goog/json/json.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^1R","goog/events/listenable.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^4:"]]],["^1R","goog/net/xmlhttpfactory.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^3E"]]],["^1R","goog/net/xmlhttp.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16","^2D","~$goog.net.WrapperXmlHttpFactory","^3F"]]],["^1R","goog/net/xhrlike.js"],[1597770556544,"^23",["^ ","^24",null,"^25",["^U",[]],"^26",["^16"]]],["^2;","^2T"],[1597770669000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Channel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> nil[4] <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n        [:chsk/ws-ping]\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n        [:chsk/ws-ping]\n\n  Channel socket state map:\n    :type               - e/o #{:auto :ws :ajax}\n    :open?              - Truthy iff chsk appears to be open (connected) now\n    :ever-opened?       - Truthy iff chsk handshake has ever completed successfully\n    :first-open?        - Truthy iff chsk just completed first successful handshake\n    :uid                - User id provided by server on handshake,    or nil\n    :handshake-data     - Arb user data provided by server on handshake\n    :last-ws-error      - ?{:udt _ :ev <WebSocket-on-error-event>}\n    :last-ws-close      - ?{:udt _ :ev <WebSocket-on-close-event>\n                            :clean? _ :code _ :reason _}\n    :last-close         - ?{:udt _ :reason _}, with reason e/o\n                            #{nil :requested-disconnect :requested-reconnect\n                             :downgrading-ws-to-ajax :unexpected}\n    :udt-next-reconnect - Approximate udt of next scheduled auto-reconnect attempt\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability).\n\n  [4] Used to be a csrf-token. Was removed in v1.14 for security reasons.\n  A `nil` remains for semi-backwards-compatibility with pre-v1.14 clients.","^8","taoensso/sente.cljc","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^U",["taoensso$sente$IChSocket$"]],"^D",["^ ","^E","^F","^G","^H","^I","^J","^K","^L","^M","^J","^N","^L","^O","^L","^P","^H","^Q","^H","^R","^H","^S","^H"],"^T",["^U",[]],"^V",["^ "],"^W","^F","^Z",null,"^[",["^ ","^10","^H","^11","^12","^13","^14","^15","^15","^16","^16","^12","^12","^14","^14","^17","^L","^H","^H","^18","^19","^19","^19","^L","^L"],"^1:",["^U",["^1;","^1<"]],"~:shadow/js-access-global",["^U",["Object","require","Error"]],"^1=",["^ ","^1>","^14","^1?","^14","^1@","^14","^1A","^14","^1B","^L","^1C","^L","^1D","^L","^1E","^L"],"~:defs",["^ ","~$chsk-state->closed",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",892,"^:",11,"^;",892,"^<",29,"~:private",true,"~:arglists",["^1I",["~$quote",["^1I",[["~$state","~$reason"]]]]]],"^4I",true,"^W","~$taoensso.sente/chsk-state->closed","^8","taoensso/sente.cljc","^<",29,"~:method-params",["^1I",[["^4L","^4M"]]],"~:protocol-impl",null,"~:arglists-meta",["^1I",[null,null]],"^:",4,"~:variadic?",false,"^9",892,"~:ret-tag",["^U",[null,"~$clj","~$any"]],"^;",892,"~:max-fixed-arity",2,"~:fn-var",true,"^4J",["^1I",["^4K",["^1I",[["^4L","^4M"]]]]]],"~$assert-send-args",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",851,"^:",11,"^;",851,"^<",27,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^4I",true,"^W","~$taoensso.sente/assert-send-args","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["~$x","^4Y","^4Z"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",851,"^4S","~$clj-nil","^;",851,"^4V",3,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x","^4Y","^4Z"]]]]]],"~$map->ChAjaxSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"~:internal-ctor",true,"~:factory","~:map","^9",1199,"^;",1199,"^4J",["^1I",["^4K",["^1I",[["~$G__67915"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"^W","~$taoensso.sente/map->ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^55"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^54","^9",1199,"^4S","~$taoensso.sente/ChAjaxSocket","^;",1199,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^55"]]]]],"^7","Factory function for taoensso.sente/ChAjaxSocket, taking a map of keywords to field values."],"~$sente-version",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",109,"^:",6,"^;",109,"^<",19],"^W","~$taoensso.sente/sente-version","^8","taoensso/sente.cljc","^<",19,"^:",1,"^9",109,"^;",109,"~:tag","~$cljs.core/IVector","^7","Useful for identifying client/server mismatch"],"~$->EdnPacker",["^ ","^4H",null,"^5",["^ ","~:protocols",["^U",["~$taoensso.sente.interfaces/IPacker"]],"^8","taoensso/sente.cljc","^<",19,"^:",10,"^53","~:positional","^9",235,"^;",235,"^4J",["^1I",["^4K",["^1I",[[]]]]],"~:skip-protocol-flag",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"^5=",["^U",["^5>"]],"^W","~$taoensso.sente/->EdnPacker","^8","taoensso/sente.cljc","^<",19,"^4O",["^1I",[[]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^53","^5?","^9",235,"^4S","~$taoensso.sente/EdnPacker","^;",235,"^4V",0,"^4W",true,"^4J",["^1I",["^4K",["^1I",[[]]]]],"^5@",null,"^7","Positional factory function for taoensso.sente/EdnPacker."],"~$as-event",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",145,"^:",7,"^;",145,"^<",15,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"^W","~$taoensso.sente/as-event","^8","taoensso/sente.cljc","^<",15,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",145,"^4S",["^U",[null,"^5;"]],"^;",145,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",162,"^:",7,"^;",162,"^<",24,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"^W","~$taoensso.sente/server-event-msg?","^8","taoensso/sente.cljc","^<",24,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",162,"^4S","~$boolean","^;",162,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",751,"^:",8,"^;",751,"^<",44,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^4I",true,"^W","~$taoensso.sente/send-buffered-server-evs>ws-clients!","^8","taoensso/sente.cljc","^<",44,"^4O",["^1I",[["^5I","^5J","^5K","^5L"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",751,"^4S","^50","^;",751,"^4V",4,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5I","^5J","^5K","^5L"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^4H",null,"^5",["^ ","^4I",true,"^8","taoensso/sente.cljc","^<",12,"~:top-fn",["^ ","^4R",false,"~:fixed-arity",3,"^4V",3,"^4O",["^1I",[["~$packer","^4T"],["^5Q","^4T","~$?cb-uuid"]]],"^4J",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]],"^4Q",["^1I",[null,null]]],"^:",8,"^9",219,"^;",219,"^4J",["^1I",["^4K",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]]]],"^7","clj->prefixed-pstr"],"^4I",true,"^W","~$taoensso.sente/pack","^8","taoensso/sente.cljc","^<",12,"^5O",["^ ","^4R",false,"^5P",3,"^4V",3,"^4O",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]],"^4J",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]],"^4Q",["^1I",[null,null]]],"^4O",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]],"^4P",null,"^5P",3,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"~:methods",[["^ ","^5P",2,"^4R",false,"^5:","~$string"],["^ ","^5P",3,"^4R",false,"^5:","^5U"]],"^9",219,"^;",219,"^4V",3,"^4W",true,"^4J",["^1I",[["^5Q","^4T"],["^5Q","^4T","^5R"]]],"^7","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",835,"^:",10,"^;",835,"^<",20,"^4J",["^1I",["^4K",["^1I",[["~$chsk","~$ev"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","~$opts"]]]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^5O",["^ ","^4R",false,"^5P",4,"^4V",4,"^4O",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^4J",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^4Q",["^1I",[null,null,null]]]],"^W","~$taoensso.sente/chsk-send!","^8","taoensso/sente.cljc","^<",20,"^5O",["^ ","^4R",false,"^5P",4,"^4V",4,"^4O",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^4J",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^4Q",["^1I",[null,null,null]]],"^4O",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^4P",null,"^5P",4,"^4Q",["^1I",[null,null,null]],"^:",4,"^4R",false,"^5T",[["^ ","^5P",2,"^4R",false,"^5:","^4U"],["^ ","^5P",4,"^4R",false,"^5:","^4U"],["^ ","^5P",3,"^4R",false,"^5:","^4U"]],"^9",835,"^;",835,"^4V",4,"^4W",true,"^4J",["^1I",[["^5W","^5X"],["^5W","^5X","^4Y","^4Z"],["^5W","^5X","^5Y"]]],"^7","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",123,"^:",7,"^;",123,"^<",21,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"^W","~$taoensso.sente/validate-event","^8","taoensso/sente.cljc","^<",21,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",123,"^4S",["^U",["~$cljs.core/IMap","^50"]],"^;",123,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Returns nil if given argument is a valid [ev-id ?ev-data] form. Otherwise\n  returns a map of validation errors like `{:wrong-type {:expected _ :actual _}}`."],"~$event?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",144,"^:",7,"^;",144,"^<",13,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"^W","~$taoensso.sente/event?","^8","taoensso/sente.cljc","^<",13,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",144,"^4S","^5G","^;",144,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^W","~$taoensso.sente/event-msg?","^8","taoensso/sente.cljc","^9",1656,"^:",1,"^;",1656,"^<",16,"^5",["^ ","^8","taoensso/sente.cljc","^9",1656,"^:",6,"^;",1656,"^<",16]],"~$make-channel-socket!",["^ ","^W","~$taoensso.sente/make-channel-socket!","^8","taoensso/sente.cljc","^9",1658,"^:",1,"^;",1658,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1658,"^:",6,"^;",1658,"^<",26],"^7","Platform-specific alias for `make-channel-socket-server!` or\n  `make-channel-socket-client!`. Please see the appropriate aliased fn\n   docstring for details."],"~$make-channel-socket-server!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",291,"^:",7,"^;",291,"^<",34,"^4J",["^1I",["^4K",["^1I",[["~$web-server-ch-adapter","~$&",[["^ ","~:keys",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$bad-csrf-fn","~$bad-origin-fn","~$csrf-token-fn","~$handshake-data-fn","^5Q","~$allowed-origins"],"~:or",["^ ","^6<",["^1I",["~$enc/ms","~:secs",25]],"^6?",30,"^6E","~:all","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["~$fn",["~$ring-req"],["^1I",["~$or",["^1I",["~:anti-forgery-token","^6K"]],["^1I",["~$get-in","^6K",["~:session","~:csrf-token"]]],["^1I",["^6N","^6K",["^6O","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","~:edn","^6>",100,"^6B",["^1I",["^6J",["~$_ring-req"],["^ ","~:status",403,"~:body","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","~:uid"]]]]],"^6;",["^1I",["~$async/sliding-buffer",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^5O",["^ ","^4R",true,"^5P",1,"^4V",1,"^4O",[["^1I",["^69",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^4J",["^1I",[["^69","~$&",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^4Q",["^1I",[null]]]],"^W","~$taoensso.sente/make-channel-socket-server!","^8","taoensso/sente.cljc","^<",34,"^5O",["^ ","^4R",true,"^5P",1,"^4V",1,"^4O",[["^1I",["^69",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^4J",["^1I",[["^69","~$&",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^4Q",["^1I",[null]]],"^4O",[["^1I",["^69",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^4P",null,"^5P",1,"^4Q",["^1I",[null]],"^:",1,"^4R",true,"^5T",[["^ ","^5P",1,"^4R",true,"^5:","^61"]],"^9",291,"^4S","^4U","^;",291,"^4V",1,"^4W",true,"^4J",["^1I",[["^69","~$&",[["^ ","^6:",["^6;","^6<","^6=","^6>","^6?","^6@","^6A","^6B","^6C","^6D","^5Q","^6E"],"^6F",["^ ","^6<",["^1I",["^6G","^6H",25]],"^6?",30,"^6E","^6I","^6=",["^1I",["^6G","^6H",20]],"^6C",["^1I",["^6J",["^6K"],["^1I",["^6L",["^1I",["^6M","^6K"]],["^1I",["^6N","^6K",["^6O","^6P"]]],["^1I",["^6N","^6K",["^6O","^6Q"]]],["^1I",["^6N","^6K",["^6O","__anti-forgery-token"]]]]]]],"^5Q","^6R","^6>",100,"^6B",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Unauthorized origin"]]],"^6D",["^1I",["^6J",["^6K"],null]],"^6@",["^1I",["^6J",["^6K"],["^1I",["^6N","^6K",["^6O","^6V"]]]]],"^6;",["^1I",["^6W",1000]],"^6A",["^1I",["^6J",["^6S"],["^ ","^6T",403,"^6U","Bad CSRF token"]]]]]]]]],"^7","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ;  (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; ?(fn [ring-req]) -> CSRF-token for Ajax POSTs and WS handshake.\n                       ;                     CSRF check will be skipped iff nil (NOT RECOMMENDED!).\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to client's :ws-kalive-ms.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n    :allowed-origins   ; e.g. #{\"http://site.com\" ...}, defaults to :all. ; Alpha\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$node-target?",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",112,"^:",25,"^;",112,"^<",37,"^4I",true],"^4I",true,"^W","~$taoensso.sente/node-target?","^8","taoensso/sente.cljc","^<",37,"^:",10,"^9",112,"^;",112,"^5:","^5G"],"~$ajax-lite",["^ ","^W","~$taoensso.sente/ajax-lite","^8","taoensso/sente.cljc","^9",818,"^:",10,"^;",818,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",818,"^:",15,"^;",818,"^<",24],"^7","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1438,"^:",11,"^;",1438,"^<",23,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$protocol","~$host","~$path","~$type"]]]]]],"^4I",true,"^W","~$taoensso.sente/get-chsk-url","^8","taoensso/sente.cljc","^<",23,"^4O",["^1I",[["^72","^73","^74","^75"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",1438,"^4S","^5U","^;",1438,"^4V",4,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^72","^73","^74","^75"]]]]]],"~$-chsk-send!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",824,"^:",7,"^;",824,"^<",18,"~:protocol","~$taoensso.sente/IChSocket","^7",null,"^4J",["^1I",["^4K",["^1I",[["^5W","^5X","^5Y"]]]]]],"^78","^79","^W","~$taoensso.sente/-chsk-send!","^8","taoensso/sente.cljc","^<",18,"^4O",["^1I",[["^5W","^5X","^5Y"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",820,"^4S","^4U","^;",824,"^4V",3,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W","^5X","^5Y"]]]]],"^7",null],"~$-chsk-reconnect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",823,"^:",7,"^;",823,"^<",23,"^78","^79","^7",null,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"^78","^79","^W","~$taoensso.sente/-chsk-reconnect!","^8","taoensso/sente.cljc","^<",23,"^4O",["^1I",[["^5W"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",820,"^4S","^4U","^;",823,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]],"^7",null],"~$receive-handshake!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",940,"^:",11,"^;",940,"^<",29,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$chsk-type","^5W","^4T"]]]]]],"^4I",true,"^W","~$taoensso.sente/receive-handshake!","^8","taoensso/sente.cljc","^<",29,"^4O",["^1I",[["^7>","^5W","^4T"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",940,"^4S","~$cljs.core/Keyword","^;",940,"^4V",3,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^7>","^5W","^4T"]]]]]],"~$start-client-chsk-router!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1640,"^:",7,"^;",1640,"^<",32,"^4J",["^1I",["^4K",["^1I",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","^1K","^5Y","^6:",["~$trace-evs?","~$error-handler"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.","^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^4Q",["^1I",[null]]]],"^W","~$taoensso.sente/start-client-chsk-router!","^8","taoensso/sente.cljc","^<",32,"^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^4Q",["^1I",[null]]],"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^4P",null,"^5P",2,"^4Q",["^1I",[null]],"^:",1,"^4R",true,"^5T",[["^ ","^5P",2,"^4R",true,"^5:","~$function"]],"^9",1640,"^4S","^4U","^;",1640,"^4V",2,"^4W",true,"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate."],"~$chsk-destroy!",["^ ","^W","~$taoensso.sente/chsk-destroy!","^8","taoensso/sente.cljc","^9",832,"^:",6,"^;",832,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",832,"^:",11,"^;",832,"^<",24],"^7","Deprecated"],"~$->ChAjaxSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^52",true,"^53","^5?","^9",1199,"^;",1199,"^4J",["^1I",["^4K",["^1I",[["~$client-id","~$chs","~$params","^5Q","~$url","~$state_","~$instance-handle_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"^W","~$taoensso.sente/->ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^7K","^7L","^7M","^5Q","^7N","^7O","^7P","^7Q","^7R","^7S","^7T"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^5?","^9",1199,"^4S","^57","^;",1199,"^4V",11,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^7K","^7L","^7M","^5Q","^7N","^7O","^7P","^7Q","^7R","^7S","^7T"]]]]],"^7","Positional factory function for taoensso.sente/ChAjaxSocket."],"~$send-buffered-server-evs>ajax-clients!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",760,"^:",8,"^;",760,"^<",46,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5I","^5J","^5K"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^4I",true,"^W","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","^8","taoensso/sente.cljc","^<",46,"^4O",["^1I",[["^5I","^5J","^5K"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",760,"^4S",["^U",["^4U","^50"]],"^;",760,"^4V",3,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5I","^5J","^5K"]]]]],"^7","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",1192,"^:",16,"^;",1192,"^<",51,"^4I",true],"^4I",true,"^W","~$taoensso.sente/default-client-side-ajax-timeout-ms","^8","taoensso/sente.cljc","^<",51,"^:",1,"^9",1192,"^;",1192,"^5:","^4U","^7","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^5=",["^U",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^79","^61","~$cljs.core/ILookup"]],"^W","^57","^8","taoensso/sente.cljc","^<",27,"~:type",true,"^:",15,"^52",true,"^9",1199,"~:record",true,"^;",1199,"^5:","^7G","^5@",["^U",["^80","^81","^82","^83","^84","^85","^86","^87","^88","^89","^8:","^8;","^8<","^61","^8="]]],"~$set-logging-level!",["^ ","^W","~$taoensso.sente/set-logging-level!","^8","taoensso/sente.cljc","^9",1691,"^:",3,"^;",1691,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1691,"^:",8,"^;",1691,"^<",26],"^7","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^52",true,"^53","^5?","^9",1371,"^;",1371,"^4J",["^1I",["^4K",["^1I",[["~$ws-chsk-opts","~$ajax-chsk-opts","^7O","~$impl_"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"^W","~$taoensso.sente/->ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^8C","^8D","^7O","^8E"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^5?","^9",1371,"^4S","~$taoensso.sente/ChAutoSocket","^;",1371,"^4V",4,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^8C","^8D","^7O","^8E"]]]]],"^7","Positional factory function for taoensso.sente/ChAutoSocket."],"~$-chsk-disconnect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",822,"^:",7,"^;",822,"^<",24,"^78","^79","^7",null,"^4J",["^1I",["^4K",["^1I",[["^5W","^4M"]]]]]],"^78","^79","^W","~$taoensso.sente/-chsk-disconnect!","^8","taoensso/sente.cljc","^<",24,"^4O",["^1I",[["^5W","^4M"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",820,"^4S","^4U","^;",822,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W","^4M"]]]]],"^7",null],"~$start-chsk-router!",["^ ","^W","~$taoensso.sente/start-chsk-router!","^8","taoensso/sente.cljc","^9",1665,"^:",1,"^;",1665,"^<",24,"^5",["^ ","^8","taoensso/sente.cljc","^9",1665,"^:",6,"^;",1665,"^<",24],"^7","Platform-specific alias for `start-server-chsk-router!` or\n  `start-client-chsk-router!`. Please see the appropriate aliased fn\n  docstring for details."],"~$put-server-event-msg>ch-recv!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",180,"^:",8,"^;",180,"^<",37,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^7B",["^ ","^1K","~$ev-msg","^6:",["~$event","~$?reply-fn"]]]]]]],"^7","All server `event-msg`s go through this"],"^4I",true,"^W","~$taoensso.sente/put-server-event-msg>ch-recv!","^8","taoensso/sente.cljc","^<",37,"^4O",["^1I",[["^7B","~$p__67019"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",180,"^4S",["^U",["^5G","^4U","^50"]],"^;",180,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^7B",["^ ","^1K","^8M","^6:",["^8N","^8O"]]]]]]],"^7","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",242,"^:",8,"^;",242,"^<",21,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"^4I",true,"^W","~$taoensso.sente/coerce-packer","^8","taoensso/sente.cljc","^<",21,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",242,"^4S",["^U",[null,"^4U","^5B","^50"]],"^;",242,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",821,"^:",7,"^;",821,"^<",21,"^78","^79","^7",null,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"^78","^79","^W","~$taoensso.sente/-chsk-connect!","^8","taoensso/sente.cljc","^<",21,"^4O",["^1I",[["^5W"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",820,"^4S","^4U","^;",821,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]],"^7",null],"~$default-edn-packer",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",240,"^:",16,"^;",240,"^<",34,"^4I",true],"^4I",true,"^W","~$taoensso.sente/default-edn-packer","^8","taoensso/sente.cljc","^<",34,"^:",1,"^9",240,"^;",240,"^5:","^5B"],"~$new-ChAjaxSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1361,"^:",11,"^;",1361,"^<",27,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","~$csrf-token"]]]]]],"^4I",true,"^W","~$taoensso.sente/new-ChAjaxSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^5Y","^8Y"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",1361,"^4S","^57","^;",1361,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","^8Y"]]]]]],"~$receive-buffered-evs!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",925,"^:",11,"^;",925,"^<",32,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^7L","^4T"]]]]]],"^4I",true,"^W","~$taoensso.sente/receive-buffered-evs!","^8","taoensso/sente.cljc","^<",32,"^4O",["^1I",[["^7L","^4T"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",925,"^4S","^50","^;",925,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^7L","^4T"]]]]]],"~$chsk-connect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",828,"^:",12,"^;",828,"^<",25,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"^W","~$taoensso.sente/chsk-connect!","^8","taoensso/sente.cljc","^<",25,"^4O",["^1I",[["^5W"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",6,"^4R",false,"^9",828,"^4S","^4U","^;",828,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"~$-start-chsk-router!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1584,"^:",8,"^;",1584,"^<",27,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$server?","^7B","^7C","^5Y"]]]]]],"^4I",true,"^W","~$taoensso.sente/-start-chsk-router!","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^94","^7B","^7C","^5Y"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",1584,"^4S","^7G","^;",1584,"^4V",4,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^94","^7B","^7C","^5Y"]]]]]],"~$EdnPacker",["^ ","^7[",0,"^5=",["^U",["^5>"]],"^W","^5B","^8","taoensso/sente.cljc","^<",19,"^8>",true,"^:",10,"^9",235,"^8?",false,"^;",235,"^5:","^7G","^5@",null],"~$ChAutoSocket",["^ ","^7[",4,"^5=",["^U",["^80","^81","^82","^83","^84","^85","^86","^87","^88","^89","^8:","^8;","^8<","^79","^61","^8="]],"^W","^8G","^8","taoensso/sente.cljc","^<",27,"^8>",true,"^:",15,"^52",true,"^9",1371,"^8?",true,"^;",1371,"^5:","^7G","^5@",["^U",["^80","^81","^82","^83","^84","^85","^86","^87","^88","^89","^8:","^8;","^8<","^61","^8="]]],"~$cb-error?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",193,"^:",16,"^;",193,"^<",25,"^4J",["^1I",["^4K",["^1I",[["~$cb-reply-clj"]]]]]],"^W","~$taoensso.sente/cb-error?","^8","taoensso/sente.cljc","^<",25,"^4O",["^1I",[["^99"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",10,"^4R",false,"^9",193,"^4S","^4U","^;",193,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^99"]]]]]],"~$unpack",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",201,"^:",8,"^;",201,"^<",14,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5Q","~$prefixed-pstr"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"^4I",true,"^W","~$taoensso.sente/unpack","^8","taoensso/sente.cljc","^<",14,"^4O",["^1I",[["^5Q","^9<"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",201,"^4S","^5;","^;",201,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5Q","^9<"]]]]],"^7","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",829,"^:",12,"^;",829,"^<",28,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"^W","~$taoensso.sente/chsk-disconnect!","^8","taoensso/sente.cljc","^<",28,"^4O",["^1I",[["^5W"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",6,"^4R",false,"^9",829,"^4S","^4U","^;",829,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]]],"~$default-chsk-url-fn",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1695,"^:",11,"^;",1695,"^<",30],"^W","~$taoensso.sente/default-chsk-url-fn","^8","taoensso/sente.cljc","^<",30,"^4O",["^1I",[["^74","~$p__68150","~$websocket?"]]],"^4P",null,"^4Q",["^1I",[]],"^:",6,"^4R",false,"^9",1695,"^4S","^5U","^;",1695,"^4V",3,"^4W",true,"^4J",null,"^7","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1684,"^:",12,"^;",1684,"^<",35,"^4J",["^1I",["^4K",["^1I",[["~$event-handler","^7B"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"^W","~$taoensso.sente/start-chsk-router-loop!","^8","taoensso/sente.cljc","^<",35,"^4O",["^1I",[["^9E","^7B"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",6,"^4R",false,"^9",1684,"^4S","^7G","^;",1684,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^9E","^7B"]]]]],"^7","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",845,"^:",11,"^;",845,"^<",29,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$?cb-fn"]]]]]],"^4I",true,"^W","~$taoensso.sente/chsk-send->closed!","^8","taoensso/sente.cljc","^<",29,"^4O",["^1I",[["^9H"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",845,"^4S","^5G","^;",845,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^9H"]]]]]],"~$new-ChAutoSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1430,"^:",11,"^;",1430,"^<",27,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","^8Y"]]]]]],"^4I",true,"^W","~$taoensso.sente/new-ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^5Y","^8Y"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",1430,"^4S","^8G","^;",1430,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","^8Y"]]]]]],"~$bad-origin?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",269,"^:",8,"^;",269,"^<",19,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^6E",["^ ","^1K","^6K","^6:",["~$headers"]]]]]]]],"^4I",true,"^W","~$taoensso.sente/bad-origin?","^8","taoensso/sente.cljc","^<",19,"^4O",["^1I",[["^6E","~$p__67054"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",269,"^4S","^5G","^;",269,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^6E",["^ ","^1K","^6K","^6:",["^9M"]]]]]]]],"~$swap-chsk-state!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",866,"^:",11,"^;",866,"^<",27,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5W","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"^4I",true,"^W","~$taoensso.sente/swap-chsk-state!","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^5W","~$f"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",866,"^4S",["^U",["^5;","^50"]],"^;",866,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W","~$f"]]]]],"^7","Atomically swaps the value of chk's :state_ atom."],"~$handshake?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",935,"^:",11,"^;",935,"^<",21,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"^4I",true,"^W","~$taoensso.sente/handshake?","^8","taoensso/sente.cljc","^<",21,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",935,"^4S","^5G","^;",935,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"~$ajax-call",["^ ","^W","~$taoensso.sente/ajax-call","^8","taoensso/sente.cljc","^9",1693,"^:",12,"^;",1693,"^<",26,"^5",["^ ","^8","taoensso/sente.cljc","^9",1693,"^:",17,"^;",1693,"^<",26],"^7","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1180,"^:",11,"^;",1180,"^<",26,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","^8Y"]]]]]],"^4I",true,"^W","~$taoensso.sente/new-ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^4O",["^1I",[["^5Y","^8Y"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",1180,"^4S","~$taoensso.sente/ChWebSocket","^;",1180,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5Y","^8Y"]]]]]],"~$ChWebSocket",["^ ","^7[",14,"^5=",["^U",["^80","^81","^82","^83","^84","^85","^86","^87","^88","^89","^8:","^8;","^8<","^79","^61","^8="]],"^W","^9X","^8","taoensso/sente.cljc","^<",26,"^8>",true,"^:",15,"^52",true,"^9",994,"^8?",true,"^;",994,"^5:","^7G","^5@",["^U",["^80","^81","^82","^83","^84","^85","^86","^87","^88","^89","^8:","^8;","^8<","^61","^8="]]],"~$pull-unused-cb-fn!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",860,"^:",11,"^;",860,"^<",29,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["~$cbs-waiting_","^5R"]]]]]],"^4I",true,"^W","~$taoensso.sente/pull-unused-cb-fn!","^8","taoensso/sente.cljc","^<",29,"^4O",["^1I",[["^9[","^5R"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",860,"^4S",["^U",["^4U","^50"]],"^;",860,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^9[","^5R"]]]]]],"~$assert-event",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",137,"^:",7,"^;",137,"^<",19,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"^W","~$taoensso.sente/assert-event","^8","taoensso/sente.cljc","^<",19,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",137,"^4S","^50","^;",137,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]],"^7","Returns given argument if it is a valid [ev-id ?ev-data] form. Otherwise\n  throws a validation exception."],"~$chsk-reconnect!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",830,"^:",12,"^;",830,"^<",27,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"^W","~$taoensso.sente/chsk-reconnect!","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^5W"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",6,"^4R",false,"^9",830,"^4S","^4U","^;",830,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^5W"]]]]],"^7","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1447,"^:",10,"^;",1447,"^<",37,"^4J",["^1I",["^4K",["^1I",[["^74","~$?csrf-token","~$&",[["^ ","^6:",["^75","^72","^73","~$port","^7M","^6;","^5Q","^6<","^7K","^7S","~$wrap-recv-evs?","^7R"],"^1K","^5Y","^6F",["^ ","^75","~:auto","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["~:client-uuid","^5Y"]],["^1I",["~$enc/uuid-str"]]]],"^:8",true,"^7R","~$enc/exp-backoff","^6<",["^1I",["^6G","^6H",20]]]],"~$_deprecated-more-opts"]]]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms.","^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^74","^:6",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^4J",["^1I",[["^74","^:6","~$&",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^4Q",["^1I",[null]]]],"^W","~$taoensso.sente/make-channel-socket-client!","^8","taoensso/sente.cljc","^<",37,"^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^74","^:6",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^4J",["^1I",[["^74","^:6","~$&",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^4Q",["^1I",[null]]],"^4O",[["^1I",["^74","^:6",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^4P",null,"^5P",2,"^4Q",["^1I",[null]],"^:",4,"^4R",true,"^5T",[["^ ","^5P",2,"^4R",true,"^5:",["^U",["^61","^50"]]]],"^9",1447,"^4S","^4U","^;",1447,"^4V",2,"^4W",true,"^4J",["^1I",[["^74","^:6","~$&",[["^ ","^6:",["^75","^72","^73","^:7","^7M","^6;","^5Q","^6<","^7K","^7S","^:8","^7R"],"^1K","^5Y","^6F",["^ ","^75","^:9","^6;",["^1I",["^6W",2048]],"^5Q","^6R","^7K",["^1I",["^6L",["^1I",["^::","^5Y"]],["^1I",["^:;"]]]],"^:8",true,"^7R","^:<","^6<",["^1I",["^6G","^6H",20]]]],"^:="]]]],"^7","Returns nil on failure, or a map with keys:\n       :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n                ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n       :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n       :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n       :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n     Common options:\n       :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n       :protocol       ; Server protocol, e/o #{:http :https}.\n       :host           ; Server host (defaults to current page's host).\n       :port           ; Server port (defaults to current page's port).\n       :params         ; Map of any params to incl. in chsk Ring requests (handy\n                       ; for application-level auth, etc.).\n       :packer         ; :edn (default), or an IPacker implementation.\n       :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n       :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?\n       :ws-kalive-ms   ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs. Should be different to server's :ws-kalive-ms."],"~$cb-chan-as-fn",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",907,"^:",11,"^;",907,"^<",24,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^4Z","^5X"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"^4I",true,"^W","~$taoensso.sente/cb-chan-as-fn","^8","taoensso/sente.cljc","^<",24,"^4O",["^1I",[["^4Z","^5X"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^4R",false,"^9",907,"^4S",["^U",[null,"^7G"]],"^;",907,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^4Z","^5X"]]]]],"^7","Experimental, undocumented. Allows a core.async channel to be provided\n     instead of a cb-fn. The channel will receive values of form\n     [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",27,"^:",15,"^52",true,"^53","^54","^9",1371,"^;",1371,"^4J",["^1I",["^4K",["^1I",[["~$G__67995"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"^W","~$taoensso.sente/map->ChAutoSocket","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^:B"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^54","^9",1371,"^4S","^8G","^;",1371,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^:B"]]]]],"^7","Factory function for taoensso.sente/ChAutoSocket, taking a map of keywords to field values."],"~$IChSocket",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",820,"^:",17,"^;",820,"^<",26,"~:protocol-symbol",true,"~:jsdoc",["^1I",["@interface"]],"~:protocol-info",["^ ","^5T",["^ ","^8T",[["^5W"]],"^8H",[["^5W","^4M"]],"^7;",[["^5W"]],"^77",[["^5W","^5X","^5Y"]]]]],"^:E",true,"^W","^79","^8","taoensso/sente.cljc","^<",26,"^:",4,"^9",820,"^:G",["^ ","^5T",["^ ","^8T",[["^5W"]],"^8H",[["^5W","^4M"]],"^7;",[["^5W"]],"^77",[["^5W","^5X","^5Y"]]]],"~:info",null,"^;",820,"^5:","^4U","~:impls",["^U",["^9X","^57","^8G"]],"^:F",["^1I",["@interface"]]],"~$debug-mode?_",["^ ","^W","~$taoensso.sente/debug-mode?_","^8","taoensso/sente.cljc","^9",115,"^:",1,"^;",115,"^<",22,"^5",["^ ","^8","taoensso/sente.cljc","^9",115,"^:",10,"^;",115,"^<",22],"^5:","~$cljs.core/Atom"],"~$cb-success?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",194,"^:",16,"^;",194,"^<",27,"^4J",["^1I",["^4K",["^1I",[["^99"]]]]]],"^W","~$taoensso.sente/cb-success?","^8","taoensso/sente.cljc","^<",27,"^4O",["^1I",[["^99"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",10,"^4R",false,"^9",194,"^4S","^5G","^;",194,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^99"]]]]]],"~$->ChWebSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^52",true,"^53","^5?","^9",994,"^;",994,"^4J",["^1I",["^4K",["^1I",[["^7K","^7L","^7M","^5Q","^7N","^6<","^7O","^7P","~$retry-count_","^7Q","^7R","^9[","~$socket_","~$udt-last-comms_"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"^W","~$taoensso.sente/->ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^4O",["^1I",[["^7K","^7L","^7M","^5Q","^7N","^6<","^7O","^7P","^:P","^7Q","^7R","^9[","^:Q","^:R"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^5?","^9",994,"^4S","^9X","^;",994,"^4V",14,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^7K","^7L","^7M","^5Q","^7N","^6<","^7O","^7P","^:P","^7Q","^7R","^9[","^:Q","^:R"]]]]],"^7","Positional factory function for taoensso.sente/ChWebSocket."],"~$expected",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",122,"^:",8,"^;",122,"^<",16,"^4I",true,"^4J",["^1I",["^4K",["^1I",[["^:T","~$x"]]]]]],"^4I",true,"^W","~$taoensso.sente/expected","^8","taoensso/sente.cljc","^<",16,"^4O",["^1I",[["^:T","~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",122,"^4S","^61","^;",122,"^4V",2,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^:T","~$x"]]]]]],"~$?node-npm-websocket_",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",975,"^:",19,"^;",975,"^<",39,"^4I",true],"^4I",true,"^W","~$taoensso.sente/?node-npm-websocket_","^8","taoensso/sente.cljc","^<",39,"^:",4,"^9",975,"^;",975,"^5:","~$cljs.core/Delay","^7","nnil iff the websocket npm library[1] is available.\n     Easiest way to install:\n       1. Add the lein-npm[2] plugin to your `project.clj`,\n       2. Add: `:npm {:dependencies [[websocket \"1.0.23\"]]}`\n\n     [1] Ref. https://www.npmjs.com/package/websocket\n     [2] Ref. https://github.com/RyanMcG/lein-npm"],"~$start-server-chsk-router!",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",1623,"^:",7,"^;",1623,"^<",32,"^4J",["^1I",["^4K",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E","~$simple-auto-threading?"]]]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default).","^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^4Q",["^1I",[null]]]],"^W","~$taoensso.sente/start-server-chsk-router!","^8","taoensso/sente.cljc","^<",32,"^5O",["^ ","^4R",true,"^5P",2,"^4V",2,"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^4Q",["^1I",[null]]],"^4O",[["^1I",["^7B","^7C",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^4P",null,"^5P",2,"^4Q",["^1I",[null]],"^:",1,"^4R",true,"^5T",[["^ ","^5P",2,"^4R",true,"^5:","^7G"]],"^9",1623,"^4S","^4U","^;",1623,"^4V",2,"^4W",true,"^4J",["^1I",[["^7B","^7C","~$&",[["^ ","^1K","^5Y","^6:",["^7D","^7E","^:Z"]]]]]],"^7","Creates a simple go-loop to call `(event-msg-handler <server-event-msg>)`\n  and log any errors. Returns a `(fn stop! [])`. Note that advanced users may\n  prefer to just write their own loop against `ch-recv`.\n\n  Nb performance note: since your `event-msg-handler` fn will be executed\n  within a simple go block, you'll want this fn to be ~non-blocking\n  (you'll especially want to avoid blocking IO) to avoid starving the\n  core.async thread pool under load. To avoid blocking, you can use futures,\n  agents, core.async, etc. as appropriate.\n\n  Or for simple automatic future-based threading of every request, enable\n  the `:simple-auto-threading?` opt (disabled by default)."],"~$client-event-msg?",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^9",151,"^:",7,"^;",151,"^<",24,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"^W","~$taoensso.sente/client-event-msg?","^8","taoensso/sente.cljc","^<",24,"^4O",["^1I",[["~$x"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",1,"^4R",false,"^9",151,"^4S","^5G","^;",151,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^4H",null,"^5",["^ ","^8","taoensso/sente.cljc","^<",26,"^:",15,"^52",true,"^53","^54","^9",994,"^;",994,"^4J",["^1I",["^4K",["^1I",[["~$G__67735"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"^W","~$taoensso.sente/map->ChWebSocket","^8","taoensso/sente.cljc","^<",26,"^4O",["^1I",[["^;3"]]],"^4P",null,"^4Q",["^1I",[null,null]],"^:",4,"^52",true,"^4R",false,"^53","^54","^9",994,"^4S","^9X","^;",994,"^4V",1,"^4W",true,"^4J",["^1I",["^4K",["^1I",[["^;3"]]]]],"^7","Factory function for taoensso.sente/ChWebSocket, taking a map of keywords to field values."],"~$next-idx!",["^ ","^5",["^ ","^8","taoensso/sente.cljc","^9",262,"^:",16,"^;",262,"^<",25,"^4I",true],"^4I",true,"^W","~$taoensso.sente/next-idx!","^8","taoensso/sente.cljc","^<",25,"^:",1,"^9",262,"^;",262,"^5:","^4U"]],"^1<",["^ ","^J","^J","^10","^H","^13","^14","^15","^15","^14","^14","^F","^F","^17","^L","^H","^H","^1F","^J","^L","^L","^1G","^F"],"~:cljs.analyzer/constants",["^ ","^1:",["^U",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:requested-disconnect","~:on-msg","~:flush?","~:cb","~:errors","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","~:given","^7S","^9[","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","~:allowed-origins","^::","~:handshake","~:ch-recv","~:client-id","~:ev","^7O","~:X-CSRF-Token","^8D","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^78","~:wrong-id-type","~:newly-connected","~:connected-uids","^6<","^7T","~:method","~:simple-auto-threading?","~:pathname","~:ws-chsk-opts","^7Q","^6V","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:udt-last-comms_","~:value","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^8E","^7K","^6H","~:handshake?","~:params","~:udt-next-reconnect","~:chsk/close","~:recur","^8>","~:chsk/state","~:unnamespaced-id","~:debug","~:debug/timeout","~:state","~:hostname","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:port","~:vector","^6I","^8C","~:udt","^5Q","^7L","~:chsk/bad-package","~:ajax-get-or-ws-handshake-fn","~:bad-origin-fn","~:headers","~:internal","^:R","~:error-handler","~:downgrading-ws-to-ajax","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^7M","~:event","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:keyword","^6T","~:socket_","^:P","~:ever-opened?","~:ppstr","~:id","~:open?","~:expected","^6R","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","~:lp-timeout","~:ring-req","~:chsk/timeout","~:http","~:handled","~:wrap-recv-evs?","~:?data","~:post","~:instance-handle_","~:chsk","^6P","~:f","~:bad-csrf-fn","~:error","~:unexpected","~:send-fn","~:wrong-length","^6M","~:on-error","~:timeout","~:resp-type","^7R","~:last-close","~:requested-reconnect","~:ajax-opts","~:cbs-waiting_","~:actual","^6U","~:init?","^:Q","^6Q","~:last-ws-close","^:9","~:on-open","^7N","~:timeout-ms","~:chsk/handshake","^7P","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^6O","~:ajax-chsk-opts","~:text","~:clean?","~:namespaced-keyword"]],"~:order",["^=@","^=[","^8>","^<=","^=7","^<R","^=S","^;W","^;Z","^=:","^<H","^>@","^;G","^;B","^<P","^;P","^<K","^=5","^=>","^=K","^=R","^;:","^;Q","^<0","^6V","^=F","^<8","~:f~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^22",[["^>D","~:static-fns"],true,["^>D","~:elide-asserts"],false,["^>D","~:optimize-constants"],null,["^>D","^1U"],null,["^>D","~:external-config"],null,["^>D","~:tooling-config"],null,["^>D","~:emit-constants"],null,["^>D","~:load-tests"],null,["^>D","~:infer-externs"],true,["^>D","^1W"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^>D","~:fn-invoke-direct"],null,["^>D","~:source-map"],"/dev/null"]]]