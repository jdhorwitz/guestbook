["^ ","~:output",["^ ","~:js","goog.provide('taoensso.sente.interfaces');\ngoog.require('cljs.core');\ngoog.require('taoensso.encore');\n\n/**\n * @interface\n */\ntaoensso.sente.interfaces.IServerChan = function(){};\n\n/**\n * Returns true iff the channel is currently open.\n */\ntaoensso.sente.interfaces.sch_open_QMARK_ = (function taoensso$sente$interfaces$sch_open_QMARK_(sch){\nif((((!((sch == null)))) && ((!((sch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1 == null)))))){\nreturn sch.taoensso$sente$interfaces$IServerChan$sch_open_QMARK_$arity$1(sch);\n} else {\nvar x__4433__auto__ = (((sch == null))?null:sch);\nvar m__4434__auto__ = (taoensso.sente.interfaces.sch_open_QMARK_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(sch) : m__4434__auto__.call(null,sch));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.sch_open_QMARK_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(sch) : m__4431__auto__.call(null,sch));\n} else {\nthrow cljs.core.missing_protocol(\"IServerChan.sch-open?\",sch);\n}\n}\n}\n});\n\n/**\n * If the channel is open when called: closes the channel and returns true.\n *  Otherwise noops and returns false.\n */\ntaoensso.sente.interfaces.sch_close_BANG_ = (function taoensso$sente$interfaces$sch_close_BANG_(sch){\nif((((!((sch == null)))) && ((!((sch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1 == null)))))){\nreturn sch.taoensso$sente$interfaces$IServerChan$sch_close_BANG_$arity$1(sch);\n} else {\nvar x__4433__auto__ = (((sch == null))?null:sch);\nvar m__4434__auto__ = (taoensso.sente.interfaces.sch_close_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(sch) : m__4434__auto__.call(null,sch));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.sch_close_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(sch) : m__4431__auto__.call(null,sch));\n} else {\nthrow cljs.core.missing_protocol(\"IServerChan.sch-close!\",sch);\n}\n}\n}\n});\n\n/**\n * If the channel is open when called: sends a message over channel and\n *  returns true. Otherwise noops and returns false.\n */\ntaoensso.sente.interfaces.sch_send_BANG_ = (function taoensso$sente$interfaces$sch_send_BANG_(sch,websocket_QMARK_,msg){\nif((((!((sch == null)))) && ((!((sch.taoensso$sente$interfaces$IServerChan$sch_send_BANG_$arity$3 == null)))))){\nreturn sch.taoensso$sente$interfaces$IServerChan$sch_send_BANG_$arity$3(sch,websocket_QMARK_,msg);\n} else {\nvar x__4433__auto__ = (((sch == null))?null:sch);\nvar m__4434__auto__ = (taoensso.sente.interfaces.sch_send_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(sch,websocket_QMARK_,msg) : m__4434__auto__.call(null,sch,websocket_QMARK_,msg));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.sch_send_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(sch,websocket_QMARK_,msg) : m__4431__auto__.call(null,sch,websocket_QMARK_,msg));\n} else {\nthrow cljs.core.missing_protocol(\"IServerChan.sch-send!\",sch);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\ntaoensso.sente.interfaces.IServerChanAdapter = function(){};\n\n/**\n * Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n *  a Ring response map with a web-server-specific channel :body that\n *  implements Sente's IServerChan protocol.\n * \n *  Configures channel callbacks with a callbacks map using keys:\n *    :on-open  - (fn [server-ch websocket?]) called exactly once after\n *                channel is available for sending.\n *    :on-close - (fn [server-ch websocket? status]) called exactly once\n *                after channel is closed for any cause, incl. an explicit\n *                call to `close!`. `status` type is currently undefined.\n *    :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n *                byte[] message received from client.\n *    :on-error - (fn [server-ch websocket? error]) currently unused.\n */\ntaoensso.sente.interfaces.ring_req__GT_server_ch_resp = (function taoensso$sente$interfaces$ring_req__GT_server_ch_resp(sch_adapter,ring_req,callbacks_map){\nif((((!((sch_adapter == null)))) && ((!((sch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3 == null)))))){\nreturn sch_adapter.taoensso$sente$interfaces$IServerChanAdapter$ring_req__GT_server_ch_resp$arity$3(sch_adapter,ring_req,callbacks_map);\n} else {\nvar x__4433__auto__ = (((sch_adapter == null))?null:sch_adapter);\nvar m__4434__auto__ = (taoensso.sente.interfaces.ring_req__GT_server_ch_resp[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(sch_adapter,ring_req,callbacks_map) : m__4434__auto__.call(null,sch_adapter,ring_req,callbacks_map));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.ring_req__GT_server_ch_resp[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(sch_adapter,ring_req,callbacks_map) : m__4431__auto__.call(null,sch_adapter,ring_req,callbacks_map));\n} else {\nthrow cljs.core.missing_protocol(\"IServerChanAdapter.ring-req->server-ch-resp\",sch_adapter);\n}\n}\n}\n});\n\n\n/**\n * Extension pt. for client<->server comms data un/packers:\n *   arbitrary Clojure data <-> serialized strings.\n * @interface\n */\ntaoensso.sente.interfaces.IPacker = function(){};\n\ntaoensso.sente.interfaces.pack = (function taoensso$sente$interfaces$pack(_,x){\nif((((!((_ == null)))) && ((!((_.taoensso$sente$interfaces$IPacker$pack$arity$2 == null)))))){\nreturn _.taoensso$sente$interfaces$IPacker$pack$arity$2(_,x);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (taoensso.sente.interfaces.pack[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,x) : m__4434__auto__.call(null,_,x));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.pack[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,x) : m__4431__auto__.call(null,_,x));\n} else {\nthrow cljs.core.missing_protocol(\"IPacker.pack\",_);\n}\n}\n}\n});\n\ntaoensso.sente.interfaces.unpack = (function taoensso$sente$interfaces$unpack(_,x){\nif((((!((_ == null)))) && ((!((_.taoensso$sente$interfaces$IPacker$unpack$arity$2 == null)))))){\nreturn _.taoensso$sente$interfaces$IPacker$unpack$arity$2(_,x);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (taoensso.sente.interfaces.unpack[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,x) : m__4434__auto__.call(null,_,x));\n} else {\nvar m__4431__auto__ = (taoensso.sente.interfaces.unpack[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,x) : m__4431__auto__.call(null,_,x));\n} else {\nthrow cljs.core.missing_protocol(\"IPacker.unpack\",_);\n}\n}\n}\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Alpha, subject to change.\n  Public interfaces / extension points.","~:file","taoensso/sente/interfaces.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",30],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$taoensso.sente.interfaces","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$taoensso.encore","^L","~$enc","^L","~$cljs.core","^N","~$goog","^O"],"~:seen",["^E",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^N","^N","^L","^L","^M","^L"],"~:form",["~#list",["~$ns","^G","Alpha, subject to change.\n  Public interfaces / extension points.",["^U",["^Q",["^L","~:as","^M"]]]]],"~:flags",["^ ","^Q",["^E",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^L"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","taoensso/sente/interfaces.cljc"],"~:compiled-at",1597886901266,"~:resource-name","taoensso/sente/interfaces.cljc","~:warnings",[],"~:source","(ns taoensso.sente.interfaces\n  \"Alpha, subject to change.\n  Public interfaces / extension points.\"\n  (:require [taoensso.encore :as enc]))\n\n;;;; Server channels\n;; To work with Sente, a web server needs to provide implementations for\n;; the two protocols below. Please see the `taoensso.sente.server-adapters.*`\n;; namespaces for examples.\n;;\n;; Ref. https://github.com/ptaoussanis/sente/issues/102 for more info.\n\n(defprotocol IServerChan ; sch\n  ;; Wraps a web server's own async channel/comms interface to abstract away\n  ;; implementation differences.\n  (sch-open?  [sch] \"Returns true iff the channel is currently open.\")\n  (sch-close! [sch]\n    \"If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.\")\n  (sch-send! [sch websocket? msg]\n    \"If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.\"))\n\n(defprotocol IServerChanAdapter ; sch-adapter\n  ;; Wraps a web server's own ring-request->ring-response interface to\n  ;; abstract away implementation differences.\n  (ring-req->server-ch-resp [sch-adapter ring-req callbacks-map]\n    \"Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.\"))\n\n;;;; Packers\n\n(defprotocol IPacker\n  \"Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.\"\n  (pack   [_ x])\n  (unpack [_ x]))\n","~:reader-features",["^E",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;AAYA,AAAA;AAAA;;;AAAA,AAAaQ;;AAAb;;;AAAA,AAGGN,AAAYO;AAHf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGeA,AAAAA;AAHf,AAGeA,AAAAA;;AAHf,AAAAT,AAAA,AAAA,AAAA,AAAA,AAGeS,AAAAA;AAHfR,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGeQ,AAAAA;;AAHf,AAAAL,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGeK,AAAAA;;AAHf,AAAA,AAAAJ,AAAA,AAGeI;;;;;;AAHf;;;;AAAA,AAIGH,AAAYG;AAJf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIeA,AAAAA;AAJf,AAIeA,AAAAA;;AAJf,AAAAT,AAAA,AAAA,AAAA,AAAA,AAIeS,AAAAA;AAJfR,AAAA,AAAAK,AAAA,AAAAH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIeQ,AAAAA;;AAJf,AAAAL,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIeK,AAAAA;;AAJf,AAAA,AAAAJ,AAAA,AAIeI;;;;;;AAJf;;;;AAAA,AAOGF,AAAWE,AAAIC,AAAWC;AAP7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOcF,AAAAA;AAPd,AAOcA,AAAAA,AAAIC,AAAWC;;AAP7B,AAAAX,AAAA,AAAA,AAAA,AAAA,AAOcS,AAAAA;AAPdR,AAAA,AAAAM,AAAA,AAAAJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOcQ,AAAAA,AAAIC,AAAAA,AAAWC,AAAAA;;AAP7B,AAAAP,AAAA,AAAAG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOcK,AAAAA,AAAIC,AAAAA,AAAWC,AAAAA;;AAP7B,AAAA,AAAAN,AAAA,AAOcI;;;;;;AAPd,AAWA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb;;;;;;;;;;;;;;;AAAA,AAGGD,AAA0BE,AAAYC,AAASC;AAHlD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAG6BF,AAAAA;AAH7B,AAG6BA,AAAAA,AAAYC,AAASC;;AAHlD,AAAAhB,AAAA,AAAA,AAAA,AAAA,AAG6Bc,AAAAA;AAH7Bb,AAAA,AAAAW,AAAA,AAAAT,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAG6Ba,AAAAA,AAAYC,AAAAA,AAASC,AAAAA;;AAHlD,AAAAZ,AAAA,AAAAQ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAR,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAG6BU,AAAAA,AAAYC,AAAAA,AAASC,AAAAA;;AAHlD,AAAA,AAAAX,AAAA,AAG6BS;;;;;;AAH7B,AAoBA,AAAA;AAAA;;;;;AAAA,AAAaK;;AAAb,AAAA,AAGGF,AAAQG,AAAEC;AAHb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGWD,AAAAA;AAHX,AAGWA,AAAAA,AAAEC;;AAHb,AAAArB,AAAA,AAAA,AAAA,AAAA,AAGWoB,AAAAA;AAHXnB,AAAA,AAAAgB,AAAA,AAAAd,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGWmB,AAAAA,AAAEC,AAAAA;;AAHb,AAAAjB,AAAA,AAAAa,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAb,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGWgB,AAAAA,AAAEC,AAAAA;;AAHb,AAAA,AAAAhB,AAAA,AAGWe;;;;;;AAHX,AAAA,AAIGF,AAAQE,AAAEC;AAJb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIWD,AAAAA;AAJX,AAIWA,AAAAA,AAAEC;;AAJb,AAAArB,AAAA,AAAA,AAAA,AAAA,AAIWoB,AAAAA;AAJXnB,AAAA,AAAAiB,AAAA,AAAAf,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIWmB,AAAAA,AAAEC,AAAAA;;AAJb,AAAAjB,AAAA,AAAAc,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAd,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIWgB,AAAAA,AAAEC,AAAAA;;AAJb,AAAA,AAAAhB,AAAA,AAIWe;;;;;;AAJX","names",["x__4433__auto__","m__4434__auto__","taoensso.sente.interfaces/sch-open?","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","taoensso.sente.interfaces/sch-close!","taoensso.sente.interfaces/sch-send!","taoensso.sente.interfaces/IServerChan","sch","websocket?","msg","taoensso.sente.interfaces/ring-req->server-ch-resp","taoensso.sente.interfaces/IServerChanAdapter","sch-adapter","ring-req","callbacks-map","taoensso.sente.interfaces/pack","taoensso.sente.interfaces/unpack","taoensso.sente.interfaces/IPacker","_","x"]]],"~:cache-keys",["~#cmap",[["^10","goog/dom/tagname.js"],[1597770556544,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^E",[]],"~:deps-syms",["^O","~$goog.dom.HtmlElement"]]],["^10","goog/async/freelist.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/labs/useragent/platform.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.labs.userAgent.util","~$goog.string"]]],["~:macro","^N"],[1597770669000],["^10","taoensso/sente/interfaces.cljc"],[1597770838699,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^L"]]],["^10","goog/timer/timer.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.Promise","~$goog.events.EventTarget"]]],["^10","cljs/tools/reader/impl/utils.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","~$clojure.string","^1C"]]],["^10","goog/math/math.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.array","~$goog.asserts"]]],["^10","goog/string/stringformat.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1C"]]],["^10","goog/events/eventtype.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^10","goog/labs/useragent/browser.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1B","~$goog.object","~$goog.string.internal"]]],["^10","goog/array/array.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I"]]],["^10","goog/useragent/useragent.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1B","~$goog.reflect","^1C"]]],["^10","goog/structs/prioritypool.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1D","~$cljs.tools.reader.reader-types"],[1597770172000],["^10","goog/async/run.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.async.WorkQueue","~$goog.async.nextTick","~$goog.async.throwException"]]],["^10","taoensso/encore.cljs"],[1597770838792,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1G","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^1L","^1C","~$goog.string.format","~$goog.string.StringBuffer","~$goog.events","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","~$goog.net.EventType","~$goog.net.ErrorCode","~$taoensso.truss"]]],["^10","goog/debug/error.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/async/workqueue.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","~$goog.async.FreeList"]]],["^10","goog/events/events.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^1J","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^10","goog/promise/resolver.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/events/browserfeature.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1K"]]],["^10","cljs/tools/reader/edn.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","~$cljs.tools.reader.impl.errors","^1T","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^1C","^20"]]],["^10","goog/structs/priorityqueue.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.structs.Heap"]]],["^10","goog/net/xhrio.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.Timer","^1H","^1I","^29","^1F","~$goog.json.hybrid","~$goog.log","^26","^25","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1L","^1C","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","^1K"]]],["^10","goog/promise/thenable.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/dom/nodetype.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","cljs/tools/reader/impl/inspect.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N"]]],["^10","cljs/tools/reader.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1T","^2>","^2?","^2=","^1H","^1C","^20"]]],["^10","goog/net/wrapperxmlhttpfactory.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^10","goog/events/eventtarget.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.Disposable","^1I","^21","~$goog.events.Event","^2;","^2<","^1L"]]],["^10","goog/disposable/disposable.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.disposable.IDisposable"]]],["^10","goog/object/object.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/structs/set.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^2G","~$goog.structs.Collection","^2H"]]],"~:SHADOW-TIMESTAMP",[1597770557000,1597770669000],["^10","goog/math/long.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","^1Q"]]],["^10","goog/events/listener.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.events.ListenableKey"]]],["^10","goog/events/listenermap.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","~$goog.events.Listener","^1L"]]],["^10","goog/events/eventid.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","taoensso/truss.cljs"],[1597770838672,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","~$taoensso.truss.impl"]]],["^10","goog/string/internal.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/functions/functions.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","taoensso/truss/impl.cljs"],[1597770838672,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1X"]]],["^10","goog/net/eventtype.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/structs/map.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^10","goog/net/xhriopool.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^22","~$goog.structs.PriorityPool"]]],["^10","goog/structs/queue.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H"]]],["^10","goog/labs/useragent/engine.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1B","^1C"]]],["^10","cljs/reader.cljs"],[1597770669034,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1L","^2@","^1Z","^20"]]],["^10","goog/asserts/asserts.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^10","goog/debug/logbuffer.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","~$goog.debug.LogRecord"]]],["^1D","^L"],[1597770838000],["^10","goog/uri/uri.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1I","^1C","^2G","^2H","^2I","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^10","goog/net/errorcode.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/disposable/idisposable.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/promise/promise.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","~$goog.Thenable","^1I","^28","~$goog.async.run","^1W","^2W","~$goog.promise.Resolver"]]],["^10","goog/debug/logrecord.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/base.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",[]]],["^10","goog/json/hybrid.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","~$goog.json"]]],["^10","goog/structs/structs.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1L"]]],["^10","cljs/tools/reader/impl/errors.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1T","^1G","~$cljs.tools.reader.impl.inspect"]]],["^10","clojure/string.cljs"],[1597770669034,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^1C","^20"]]],["^10","goog/structs/pool.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^2L","~$goog.structs.Queue","~$goog.structs.Set"]]],["^10","goog/net/httpstatus.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/structs/heap.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1L","~$goog.structs.Node"]]],["^10","goog/debug/entrypointregistry.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I"]]],["^10","goog/string/string.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1M"]]],["^10","goog/reflect/reflect.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/labs/useragent/util.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1M"]]],["^10","goog/debug/debug.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","~$goog.debug.errorcontext","^1K"]]],["^10","goog/string/stringbuffer.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/debug/errorcontext.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","cljs/tools/reader/reader_types.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^2>","^1C","^20"]]],["^10","goog/iter/iter.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1I","~$goog.functions","~$goog.math"]]],["^10","goog/async/nexttick.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^29","~$goog.dom.TagName","^39","^1N","^1O"]]],["^10","goog/debug/logger.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1I","~$goog.debug","~$goog.debug.LogBuffer","^2Y"]]],["^10","goog/events/event.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^2L","~$goog.events.EventId"]]],["^10","cljs/tools/reader/impl/commons.cljs"],[1597770172355,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N","^2=","^1T","^2>"]]],["^10","goog/dom/htmlelement.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","cljs/core.cljs"],[1597770669034,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["~$goog.math.Long","~$goog.math.Integer","^1C","^1L","^1H","~$goog.Uri","^20"]]],["^10","goog/log/log.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^3<","~$goog.debug.LogManager","^2Y","~$goog.debug.Logger"]]],["^10","goog/structs/collection.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/events/browserevent.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^3<","^1J","^2M","~$goog.events.EventType","^1Q","^1K"]]],["^10","goog/math/integer.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/structs/node.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^1D","^2S"],[1597770838000],["^10","clojure/set.cljs"],[1597770669034,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^N"]]],["^10","goog/uri/utils.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1H","^1I","^1C"]]],["^10","goog/json/json.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^10","goog/events/listenable.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^3>"]]],["^10","goog/net/xmlhttpfactory.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^2J"]]],["^10","goog/net/xmlhttp.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O","^1I","~$goog.net.WrapperXmlHttpFactory","^2K"]]],["^10","goog/net/xhrlike.js"],[1597770556544,"^1=",["^ ","^1>",null,"^1?",["^E",[]],"^1@",["^O"]]],["^1D","^1Y"],[1597770669000]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Alpha, subject to change.\n  Public interfaces / extension points.","^7","taoensso/sente/interfaces.cljc","^8",1,"^9",5,"^:",1,"^;",30],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"~:shadow/protocol-prefixes",["^E",["taoensso$sente$interfaces$IServerChan$","taoensso$sente$interfaces$IPacker$","taoensso$sente$interfaces$IServerChanAdapter$"]],"^C",null,"^D",["^E",[]],"^F","^G","^J",null,"^K",["^ ","^L","^L","^M","^L","^N","^N","^O","^O"],"^P",["^E",["^Q"]],"^R",null,"~:defs",["^ ","~$pack",["^ ","~:protocol-inline",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",47,"^9",4,"^:",47,"^;",8,"~:protocol","~$taoensso.sente.interfaces/IPacker","^6",null,"~:arglists",["^U",["~$quote",["^U",[["~$_","~$x"]]]]]],"^3K","^3L","^F","~$taoensso.sente.interfaces/pack","^7","taoensso/sente/interfaces.cljc","^;",8,"~:method-params",["^U",[["~$_","~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^9",1,"~:variadic?",false,"^8",44,"~:ret-tag","~$any","^:",47,"~:max-fixed-arity",2,"~:fn-var",true,"^3M",["^U",["^3N",["^U",[["~$_","~$x"]]]]],"^6",null],"~$sch-send!",["^ ","^3J",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",20,"^9",4,"^:",20,"^;",13,"^3K","~$taoensso.sente.interfaces/IServerChan","^6","If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.","^3M",["^U",["^3N",["^U",[["~$sch","~$websocket?","~$msg"]]]]]],"^3K","^3Y","^F","~$taoensso.sente.interfaces/sch-send!","^7","taoensso/sente/interfaces.cljc","^;",13,"^3P",["^U",[["^3Z","^3[","^40"]]],"^3Q",null,"^3R",["^U",[null,null]],"^9",1,"^3S",false,"^8",13,"^3T","^3U","^:",20,"^3V",3,"^3W",true,"^3M",["^U",["^3N",["^U",[["^3Z","^3[","^40"]]]]],"^6","If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false."],"~$IServerChan",["^ ","^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",13,"^9",14,"^:",13,"^;",25,"~:protocol-symbol",true,"~:jsdoc",["^U",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$sch-open?",[["^3Z"]],"~$sch-close!",[["^3Z"]],"^3X",[["^3Z","^3[","^40"]]]]],"^43",true,"^F","^3Y","^7","taoensso/sente/interfaces.cljc","^;",25,"^9",1,"^8",13,"^45",["^ ","^46",["^ ","^47",[["^3Z"]],"^48",[["^3Z"]],"^3X",[["^3Z","^3[","^40"]]]],"~:info",null,"^:",13,"~:tag","^3U","~:impls",["^E",[]],"^44",["^U",["@interface"]]],"~$unpack",["^ ","^3J",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",48,"^9",4,"^:",48,"^;",10,"^3K","^3L","^6",null,"^3M",["^U",["^3N",["^U",[["~$_","~$x"]]]]]],"^3K","^3L","^F","~$taoensso.sente.interfaces/unpack","^7","taoensso/sente/interfaces.cljc","^;",10,"^3P",["^U",[["~$_","~$x"]]],"^3Q",null,"^3R",["^U",[null,null]],"^9",1,"^3S",false,"^8",44,"^3T","^3U","^:",48,"^3V",2,"^3W",true,"^3M",["^U",["^3N",["^U",[["~$_","~$x"]]]]],"^6",null],"~$IPacker",["^ ","^5",["^ ","^43",true,"^7","taoensso/sente/interfaces.cljc","^;",21,"^9",14,"^8",44,"^45",["^ ","^46",["^ ","^3I",[["~$_","~$x"]],"^4<",[["~$_","~$x"]]]],"^:",44,"^6","Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.","^44",["^U",["@interface"]]],"^43",true,"^F","^3L","^7","taoensso/sente/interfaces.cljc","^;",21,"^9",1,"^8",44,"^45",["^ ","^46",["^ ","^3I",[["~$_","~$x"]],"^4<",[["~$_","~$x"]]]],"^49",null,"^:",44,"^4:","^3U","^4;",["^E",[]],"^6","Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.","^44",["^U",["@interface"]]],"~$ring-req->server-ch-resp",["^ ","^3J",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",27,"^9",4,"^:",27,"^;",28,"^3K","~$taoensso.sente.interfaces/IServerChanAdapter","^6","Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.","^3M",["^U",["^3N",["^U",[["~$sch-adapter","~$ring-req","~$callbacks-map"]]]]]],"^3K","^4@","^F","~$taoensso.sente.interfaces/ring-req->server-ch-resp","^7","taoensso/sente/interfaces.cljc","^;",28,"^3P",["^U",[["^4A","^4B","^4C"]]],"^3Q",null,"^3R",["^U",[null,null]],"^9",1,"^3S",false,"^8",24,"^3T","^3U","^:",27,"^3V",3,"^3W",true,"^3M",["^U",["^3N",["^U",[["^4A","^4B","^4C"]]]]],"^6","Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused."],"^48",["^ ","^3J",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",17,"^9",4,"^:",17,"^;",14,"^3K","^3Y","^6","If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.","^3M",["^U",["^3N",["^U",[["^3Z"]]]]]],"^3K","^3Y","^F","~$taoensso.sente.interfaces/sch-close!","^7","taoensso/sente/interfaces.cljc","^;",14,"^3P",["^U",[["^3Z"]]],"^3Q",null,"^3R",["^U",[null,null]],"^9",1,"^3S",false,"^8",13,"^3T","^3U","^:",17,"^3V",1,"^3W",true,"^3M",["^U",["^3N",["^U",[["^3Z"]]]]],"^6","If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false."],"^47",["^ ","^3J",null,"^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",16,"^9",4,"^:",16,"^;",13,"^3K","^3Y","^6","Returns true iff the channel is currently open.","^3M",["^U",["^3N",["^U",[["^3Z"]]]]]],"^3K","^3Y","^F","~$taoensso.sente.interfaces/sch-open?","^7","taoensso/sente/interfaces.cljc","^;",13,"^3P",["^U",[["^3Z"]]],"^3Q",null,"^3R",["^U",[null,null]],"^9",1,"^3S",false,"^8",13,"^3T","^3U","^:",16,"^3V",1,"^3W",true,"^3M",["^U",["^3N",["^U",[["^3Z"]]]]],"^6","Returns true iff the channel is currently open."],"~$IServerChanAdapter",["^ ","^5",["^ ","^7","taoensso/sente/interfaces.cljc","^8",24,"^9",14,"^:",24,"^;",32,"^43",true,"^44",["^U",["@interface"]],"^45",["^ ","^46",["^ ","^4?",[["^4A","^4B","^4C"]]]]],"^43",true,"^F","^4@","^7","taoensso/sente/interfaces.cljc","^;",32,"^9",1,"^8",24,"^45",["^ ","^46",["^ ","^4?",[["^4A","^4B","^4C"]]]],"^49",null,"^:",24,"^4:","^3U","^4;",["^E",[]],"^44",["^U",["@interface"]]]],"^S",["^ ","^N","^N","^L","^L","^M","^L"],"^X",["^ ","^Q",["^E",[]]],"^Y",["^ "],"^Z",["^O","^N","^L"]],"^I","^G","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1<",[["^4J","~:static-fns"],true,["^4J","~:elide-asserts"],false,["^4J","~:optimize-constants"],null,["^4J","^13"],null,["^4J","~:external-config"],null,["^4J","~:tooling-config"],null,["^4J","~:emit-constants"],null,["^4J","~:load-tests"],null,["^4J","~:infer-externs"],true,["^4J","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4J","~:fn-invoke-direct"],null,["^4J","~:source-map"],"/dev/null"]]]