["^ ","~:output",["^ ","~:js","goog.provide('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers');\ngoog.require('day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace');\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind) : day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.kinds.call(null,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx = (function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$fx$reg_fx(id,handler){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.register_handler(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.do_fx = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function day8$re_frame_10x$inlined_deps$re_frame$v0v12v0$re_frame$fx$do_fx_after(context){\nif(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__59852 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__59853 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__59853;\n\ntry{try{var seq__59854 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__59855 = null;\nvar count__59856 = (0);\nvar i__59857 = (0);\nwhile(true){\nif((i__59857 < count__59856)){\nvar vec__59864 = chunk__59855.cljs$core$IIndexed$_nth$arity$2(null,i__59857);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59864,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59864,(1),null);\nvar temp__5733__auto___59923 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___59923)){\nvar effect_fn_59924 = temp__5733__auto___59923;\n(effect_fn_59924.cljs$core$IFn$_invoke$arity$1 ? effect_fn_59924.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_59924.call(null,effect_value));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__59925 = seq__59854;\nvar G__59926 = chunk__59855;\nvar G__59927 = count__59856;\nvar G__59928 = (i__59857 + (1));\nseq__59854 = G__59925;\nchunk__59855 = G__59926;\ncount__59856 = G__59927;\ni__59857 = G__59928;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__59854);\nif(temp__5735__auto__){\nvar seq__59854__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__59854__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__59854__$1);\nvar G__59929 = cljs.core.chunk_rest(seq__59854__$1);\nvar G__59930 = c__4550__auto__;\nvar G__59931 = cljs.core.count(c__4550__auto__);\nvar G__59932 = (0);\nseq__59854 = G__59929;\nchunk__59855 = G__59930;\ncount__59856 = G__59931;\ni__59857 = G__59932;\ncontinue;\n} else {\nvar vec__59867 = cljs.core.first(seq__59854__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59867,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59867,(1),null);\nvar temp__5733__auto___59933 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___59933)){\nvar effect_fn_59934 = temp__5733__auto___59933;\n(effect_fn_59934.cljs$core$IFn$_invoke$arity$1 ? effect_fn_59934.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_59934.call(null,effect_value));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__59935 = cljs.core.next(seq__59854__$1);\nvar G__59936 = null;\nvar G__59937 = (0);\nvar G__59938 = (0);\nseq__59854 = G__59935;\nchunk__59855 = G__59936;\ncount__59856 = G__59937;\ni__59857 = G__59938;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__59528__auto___59939 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.now();\nvar duration__59529__auto___59940 = (end__59528__auto___59939 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__59529__auto___59940,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.now()], 0)));\n\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace.run_tracing_callbacks_BANG_(end__59528__auto___59939);\n} else {\n}\n}}finally {day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__59852;\n}} else {\nvar seq__59870 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__59871 = null;\nvar count__59872 = (0);\nvar i__59873 = (0);\nwhile(true){\nif((i__59873 < count__59872)){\nvar vec__59881 = chunk__59871.cljs$core$IIndexed$_nth$arity$2(null,i__59873);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59881,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59881,(1),null);\nvar temp__5733__auto___59941 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___59941)){\nvar effect_fn_59942 = temp__5733__auto___59941;\n(effect_fn_59942.cljs$core$IFn$_invoke$arity$1 ? effect_fn_59942.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_59942.call(null,effect_value));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__59943 = seq__59870;\nvar G__59944 = chunk__59871;\nvar G__59945 = count__59872;\nvar G__59946 = (i__59873 + (1));\nseq__59870 = G__59943;\nchunk__59871 = G__59944;\ncount__59872 = G__59945;\ni__59873 = G__59946;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__59870);\nif(temp__5735__auto__){\nvar seq__59870__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__59870__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__59870__$1);\nvar G__59947 = cljs.core.chunk_rest(seq__59870__$1);\nvar G__59948 = c__4550__auto__;\nvar G__59949 = cljs.core.count(c__4550__auto__);\nvar G__59950 = (0);\nseq__59870 = G__59947;\nchunk__59871 = G__59948;\ncount__59872 = G__59949;\ni__59873 = G__59950;\ncontinue;\n} else {\nvar vec__59884 = cljs.core.first(seq__59870__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59884,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59884,(1),null);\nvar temp__5733__auto___59951 = day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___59951)){\nvar effect_fn_59952 = temp__5733__auto___59951;\n(effect_fn_59952.cljs$core$IFn$_invoke$arity$1 ? effect_fn_59952.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_59952.call(null,effect_value));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__59953 = cljs.core.next(seq__59870__$1);\nvar G__59954 = null;\nvar G__59955 = (0);\nvar G__59956 = (0);\nseq__59870 = G__59953;\nchunk__59871 = G__59954;\ncount__59872 = G__59955;\ni__59873 = G__59956;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__59887 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__59888 = null;\nvar count__59889 = (0);\nvar i__59890 = (0);\nwhile(true){\nif((i__59890 < count__59889)){\nvar map__59896 = chunk__59888.cljs$core$IIndexed$_nth$arity$2(null,i__59890);\nvar map__59896__$1 = (((((!((map__59896 == null))))?(((((map__59896.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__59896.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__59896):map__59896);\nvar effect = map__59896__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59896__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59896__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.set_timeout_BANG_(((function (seq__59887,chunk__59888,count__59889,i__59890,map__59896,map__59896__$1,effect,ms,dispatch){\nreturn (function (){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch(dispatch);\n});})(seq__59887,chunk__59888,count__59889,i__59890,map__59896,map__59896__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__59957 = seq__59887;\nvar G__59958 = chunk__59888;\nvar G__59959 = count__59889;\nvar G__59960 = (i__59890 + (1));\nseq__59887 = G__59957;\nchunk__59888 = G__59958;\ncount__59889 = G__59959;\ni__59890 = G__59960;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__59887);\nif(temp__5735__auto__){\nvar seq__59887__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__59887__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__59887__$1);\nvar G__59961 = cljs.core.chunk_rest(seq__59887__$1);\nvar G__59962 = c__4550__auto__;\nvar G__59963 = cljs.core.count(c__4550__auto__);\nvar G__59964 = (0);\nseq__59887 = G__59961;\nchunk__59888 = G__59962;\ncount__59889 = G__59963;\ni__59890 = G__59964;\ncontinue;\n} else {\nvar map__59900 = cljs.core.first(seq__59887__$1);\nvar map__59900__$1 = (((((!((map__59900 == null))))?(((((map__59900.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__59900.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__59900):map__59900);\nvar effect = map__59900__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59900__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59900__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interop.set_timeout_BANG_(((function (seq__59887,chunk__59888,count__59889,i__59890,map__59900,map__59900__$1,effect,ms,dispatch,seq__59887__$1,temp__5735__auto__){\nreturn (function (){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch(dispatch);\n});})(seq__59887,chunk__59888,count__59889,i__59890,map__59900,map__59900__$1,effect,ms,dispatch,seq__59887__$1,temp__5735__auto__))\n,ms);\n}\n\n\nvar G__59965 = cljs.core.next(seq__59887__$1);\nvar G__59966 = null;\nvar G__59967 = (0);\nvar G__59968 = (0);\nseq__59887 = G__59965;\nchunk__59888 = G__59966;\ncount__59889 = G__59967;\ni__59890 = G__59968;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch(value);\n}\n}));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__59902 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__59903 = null;\nvar count__59904 = (0);\nvar i__59905 = (0);\nwhile(true){\nif((i__59905 < count__59904)){\nvar event = chunk__59903.cljs$core$IIndexed$_nth$arity$2(null,i__59905);\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch(event);\n\n\nvar G__59969 = seq__59902;\nvar G__59970 = chunk__59903;\nvar G__59971 = count__59904;\nvar G__59972 = (i__59905 + (1));\nseq__59902 = G__59969;\nchunk__59903 = G__59970;\ncount__59904 = G__59971;\ni__59905 = G__59972;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__59902);\nif(temp__5735__auto__){\nvar seq__59902__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__59902__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__59902__$1);\nvar G__59973 = cljs.core.chunk_rest(seq__59902__$1);\nvar G__59974 = c__4550__auto__;\nvar G__59975 = cljs.core.count(c__4550__auto__);\nvar G__59976 = (0);\nseq__59902 = G__59973;\nchunk__59903 = G__59974;\ncount__59904 = G__59975;\ni__59905 = G__59976;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__59902__$1);\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.router.dispatch(event);\n\n\nvar G__59978 = cljs.core.next(seq__59902__$1);\nvar G__59979 = null;\nvar G__59980 = (0);\nvar G__59981 = (0);\nseq__59902 = G__59978;\nchunk__59903 = G__59979;\ncount__59904 = G__59980;\ni__59905 = G__59981;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.clear_handlers,day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__59907 = cljs.core.seq(value);\nvar chunk__59908 = null;\nvar count__59909 = (0);\nvar i__59910 = (0);\nwhile(true){\nif((i__59910 < count__59909)){\nvar event = chunk__59908.cljs$core$IIndexed$_nth$arity$2(null,i__59910);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__59983 = seq__59907;\nvar G__59984 = chunk__59908;\nvar G__59985 = count__59909;\nvar G__59986 = (i__59910 + (1));\nseq__59907 = G__59983;\nchunk__59908 = G__59984;\ncount__59909 = G__59985;\ni__59910 = G__59986;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__59907);\nif(temp__5735__auto__){\nvar seq__59907__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__59907__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__59907__$1);\nvar G__59987 = cljs.core.chunk_rest(seq__59907__$1);\nvar G__59988 = c__4550__auto__;\nvar G__59989 = cljs.core.count(c__4550__auto__);\nvar G__59990 = (0);\nseq__59907 = G__59987;\nchunk__59908 = G__59988;\ncount__59909 = G__59989;\ni__59910 = G__59990;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__59907__$1);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__59991 = cljs.core.next(seq__59907__$1);\nvar G__59992 = null;\nvar G__59993 = (0);\nvar G__59994 = (0);\nseq__59907 = G__59991;\nchunk__59908 = G__59992;\ncount__59909 = G__59993;\ni__59910 = G__59994;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn (clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(value) : clear_event.call(null,value));\n}\n}));\nday8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",64],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router","^K","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar","^L","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor","^M","~$cljs.core","^N","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers","^O","~$goog","^P","~$router","^K","~$registrar","^L","~$trace","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop","^U","~$events","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db","^X","^T","^T","^W","^W"],"~:seen",["^D",["~:require"]],"~:uses",["^ ","~$app-db","^X","~$->interceptor","^M","~$set-timeout!","^U","~$get-handler","^L","~$clear-handlers","^L","~$register-handler","^L","~$console","^O"],"~:require-macros",["^ ","^T","^T","^S","^T","^N","^N"],"~:form",["~#list",["~$ns","^F",["^19",["^Z",["^K","~:as","^Q"],["^X","~:refer",["^10"]],["^M","^1<",["^11"]],["^U","^1<",["^12"]],["^W","^1;","^V"],["^L","^1;","^R","^1<",["^13","^14","^15"]],["^O","^1<",["^16"]],["^T","^1;","^S","~:include-macros",true]]]]],"~:flags",["^ ","^Z",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^P","^N","^K","^X","^M","^U","^W","^L","^O","^T"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc"],"~:compiled-at",1597780141640,"~:resource-name","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","~:warnings",[],"~:source","(ns day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router      :as router]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db          :refer [app-db]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interceptor :refer [->interceptor]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop     :refer [set-timeout!]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events      :as events]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar   :as registrar :refer [get-handler clear-handlers register-handler]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.loggers     :refer [console]]\n    [day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (doseq [[effect-key effect-value] (:effects context)]\n                 (if-let [effect-fn (get-handler kind effect-key false)]\n                   (effect-fn effect-value)\n                   (console :error \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\")))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} (remove nil? value)]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","js/Error","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/kinds","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","id","handler","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/register-handler","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic","context","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__59852","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace/*current-trace*","*current-trace*-temp-val__59853","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace/start-trace","end__59528__auto__","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/now","duration__59529__auto__","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace/traces","cljs.core/conj","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.trace/run-tracing-callbacks!","seq__59854","cljs.core/seq","chunk__59855","count__59856","i__59857","vec__59864","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__59867","cljs.core/first","cljs.core/next","seq__59870","chunk__59871","count__59872","i__59873","vec__59881","vec__59884","effect-key","effect-value","temp__5733__auto__","effect-fn","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3","day8.re_frame_10x.inlined_deps.re_frame.v0v12v0.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","value","seq__59887","chunk__59888","count__59889","i__59890","map__59896","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__59900","ms","dispatch","effect","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","cljs.core/empty?","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.interop/set-timeout!","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__59902","chunk__59903","count__59904","i__59905","event","clear-event","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.registrar/clear-handlers","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.events/kind","seq__59907","chunk__59908","count__59909","i__59910","cljs.core/deref","day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.db/app-db","cljs.core/reset!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1597770557000,1597770557000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development","~$module$node_modules$process$browser"]]],["^1B","goog/dom/tagname.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","~$goog.dom.HtmlElement"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/ratom.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.util","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.debug","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.batching","~$clojure.set","~$goog.object"]]],["~:macro","^N"],[1597770669000],["^22","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.core"],[1597779185000],["^1B","goog/math/math.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","~$goog.array","~$goog.asserts"]]],["^1B","goog/labs/useragent/browser.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","~$goog.labs.userAgent.util","^21","~$goog.string.internal"]]],["^1B","goog/array/array.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^25"]]],["^1O","node_modules/prop-types/checkPropTypes.js"],[1597770557000,1597770557000,1549836454000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","^1W"]]],["^22","~$net.cgrand.macrovich"],[1597780074000],["^1B","goog/debug/error.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/events.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^X","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.utils","^U","^L","^O","^M","^T"]]],["^1B","goog/dom/nodetype.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^K","^X","^M","^U","^W","^L","^O","^T"]]],["^1O","node_modules/scheduler/cjs/scheduler.development.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^1W"]]],["^1O","node_modules/scheduler/cjs/scheduler.production.min.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T"]]],["^1O","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T"]]],["^1O","node_modules/react/index.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development","^1W"]]],["^1B","shadow/js.js"],[1597770557031,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","goog/object/object.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1O","node_modules/react-dom/cjs/react-dom.production.min.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1597770557000,1597770669000],["^1O","node_modules/react/cjs/react.development.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^2=","~$module$node_modules$prop_types$checkPropTypes","^1W"]]],["^1B","goog/math/long.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^25","~$goog.reflect"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/util.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","~$clojure.string"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/core.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^?","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.template","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.impl.component","^1Y","^1[","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.ratom","^1Z","~$day8.re-frame-10x.inlined-deps.reagent.v0v10v0.reagent.dom"]]],["^22","^2E"],[1597779185000],["^1B","goog/string/internal.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1O","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^1W"]]],["^1B","goog/functions/functions.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","clojure/walk.cljs"],[1597770669034,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N"]]],["^1B","goog/structs/map.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/batching.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^1Z","^1Y"]]],["^1O","node_modules/scheduler/index.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development","^1W"]]],["^1B","goog/labs/useragent/engine.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","^26","~$goog.string"]]],["^1B","goog/asserts/asserts.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1B","goog/uri/uri.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","^25","^2K","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/dom.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^A","^1Y","^2C","^1[","^2E"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interop.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","~$goog.async.nextTick","^23","^2E"]]],["^22","^1Z"],[1597779185000],["^1O","node_modules/object-assign/index.js"],[1597770557000,1597770557000,1484580833000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T"]]],["^1O","node_modules/process/browser.js"],[1597770557000,1597770557000,1493209628000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/trace.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^U","^O","~$goog.functions"]]],["^1B","goog/base.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",[]]],["^1B","goog/structs/structs.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","^21"]]],["^1B","clojure/string.cljs"],[1597770669034,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^2K","~$goog.string.StringBuffer"]]],["^1O","node_modules/react/cjs/react.production.min.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^2="]]],["^1B","goog/debug/entrypointregistry.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^25"]]],["^1B","goog/string/string.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^27"]]],["^1B","goog/reflect/reflect.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","goog/labs/useragent/util.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^27"]]],["^1B","goog/string/stringbuffer.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/template.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^?","^2B","~$clojure.walk","^1Y","^2D","^1[","^2E","^1Z","^21"]]],["^22","^T"],[1597779185000],["^1B","goog/iter/iter.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","^25","^2T","~$goog.math"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/db.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^U"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/loggers.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^20"]]],["^1B","goog/async/nexttick.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/debug.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N"]]],["^1O","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1597770557000,1597770557000,1549571078000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T"]]],["^1B","goog/dom/htmlelement.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","cljs/core.cljs"],[1597770669034,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["~$goog.math.Long","~$goog.math.Integer","^2K","^21","^24","~$goog.Uri","^2U"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/interceptor.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^O","^U","^T","^20"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/utils.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^O"]]],["^1B","goog/math/integer.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/router.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^W","^U","^O","^T"]]],["^1O","node_modules/scheduler/tracing.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development","^1W"]]],["^1O","node_modules/react-dom/cjs/react-dom.development.js"],[1597770557000,1597770557000,499162500000,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^1T","^?","^2=","^2>","^2@","~$module$node_modules$scheduler$tracing","^1W"]]],["^1B","clojure/set.cljs"],[1597770669034,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N"]]],["^1B","goog/uri/utils.js"],[1597770556544,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^24","^25","^2K"]]],["^1B","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/registrar.cljc"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^U","^O"]]],["^1B","day8/re_frame_10x/inlined_deps/reagent/v0v10v0/reagent/impl/component.cljs"],[1597779185298,"^1P",["^ ","^1Q",null,"^1R",["^D",[]],"^1S",["^P","^N","^21","^?","^1Y","^1[","^2E","^1Z"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",64],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^K","^R","^L","^S","^T","^U","^U","^V","^W","^X","^X","^T","^T","^W","^W"],"^Y",["^D",["^Z"]],"~:shadow/js-access-global",["^D",["Error"]],"^[",["^ ","^10","^X","^11","^M","^12","^U","^13","^L","^14","^L","^15","^L","^16","^O"],"~:defs",["^ ","~$kind",["^ ","^E","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/kind","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^19",["~$quote",["^19",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^E","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/reg-fx","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^:",13,"~:method-params",["^19",[["^3A","^3B"]]],"~:protocol-impl",null,"~:arglists-meta",["^19",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^3?",["^19",["^3@",["^19",[["^3A","^3B"]]]]],"^3C","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^7",47,"^8",6,"^9",47,"^:",11],"^E","~$day8.re-frame-10x.inlined-deps.re-frame.v0v12v0.re-frame.fx/do-fx","^6","day8/re_frame_10x/inlined_deps/re_frame/v0v12v0/re_frame/fx.cljc","^:",11,"^8",1,"^7",47,"^9",47,"^3;","~$cljs.core/IMap","^3C","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^17",["^ ","^T","^T","^S","^T","^N","^N"],"~:cljs.analyzer/constants",["^ ","^Y",["^D",["~:db","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^43","^3Z","^3R","^3X","^44","^3Y","^3S","^3U","^41","^3[","^40","^45","^42","^3W","^3T","^3V","^3Q"]],"^1>",["^ ","^Z",["^D",[]]],"^1?",["^ "],"^1@",["^P","^N","^K","^X","^M","^U","^W","^L","^O","^T"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1N",[["^49","~:static-fns"],true,["^49","~:elide-asserts"],false,["^49","~:optimize-constants"],null,["^49","^1E"],null,["^49","~:external-config"],null,["^49","~:tooling-config"],null,["^49","~:emit-constants"],null,["^49","~:load-tests"],null,["^49","~:infer-externs"],true,["^49","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^49","~:fn-invoke-direct"],null,["^49","~:source-map"],"/dev/null"]]]