["^ ","~:output",["^ ","~:js","goog.provide('reagent.dom');\nif((typeof reagent !== 'undefined') && (typeof reagent.dom !== 'undefined') && (typeof reagent.dom.roots !== 'undefined')){\n} else {\nreagent.dom.roots = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp = (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn module$node_modules$react_dom$index.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp = (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR__orig_val__46795 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__46796 = true;\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__46796;\n\ntry{var G__46797 = (comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null));\nvar G__46798 = container;\nvar G__46799 = ((function (G__46797,G__46798,_STAR_always_update_STAR__orig_val__46795,_STAR_always_update_STAR__temp_val__46796){\nreturn (function (){\nvar _STAR_always_update_STAR__orig_val__46800 = reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__46801 = false;\nreagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__temp_val__46801;\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp,container], null));\n\nreagent.impl.batching.flush_after_render();\n\nif((!((callback == null)))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__46800;\n}});})(G__46797,G__46798,_STAR_always_update_STAR__orig_val__46795,_STAR_always_update_STAR__temp_val__46796))\n;\nreturn module$node_modules$react_dom$index.render(G__46797,G__46798,G__46799);\n}finally {reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR__orig_val__46795;\n}});\nreagent.dom.re_render_component = (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent's Hiccup syntax), or a React element.\n *   The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render = (function reagent$dom$render(var_args){\nvar G__46816 = arguments.length;\nswitch (G__46816) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$2 = (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,null);\n});\n\nreagent.dom.render.cljs$core$IFn$_invoke$arity$3 = (function (comp,container,callback){\nreagent.ratom.flush_BANG_();\n\nvar f = (function (){\nreturn reagent.impl.template.as_element(((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n});\n\nreagent.dom.render.cljs$lang$maxFixedArity = 3;\n\n/**\n * Remove a component from the given DOM node.\n */\nreagent.dom.unmount_component_at_node = (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node = (function reagent$dom$dom_node(this$){\nreturn module$node_modules$react_dom$index.findDOMNode(this$);\n});\nreagent.impl.template.find_dom_node = reagent.dom.dom_node;\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component 'foo' is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you'll have to introduce a layer\n *   of indirection, for example by using `(render [#'foo])` instead.\n */\nreagent.dom.force_update_all = (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__46818_46839 = cljs.core.seq(cljs.core.vals(cljs.core.deref(reagent.dom.roots)));\nvar chunk__46819_46840 = null;\nvar count__46820_46841 = (0);\nvar i__46821_46842 = (0);\nwhile(true){\nif((i__46821_46842 < count__46820_46841)){\nvar v_46843 = chunk__46819_46840.cljs$core$IIndexed$_nth$arity$2(null,i__46821_46842);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_46843);\n\n\nvar G__46844 = seq__46818_46839;\nvar G__46845 = chunk__46819_46840;\nvar G__46846 = count__46820_46841;\nvar G__46847 = (i__46821_46842 + (1));\nseq__46818_46839 = G__46844;\nchunk__46819_46840 = G__46845;\ncount__46820_46841 = G__46846;\ni__46821_46842 = G__46847;\ncontinue;\n} else {\nvar temp__5735__auto___46848 = cljs.core.seq(seq__46818_46839);\nif(temp__5735__auto___46848){\nvar seq__46818_46849__$1 = temp__5735__auto___46848;\nif(cljs.core.chunked_seq_QMARK_(seq__46818_46849__$1)){\nvar c__4550__auto___46850 = cljs.core.chunk_first(seq__46818_46849__$1);\nvar G__46851 = cljs.core.chunk_rest(seq__46818_46849__$1);\nvar G__46852 = c__4550__auto___46850;\nvar G__46853 = cljs.core.count(c__4550__auto___46850);\nvar G__46854 = (0);\nseq__46818_46839 = G__46851;\nchunk__46819_46840 = G__46852;\ncount__46820_46841 = G__46853;\ni__46821_46842 = G__46854;\ncontinue;\n} else {\nvar v_46858 = cljs.core.first(seq__46818_46849__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(reagent.dom.re_render_component,v_46858);\n\n\nvar G__46860 = cljs.core.next(seq__46818_46849__$1);\nvar G__46861 = null;\nvar G__46862 = (0);\nvar G__46863 = (0);\nseq__46818_46839 = G__46860;\nchunk__46819_46840 = G__46861;\ncount__46820_46841 = G__46862;\ni__46821_46842 = G__46863;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn reagent.impl.batching.flush_after_render();\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/dom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$reagent.dom","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^K","~$reagent.ratom","^L","^A","^A","~$cljs.core","^M","~$goog","^N","~$reagent.impl.template","^O","~$reagent.impl.batching","^P","~$util","^K","~$tmpl","^O","~$ratom","^L","~$batch","^P","^@","^A"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^M","^M","^L","^L","^S","^L"],"~:form",["~#list",["~$ns","^F",["^Z",["^V",["^@","~:as","^@"],["^K","^10","^Q"],["^O","^10","^R"],["^P","^10","^T"],["^L","^10","^S"]]]]],"~:flags",["^ ","^V",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^N","^M","^A","^K","^O","^P","^L"]],"^H","^F","~:resource-id",["~:shadow.build.classpath/resource","reagent/dom.cljs"],"~:compiled-at",1597780543239,"~:resource-name","reagent/dom.cljs","~:warnings",[],"~:source","(ns reagent.dom\n  (:require [react-dom :as react-dom]\n            [reagent.impl.util :as util]\n            [reagent.impl.template :as tmpl]\n            [reagent.impl.batching :as batch]\n            [reagent.ratom :as ratom]))\n\n(defonce ^:private roots (atom {}))\n\n(defn- unmount-comp [container]\n  (swap! roots dissoc container)\n  (react-dom/unmountComponentAtNode container))\n\n(defn- render-comp [comp container callback]\n  (binding [util/*always-update* true]\n    (react-dom/render (comp) container\n      (fn []\n        (binding [util/*always-update* false]\n          (swap! roots assoc container [comp container])\n          (batch/flush-after-render)\n          (if (some? callback)\n            (callback)))))))\n\n(defn- re-render-component [comp container]\n  (render-comp comp container nil))\n\n(defn render\n  \"Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.\"\n  ([comp container]\n   (render comp container nil))\n  ([comp container callback]\n   (ratom/flush!)\n   (let [f (fn []\n             (tmpl/as-element (if (fn? comp) (comp) comp)))]\n     (render-comp f container callback))))\n\n(defn unmount-component-at-node\n  \"Remove a component from the given DOM node.\"\n  [container]\n  (unmount-comp container))\n\n(defn dom-node\n  \"Returns the root DOM node of a mounted component.\"\n  [this]\n  (react-dom/findDOMNode this))\n\n(set! tmpl/find-dom-node dom-node)\n\n(defn force-update-all\n  \"Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead.\"\n  []\n  (ratom/flush!)\n  (doseq [v (vals @roots)]\n    (apply re-render-component v))\n  (batch/flush-after-render))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAOA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAmBC,AAAM,AAAA,AAACC;;AAE1B,AAAA,AAAOC,AAAcC;AAArB,AACE,AAACC,AAAMJ,AAAMK,AAAOF;;AACpB,AAACG,AAAiCH;;AAEpC,AAAA,AAAOI,AAAaC,AAAKL,AAAUM;AAAnC,AACE,AAAAC,AAAUE;AAAVD,AAAA;AAAA,AAAA,AAAAA,AAAUC;;AAAV,AAAA,AACE,AAAAC,AAAkB,AAACL,AAAAA,AAAAA;AAAnBM,AAAyBX;AAAzBY,AACE;;AAAA,AACE,AAAAE,AAAUL;AAAVM,AAAA;AAAA,AAAA,AAAAA,AAAUN;;AAAV,AAAA,AACE,AAAA,AAACO,AAAMnB,AAAMoB,AAAMjB,AAAWK,AAAKL;;AACnC,AAACkB;;AACD,AAAI,AAAA,AAAA,AAAOZ;AACT,AAACA,AAAAA,AAAAA;;AADH;;AAHF,AAAA,AAAAQ,AAAUL;;;AAFd,AAAA,AAAAC,AAAAC,AAAAC,AAACC;AADH,AAAA,AAAAN,AAAUE;;AASZ,AAAA,AAAOU,AAAqBd,AAAKL;AAAjC,AACE,AAAA,AAACI,AAAYC,AAAKL;;AAEpB,AAAA;;;;;;;;;AAAA,AAAAoB,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAQFjB,AAAKL;AART,AASG,AAAA,AAACwB,AAAOnB,AAAKL;;;AAThB,AAAA,AAAA,AAAMsB,AAUFjB,AAAKL,AAAUM;AAVnB,AAWG,AAACmB;;AACD,AAAMC,AAAE;AAAA,AACE,AAACC,AAAgB,AAAI,AAACC,AAAIvB,AAAM,AAACA,AAAAA,AAAAA,AAAMA;;AADjD,AAEE,AAACD,AAAYsB,AAAE1B,AAAUM;;;AAd9B,AAAA,AAAA,AAAMgB;;AAAN,AAgBA;;;AAAA,AAAMO,AAEH7B;AAFH,AAGE,AAACD,AAAaC;;AAEhB;;;AAAA,AAAM8B,AAEHC;AAFH,AAGE,AAACC,AAAsBD;;AAEzB,AAAME,AAAmBH;AAEzB;;;;;;;;;;;AAAA,AAAMI;AAAN,AAWE,AAACT;;AACD,AAAAU,AAAA,AAAAC,AAAU,AAAA,AAAAa,AAACC,AAAMrD;AAAjBwC,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACE,AAACG,AAAMhC,AAAoB6B;;AAD7B;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAEA,AAACjB","names",["js/reagent","js/reagent.dom","js/reagent.dom.roots","reagent.dom/roots","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","reagent.dom/unmount-comp","container","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc","js/module$node_modules$react_dom$index.unmountComponentAtNode","reagent.dom/render-comp","comp","callback","*always-update*-orig-val__46795","*always-update*-temp-val__46796","reagent.impl.util/*always-update*","G__46797","G__46798","G__46799","js/module$node_modules$react_dom$index.render","*always-update*-orig-val__46800","*always-update*-temp-val__46801","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","reagent.impl.batching/flush-after-render","reagent.dom/re-render-component","var_args","G__46816","reagent.dom/render","js/Error","reagent.dom.render.cljs$core$IFn$_invoke$arity$3","reagent.ratom/flush!","f","reagent.impl.template/as-element","cljs.core/fn?","reagent.dom/unmount-component-at-node","reagent.dom/dom-node","this","js/module$node_modules$react_dom$index.findDOMNode","reagent.impl.template/find-dom-node","reagent.dom/force-update-all","seq__46818","cljs.core/seq","chunk__46819","count__46820","i__46821","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","v","cljs.core/deref","cljs.core/vals","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1597770557000,1597770557000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",15,"~:deps-ids",["^D",[3,14,10]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development","~$module$node_modules$process$browser"]]],["^15","reagent/impl/batching.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M","~$reagent.debug","^K"]]],["~:macro","^M"],[1597770669000],["^15","goog/math/math.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","~$goog.array","~$goog.asserts"]]],["^1L","^1K"],[1597780074000],["^15","goog/array/array.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1N"]]],["^1B","node_modules/prop-types/checkPropTypes.js"],[1597770557000,1597770557000,1549836454000,"^1C",["^ ","^1D",4,"^1E",["^D",[3,2]],"^1F",["^1G","~$module$node_modules$prop_types$lib$ReactPropTypesSecret","^1J"]]],["^15","reagent/impl/util.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M","~$clojure.string"]]],["^15","goog/debug/error.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","goog/dom/nodetype.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^1B","node_modules/scheduler/cjs/scheduler.development.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",8,"^1E",["^D",[3]],"^1F",["^1G","^1J"]]],["^15","reagent/ratom.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M","^K","^1K","^P","~$clojure.set","~$goog.object"]]],["^1B","node_modules/scheduler/cjs/scheduler.production.min.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",7,"^1E",["^D",[]],"^1F",["^1G"]]],["^1B","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",11,"^1E",["^D",[]],"^1F",["^1G"]]],["^1B","node_modules/react/index.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",6,"^1E",["^D",[1,3,5]],"^1F",["^1G","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development","^1J"]]],["^15","shadow/js.js"],[1597770557031,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","goog/object/object.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","reagent/impl/template.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[6]],"^1F",["^N","^M","^?","^1P","~$clojure.walk","^K","~$reagent.impl.component","^P","^L","^1K","^1R"]]],["^1B","node_modules/react-dom/cjs/react-dom.production.min.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",10,"^1E",["^D",[0,6,9]],"^1F",["^1G","^?","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1597770557000,1597770669000],["^1B","node_modules/react/cjs/react.development.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",5,"^1E",["^D",[0,4,3]],"^1F",["^1G","^1W","~$module$node_modules$prop_types$checkPropTypes","^1J"]]],["^1L","^L"],[1597780074000],["^15","goog/math/long.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1N","~$goog.reflect"]]],["^15","goog/string/internal.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^1B","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",12,"^1E",["^D",[3]],"^1F",["^1G","^1J"]]],["^15","goog/functions/functions.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","reagent/impl/component.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[6]],"^1F",["^N","^M","^1R","^?","^K","^P","^L","^1K"]]],["^15","clojure/walk.cljs"],[1597770669034,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M"]]],["^15","goog/structs/map.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1B","node_modules/scheduler/index.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",9,"^1E",["^D",[7,3,8]],"^1F",["^1G","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development","^1J"]]],["^15","goog/asserts/asserts.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^15","goog/uri/uri.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1M","^1N","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","node_modules/object-assign/index.js"],[1597770557000,1597770557000,1484580833000,"^1C",["^ ","^1D",0,"^1E",["^D",[]],"^1F",["^1G"]]],["^1B","node_modules/process/browser.js"],[1597770557000,1597770557000,1493209628000,"^1C",["^ ","^1D",3,"^1E",["^D",[]],"^1F",["^1G"]]],["^15","goog/base.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",[]]],["^15","goog/structs/structs.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1M","^1R"]]],["^15","clojure/string.cljs"],[1597770669034,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M","^26","~$goog.string.StringBuffer"]]],["^1B","node_modules/react/cjs/react.production.min.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",1,"^1E",["^D",[0]],"^1F",["^1G","^1W"]]],["^15","goog/string/string.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","~$goog.string.internal"]]],["^15","goog/reflect/reflect.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","goog/string/stringbuffer.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^15","goog/iter/iter.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1M","^1N","~$goog.functions","~$goog.math"]]],["^15","reagent/dom.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[15]],"^1F",["^N","^M","^A","^K","^O","^P","^L"]]],["^1B","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1597770557000,1597770557000,1549571078000,"^1C",["^ ","^1D",2,"^1E",["^D",[]],"^1F",["^1G"]]],["^15","cljs/core.cljs"],[1597770669034,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["~$goog.math.Long","~$goog.math.Integer","^26","^1R","^1M","~$goog.Uri","^2<"]]],["^15","reagent/debug.cljs"],[1597780074412,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M"]]],["^15","goog/math/integer.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N"]]],["^1B","node_modules/scheduler/tracing.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",13,"^1E",["^D",[3,12,11]],"^1F",["^1G","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development","^1J"]]],["^1B","node_modules/react-dom/cjs/react-dom.development.js"],[1597770557000,1597770557000,499162500000,"^1C",["^ ","^1D",14,"^1E",["^D",[0,4,13,6,3,9]],"^1F",["^1G","^?","^1W","^1X","^1Z","~$module$node_modules$scheduler$tracing","^1J"]]],["^15","clojure/set.cljs"],[1597770669034,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^M"]]],["^15","goog/uri/utils.js"],[1597770556544,"^1C",["^ ","^1D",null,"^1E",["^D",[]],"^1F",["^N","^1M","^1N","^26"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/dom.cljs","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"~:shadow/js-access-properties",["^D",["findDOMNode","render","unmountComponentAtNode"]],"^E","^F","^I",null,"^J",["^ ","^K","^K","^L","^L","^A","^A","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^K","^R","^O","^S","^L","^T","^P","^@","^A"],"^U",["^D",["^V"]],"~:shadow/js-access-global",["^D",["Error"]],"^W",null,"~:defs",["^ ","~$roots",["^ ","^5",["^ ","^6","reagent/dom.cljs","^7",8,"^8",20,"^9",8,"^:",25,"~:private",true],"^2K",true,"^E","~$reagent.dom/roots","^6","reagent/dom.cljs","^:",25,"^8",1,"^7",8,"^9",8,"~:tag","~$cljs.core/Atom"],"~$unmount-comp",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/dom.cljs","^7",10,"^8",8,"^9",10,"^:",20,"^2K",true,"~:arglists",["^Z",["~$quote",["^Z",[["~$container"]]]]]],"^2K",true,"^E","~$reagent.dom/unmount-comp","^6","reagent/dom.cljs","^:",20,"~:method-params",["^Z",[["^2S"]]],"~:protocol-impl",null,"~:arglists-meta",["^Z",[null,null]],"^8",1,"~:variadic?",false,"^7",10,"~:ret-tag","~$js","^9",10,"~:max-fixed-arity",1,"~:fn-var",true,"^2Q",["^Z",["^2R",["^Z",[["^2S"]]]]]],"~$render-comp",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",14,"^8",8,"^9",14,"^:",19,"^2K",true,"^2Q",["^Z",["^2R",["^Z",[["~$comp","^2S","~$callback"]]]]]],"^2K",true,"^E","~$reagent.dom/render-comp","^6","reagent/dom.cljs","^:",19,"^2U",["^Z",[["^32","^2S","^33"]]],"^2V",null,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"^7",14,"^9",14,"^2[",3,"^30",true,"^2Q",["^Z",["^2R",["^Z",[["^32","^2S","^33"]]]]]],"~$re-render-component",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",24,"^8",8,"^9",24,"^:",27,"^2K",true,"^2Q",["^Z",["^2R",["^Z",[["^32","^2S"]]]]]],"^2K",true,"^E","~$reagent.dom/re-render-component","^6","reagent/dom.cljs","^:",27,"^2U",["^Z",[["^32","^2S"]]],"^2V",null,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"^7",24,"^2Y","~$any","^9",24,"^2[",2,"^30",true,"^2Q",["^Z",["^2R",["^Z",[["^32","^2S"]]]]]],"~$render",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",27,"^8",7,"^9",27,"^:",13,"^2Q",["^Z",["^2R",["^Z",[["^32","^2S"],["^32","^2S","^33"]]]]],"~:doc","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance.","~:top-fn",["^ ","^2X",false,"~:fixed-arity",3,"^2[",3,"^2U",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^2Q",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^2W",["^Z",[null,null]]]],"^E","~$reagent.dom/render","^6","reagent/dom.cljs","^:",13,"^3:",["^ ","^2X",false,"^3;",3,"^2[",3,"^2U",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^2Q",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^2W",["^Z",[null,null]]],"^2U",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^2V",null,"^3;",3,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"~:methods",[["^ ","^3;",2,"^2X",false,"^2M","^37"],["^ ","^3;",3,"^2X",false,"^2M","^37"]],"^7",27,"^9",27,"^2[",3,"^30",true,"^2Q",["^Z",[["^32","^2S"],["^32","^2S","^33"]]],"^39","Render a Reagent component into the DOM. The first argument may be\n  either a vector (using Reagent's Hiccup syntax), or a React element.\n  The second argument should be a DOM node.\n\n  Optionally takes a callback that is called when the component is in place.\n\n  Returns the mounted component instance."],"~$unmount-component-at-node",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",43,"^8",7,"^9",43,"^:",32,"^2Q",["^Z",["^2R",["^Z",[["^2S"]]]]],"^39","Remove a component from the given DOM node."],"^E","~$reagent.dom/unmount-component-at-node","^6","reagent/dom.cljs","^:",32,"^2U",["^Z",[["^2S"]]],"^2V",null,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"^7",43,"^2Y","^2Z","^9",43,"^2[",1,"^30",true,"^2Q",["^Z",["^2R",["^Z",[["^2S"]]]]],"^39","Remove a component from the given DOM node."],"~$dom-node",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",48,"^8",7,"^9",48,"^:",15,"^2Q",["^Z",["^2R",["^Z",[["~$this"]]]]],"^39","Returns the root DOM node of a mounted component."],"^E","~$reagent.dom/dom-node","^6","reagent/dom.cljs","^:",15,"^2U",["^Z",[["^3A"]]],"^2V",null,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"^7",48,"^2Y","^2Z","^9",48,"^2[",1,"^30",true,"^2Q",["^Z",["^2R",["^Z",[["^3A"]]]]],"^39","Returns the root DOM node of a mounted component."],"~$force-update-all",["^ ","^2P",null,"^5",["^ ","^6","reagent/dom.cljs","^7",55,"^8",7,"^9",55,"^:",23,"^2Q",["^Z",["^2R",["^Z",[[]]]]],"^39","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."],"^E","~$reagent.dom/force-update-all","^6","reagent/dom.cljs","^:",23,"^2U",["^Z",[[]]],"^2V",null,"^2W",["^Z",[null,null]],"^8",1,"^2X",false,"^7",55,"^2Y","^37","^9",55,"^2[",0,"^30",true,"^2Q",["^Z",["^2R",["^Z",[[]]]]],"^39","Force re-rendering of all mounted Reagent components. This is\n  probably only useful in a development environment, when you want to\n  update components in response to some dynamic changes to code.\n\n  Note that force-update-all may not update root components. This\n  happens if a component 'foo' is mounted with `(render [foo])` (since\n  functions are passed by value, and not by reference, in\n  ClojureScript). To get around this you'll have to introduce a layer\n  of indirection, for example by using `(render [#'foo])` instead."]],"^X",["^ ","^M","^M","^L","^L","^S","^L"],"^11",["^ ","^V",["^D",[]]],"^12",["^ "],"^13",["^N","^M","^A","^K","^O","^P","^L"]],"^H","^F","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1A",[["^3G","~:static-fns"],true,["^3G","~:elide-asserts"],true,["^3G","~:optimize-constants"],null,["^3G","^18"],null,["^3G","~:external-config"],null,["^3G","~:tooling-config"],null,["^3G","~:emit-constants"],null,["^3G","~:load-tests"],false,["^3G","~:infer-externs"],true,["^3G","^1:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^3G","~:fn-invoke-direct"],null,["^3G","~:source-map"],null]]]