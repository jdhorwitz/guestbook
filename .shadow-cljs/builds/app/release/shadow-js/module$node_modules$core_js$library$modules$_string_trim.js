["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/core-js/library/modules/_string-trim.js"],"~:js","shadow$provide[109]=function(h,b,g,d){var f=b(32),k=b(35),m=b(23),p=b(108);h=\"[\"+p+\"]\";var n=RegExp(\"^\"+h+h+\"*\"),u=RegExp(h+h+\"*$\");h=function(b,d,g){var h={},k=m(function(){return!!p[b]()||\"​\"!=\"​\"[b]()});d=h[b]=k?d(z):p[b];g&&(h[g]=d);f(f.P+f.F*k,\"String\",h)};var z=h.trim=function(b,d){b=String(k(b));d&1&&(b=b.replace(n,\"\"));d&2&&(b=b.replace(u,\"\"));return b};g.exports=h}","~:source","shadow$provide[109] = function(global,require,module,exports) {\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$core_js$library$modules$_defined","~$module$node_modules$core_js$library$modules$_string_ws","~$shadow.js","~$module$node_modules$core_js$library$modules$_export","~$module$node_modules$core_js$library$modules$_fails"]],"~:properties",["^5",["trim"]],"~:compiled-at",1597780537274,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$core_js$library$modules$_string_trim.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC9D,IAAIC,EAAUH,CAAA,CAAQ,EAAR,CAAd,CACII,EAAUJ,CAAA,CAAQ,EAAR,CADd,CAEIK,EAAQL,CAAA,CAAQ,EAAR,CAFZ,CAGIM,EAASN,CAAA,CAAQ,GAAR,CACTO,EAAAA,CAAQ,GAARA,CAAcD,CAAdC,CAAuB,GAE3B,KAAIC,EAAQC,MAAA,CAAO,GAAP,CAAaF,CAAb,CAAqBA,CAArB,CAA6B,GAA7B,CAAZ,CACIG,EAAQD,MAAA,CAAOF,CAAP,CAAeA,CAAf,CAAuB,IAAvB,CAERI,EAAAA,CAAWA,QAAS,CAACC,CAAD,CAAMC,CAAN,CAAYC,CAAZ,CAAmB,CACzC,IAAIC,EAAM,EAAV,CACIC,EAAQX,CAAA,CAAM,QAAS,EAAG,CAC5B,MAAO,CAAC,CAACC,CAAA,CAAOM,CAAP,CAAA,EAAT,EAPMK,IAON,EAPMA,IAOoB,CAAIL,CAAJ,CAAA,EADE,CAAlB,CAGRM,EAAAA,CAAKH,CAAA,CAAIH,CAAJ,CAALM,CAAgBF,CAAA,CAAQH,CAAA,CAAKM,CAAL,CAAR,CAAqBb,CAAA,CAAOM,CAAP,CACrCE,EAAJ,GAAWC,CAAA,CAAID,CAAJ,CAAX,CAAwBI,CAAxB,CACAf,EAAA,CAAQA,CAAAiB,EAAR,CAAoBjB,CAAAkB,EAApB,CAAgCL,CAAhC,CAAuC,QAAvC,CAAiDD,CAAjD,CAPyC,CAa3C,KAAII,EAAOR,CAAAQ,KAAPA,CAAuBG,QAAS,CAACC,CAAD,CAASC,CAAT,CAAe,CACjDD,CAAA,CAASE,MAAA,CAAOrB,CAAA,CAAQmB,CAAR,CAAP,CACLC,EAAJ,CAAW,CAAX,GAAcD,CAAd,CAAuBA,CAAAG,QAAA,CAAelB,CAAf,CAAsB,EAAtB,CAAvB,CACIgB,EAAJ,CAAW,CAAX,GAAcD,CAAd,CAAuBA,CAAAG,QAAA,CAAehB,CAAf,CAAsB,EAAtB,CAAvB,CACA,OAAOa,EAJ0C,CAOnDtB,EAAAC,QAAA,CAAiBS,CA9B6C;\",\n\"sources\":[\"node_modules/core-js/library/modules/_string-trim.js\"],\n\"sourcesContent\":[\"shadow$provide[109] = function(global,require,module,exports) {\\nvar $export = require('./_export');\\nvar defined = require('./_defined');\\nvar fails = require('./_fails');\\nvar spaces = require('./_string-ws');\\nvar space = '[' + spaces + ']';\\nvar non = '\\\\u200b\\\\u0085';\\nvar ltrim = RegExp('^' + space + space + '*');\\nvar rtrim = RegExp(space + space + '*$');\\n\\nvar exporter = function (KEY, exec, ALIAS) {\\n  var exp = {};\\n  var FORCE = fails(function () {\\n    return !!spaces[KEY]() || non[KEY]() != non;\\n  });\\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\\n  if (ALIAS) exp[ALIAS] = fn;\\n  $export($export.P + $export.F * FORCE, 'String', exp);\\n};\\n\\n// 1 -> String#trimLeft\\n// 2 -> String#trimRight\\n// 3 -> String#trim\\nvar trim = exporter.trim = function (string, TYPE) {\\n  string = String(defined(string));\\n  if (TYPE & 1) string = string.replace(ltrim, '');\\n  if (TYPE & 2) string = string.replace(rtrim, '');\\n  return string;\\n};\\n\\nmodule.exports = exporter;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"$export\",\"defined\",\"fails\",\"spaces\",\"space\",\"ltrim\",\"RegExp\",\"rtrim\",\"exporter\",\"KEY\",\"exec\",\"ALIAS\",\"exp\",\"FORCE\",\"non\",\"fn\",\"trim\",\"P\",\"F\",\"exporter.trim\",\"string\",\"TYPE\",\"String\",\"replace\"]\n}\n"]