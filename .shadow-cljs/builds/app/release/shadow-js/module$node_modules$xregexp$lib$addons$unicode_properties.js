["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/xregexp/lib/addons/unicode-properties.js"],"~:js","shadow$provide[123]=function(h,b,g,d){h=b(16);Object.defineProperty(d,\"__esModule\",{value:!0});d.default=void 0;var f=h(b(122));d.default=function(b){if(!b.addUnicodeData)throw new ReferenceError(\"Unicode Base must be loaded before Unicode Properties\");var d=f.default;d.push({name:\"Assigned\",inverseOf:\"Cn\"});b.addUnicodeData(d)};g.exports=d[\"default\"]}","~:source","shadow$provide[123] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _properties = _interopRequireDefault(require(\"../../tools/output/properties\"));\n\n/*!\n * XRegExp Unicode Properties 4.2.4\n * <xregexp.com>\n * Steven Levithan (c) 2012-present MIT License\n * Unicode data by Mathias Bynens <mathiasbynens.be>\n */\nvar _default = function _default(XRegExp) {\n  /**\n   * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\n   * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\n   * UAX #44 <http://unicode.org/reports/tr44/>:\n   *\n   * - Alphabetic\n   *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\n   *   Lo + Nl + Other_Alphabetic.\n   *\n   * - Default_Ignorable_Code_Point\n   *   For programmatic determination of default ignorable code points. New characters that should\n   *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\n   *   permitting programs to correctly handle the default rendering of such characters when not\n   *   otherwise supported.\n   *\n   * - Lowercase\n   *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\n   *\n   * - Noncharacter_Code_Point\n   *   Code points permanently reserved for internal use.\n   *\n   * - Uppercase\n   *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\n   *\n   * - White_Space\n   *   Spaces, separator characters and other control characters which should be treated by\n   *   programming languages as \"white space\" for the purpose of parsing elements.\n   *\n   * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\n   * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\n   * included in XRegExp's Unicode Categories and Unicode Scripts addons.\n   *\n   * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\n   *\n   * Uses Unicode 11.0.0.\n   *\n   * @requires XRegExp, Unicode Base\n   */\n  if (!XRegExp.addUnicodeData) {\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\n  }\n\n  var unicodeData = _properties.default; // Add non-generated data\n\n  unicodeData.push({\n    name: 'Assigned',\n    // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\n    // Categories addon is required to use this property\n    inverseOf: 'Cn'\n  });\n  XRegExp.addUnicodeData(unicodeData);\n};\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$$babel$runtime_corejs2$helpers$interopRequireDefault","~$module$node_modules$xregexp$tools$output$properties"]],"~:properties",["^5",["inverseOf","__esModule","name","value","default"]],"~:compiled-at",1597780537309,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$xregexp$lib$addons$unicode_properties.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG1DC,CAAAA,CAAyBH,CAAA,CAAQ,EAAR,CAE7BI,OAAAC,eAAA,CAAsBH,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,EAAAK,QAAA,CAAkB,IAAK,EAEvB,KAAIC,EAAcL,CAAA,CAAuBH,CAAA,CAAQ,GAAR,CAAvB,CA8DlBE,EAAAK,QAAA,CAtDeE,QAAiB,CAACC,CAAD,CAAU,CAuCxC,GAAI,CAACA,CAAAC,eAAL,CACE,KAAM,KAAIC,cAAJ,CAAmB,uDAAnB,CAAN,CAGF,IAAIC,EAAcL,CAAAD,QAElBM,EAAAC,KAAA,CAAiB,CACfC,KAAM,UADS,CAIfC,UAAW,IAJI,CAAjB,CAMAN,EAAAC,eAAA,CAAuBE,CAAvB,CAnDwC,CAuD1CZ,EAAAC,QAAA,CAAiBA,CAAA,CAAQ,SAAR,CAzE6C;\",\n\"sources\":[\"node_modules/xregexp/lib/addons/unicode-properties.js\"],\n\"sourcesContent\":[\"shadow$provide[123] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime-corejs2/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _properties = _interopRequireDefault(require(\\\"../../tools/output/properties\\\"));\\n\\n/*!\\n * XRegExp Unicode Properties 4.2.4\\n * <xregexp.com>\\n * Steven Levithan (c) 2012-present MIT License\\n * Unicode data by Mathias Bynens <mathiasbynens.be>\\n */\\nvar _default = function _default(XRegExp) {\\n  /**\\n   * Adds properties to meet the UTS #18 Level 1 RL1.2 requirements for Unicode regex support. See\\n   * <http://unicode.org/reports/tr18/#RL1.2>. Following are definitions of these properties from\\n   * UAX #44 <http://unicode.org/reports/tr44/>:\\n   *\\n   * - Alphabetic\\n   *   Characters with the Alphabetic property. Generated from: Lowercase + Uppercase + Lt + Lm +\\n   *   Lo + Nl + Other_Alphabetic.\\n   *\\n   * - Default_Ignorable_Code_Point\\n   *   For programmatic determination of default ignorable code points. New characters that should\\n   *   be ignored in rendering (unless explicitly supported) will be assigned in these ranges,\\n   *   permitting programs to correctly handle the default rendering of such characters when not\\n   *   otherwise supported.\\n   *\\n   * - Lowercase\\n   *   Characters with the Lowercase property. Generated from: Ll + Other_Lowercase.\\n   *\\n   * - Noncharacter_Code_Point\\n   *   Code points permanently reserved for internal use.\\n   *\\n   * - Uppercase\\n   *   Characters with the Uppercase property. Generated from: Lu + Other_Uppercase.\\n   *\\n   * - White_Space\\n   *   Spaces, separator characters and other control characters which should be treated by\\n   *   programming languages as \\\"white space\\\" for the purpose of parsing elements.\\n   *\\n   * The properties ASCII, Any, and Assigned are also included but are not defined in UAX #44. UTS\\n   * #18 RL1.2 additionally requires support for Unicode scripts and general categories. These are\\n   * included in XRegExp's Unicode Categories and Unicode Scripts addons.\\n   *\\n   * Token names are case insensitive, and any spaces, hyphens, and underscores are ignored.\\n   *\\n   * Uses Unicode 11.0.0.\\n   *\\n   * @requires XRegExp, Unicode Base\\n   */\\n  if (!XRegExp.addUnicodeData) {\\n    throw new ReferenceError('Unicode Base must be loaded before Unicode Properties');\\n  }\\n\\n  var unicodeData = _properties.default; // Add non-generated data\\n\\n  unicodeData.push({\\n    name: 'Assigned',\\n    // Since this is defined as the inverse of Unicode category Cn (Unassigned), the Unicode\\n    // Categories addon is required to use this property\\n    inverseOf: 'Cn'\\n  });\\n  XRegExp.addUnicodeData(unicodeData);\\n};\\n\\nexports.default = _default;\\nmodule.exports = exports[\\\"default\\\"];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"_properties\",\"_default\",\"XRegExp\",\"addUnicodeData\",\"ReferenceError\",\"unicodeData\",\"push\",\"name\",\"inverseOf\"]\n}\n"]